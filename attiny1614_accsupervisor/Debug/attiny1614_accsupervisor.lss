
attiny1614_accsupervisor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00803800  00000b2c  00000bc0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b2c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003e  00803802  00803802  00000bc2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000bc2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000bf4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  00000c34  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003508  00000000  00000000  00000d7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001cc6  00000000  00000000  00004284  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b21  00000000  00000000  00005f4a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000033c  00000000  00000000  00006a6c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001c29  00000000  00000000  00006da8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009e7  00000000  00000000  000089d1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000118  00000000  00000000  000093b8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__vector_7>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  6c:	0c 94 8d 00 	jmp	0x11a	; 0x11a <__vector_27>
  70:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	cd bf       	out	0x3d, r28	; 61
  84:	df e3       	ldi	r29, 0x3F	; 63
  86:	de bf       	out	0x3e, r29	; 62

00000088 <__do_copy_data>:
  88:	18 e3       	ldi	r17, 0x38	; 56
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b8 e3       	ldi	r27, 0x38	; 56
  8e:	ec e2       	ldi	r30, 0x2C	; 44
  90:	fb e0       	ldi	r31, 0x0B	; 11
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a2 30       	cpi	r26, 0x02	; 2
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	28 e3       	ldi	r18, 0x38	; 56
  a0:	a2 e0       	ldi	r26, 0x02	; 2
  a2:	b8 e3       	ldi	r27, 0x38	; 56
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	a0 34       	cpi	r26, 0x40	; 64
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 06 02 	call	0x40c	; 0x40c <main>
  b2:	0c 94 94 05 	jmp	0xb28	; 0xb28 <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <__vector_7>:
		if(vacc_volt >= vacc_threshold) relayOn();
	}
}

void doTx2CmdThings(void)
{
  ba:	1f 92       	push	r1
  bc:	0f 92       	push	r0
  be:	0f b6       	in	r0, 0x3f	; 63
  c0:	0f 92       	push	r0
  c2:	11 24       	eor	r1, r1
  c4:	2f 93       	push	r18
  c6:	3f 93       	push	r19
  c8:	4f 93       	push	r20
  ca:	5f 93       	push	r21
  cc:	6f 93       	push	r22
  ce:	7f 93       	push	r23
  d0:	8f 93       	push	r24
  d2:	9f 93       	push	r25
  d4:	af 93       	push	r26
  d6:	bf 93       	push	r27
  d8:	ef 93       	push	r30
  da:	ff 93       	push	r31
  dc:	81 e0       	ldi	r24, 0x01	; 1
  de:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <__TEXT_REGION_LENGTH__+0x700153>
  e2:	0e 94 5c 03 	call	0x6b8	; 0x6b8 <incTick>
  e6:	80 91 01 38 	lds	r24, 0x3801	; 0x803801 <tx2_timeout>
  ea:	88 23       	and	r24, r24
  ec:	29 f0       	breq	.+10     	; 0xf8 <__vector_7+0x3e>
  ee:	80 91 01 38 	lds	r24, 0x3801	; 0x803801 <tx2_timeout>
  f2:	81 50       	subi	r24, 0x01	; 1
  f4:	80 93 01 38 	sts	0x3801, r24	; 0x803801 <tx2_timeout>
  f8:	ff 91       	pop	r31
  fa:	ef 91       	pop	r30
  fc:	bf 91       	pop	r27
  fe:	af 91       	pop	r26
 100:	9f 91       	pop	r25
 102:	8f 91       	pop	r24
 104:	7f 91       	pop	r23
 106:	6f 91       	pop	r22
 108:	5f 91       	pop	r21
 10a:	4f 91       	pop	r20
 10c:	3f 91       	pop	r19
 10e:	2f 91       	pop	r18
 110:	0f 90       	pop	r0
 112:	0f be       	out	0x3f, r0	; 63
 114:	0f 90       	pop	r0
 116:	1f 90       	pop	r1
 118:	18 95       	reti

0000011a <__vector_27>:
 11a:	1f 92       	push	r1
 11c:	0f 92       	push	r0
 11e:	0f b6       	in	r0, 0x3f	; 63
 120:	0f 92       	push	r0
 122:	11 24       	eor	r1, r1
 124:	2f 93       	push	r18
 126:	3f 93       	push	r19
 128:	8f 93       	push	r24
 12a:	9f 93       	push	r25
 12c:	ef 93       	push	r30
 12e:	ff 93       	push	r31
 130:	1f c0       	rjmp	.+62     	; 0x170 <__vector_27+0x56>
 132:	80 91 01 08 	lds	r24, 0x0801	; 0x800801 <__TEXT_REGION_LENGTH__+0x700801>
 136:	81 fd       	sbrc	r24, 1
 138:	1b c0       	rjmp	.+54     	; 0x170 <__vector_27+0x56>
 13a:	80 91 0a 38 	lds	r24, 0x380A	; 0x80380a <uart0_rbuf_wpnt>
 13e:	90 91 0b 38 	lds	r25, 0x380B	; 0x80380b <uart0_rbuf_wpnt+0x1>
 142:	9c 01       	movw	r18, r24
 144:	2f 5f       	subi	r18, 0xFF	; 255
 146:	3f 4f       	sbci	r19, 0xFF	; 255
 148:	20 93 0a 38 	sts	0x380A, r18	; 0x80380a <uart0_rbuf_wpnt>
 14c:	30 93 0b 38 	sts	0x380B, r19	; 0x80380b <uart0_rbuf_wpnt+0x1>
 150:	20 91 00 08 	lds	r18, 0x0800	; 0x800800 <__TEXT_REGION_LENGTH__+0x700800>
 154:	fc 01       	movw	r30, r24
 156:	e4 5f       	subi	r30, 0xF4	; 244
 158:	f7 4c       	sbci	r31, 0xC7	; 199
 15a:	20 83       	st	Z, r18
 15c:	80 91 0a 38 	lds	r24, 0x380A	; 0x80380a <uart0_rbuf_wpnt>
 160:	90 91 0b 38 	lds	r25, 0x380B	; 0x80380b <uart0_rbuf_wpnt+0x1>
 164:	80 97       	sbiw	r24, 0x20	; 32
 166:	20 f0       	brcs	.+8      	; 0x170 <__vector_27+0x56>
 168:	10 92 0a 38 	sts	0x380A, r1	; 0x80380a <uart0_rbuf_wpnt>
 16c:	10 92 0b 38 	sts	0x380B, r1	; 0x80380b <uart0_rbuf_wpnt+0x1>
 170:	80 91 01 08 	lds	r24, 0x0801	; 0x800801 <__TEXT_REGION_LENGTH__+0x700801>
 174:	88 23       	and	r24, r24
 176:	ec f2       	brlt	.-70     	; 0x132 <__vector_27+0x18>
 178:	20 91 08 38 	lds	r18, 0x3808	; 0x803808 <uart0_rbuf_rpnt>
 17c:	30 91 09 38 	lds	r19, 0x3809	; 0x803809 <uart0_rbuf_rpnt+0x1>
 180:	80 91 0a 38 	lds	r24, 0x380A	; 0x80380a <uart0_rbuf_wpnt>
 184:	90 91 0b 38 	lds	r25, 0x380B	; 0x80380b <uart0_rbuf_wpnt+0x1>
 188:	28 17       	cp	r18, r24
 18a:	39 07       	cpc	r19, r25
 18c:	99 f4       	brne	.+38     	; 0x1b4 <__vector_27+0x9a>
 18e:	80 91 0a 38 	lds	r24, 0x380A	; 0x80380a <uart0_rbuf_wpnt>
 192:	90 91 0b 38 	lds	r25, 0x380B	; 0x80380b <uart0_rbuf_wpnt+0x1>
 196:	01 96       	adiw	r24, 0x01	; 1
 198:	80 93 08 38 	sts	0x3808, r24	; 0x803808 <uart0_rbuf_rpnt>
 19c:	90 93 09 38 	sts	0x3809, r25	; 0x803809 <uart0_rbuf_rpnt+0x1>
 1a0:	80 91 08 38 	lds	r24, 0x3808	; 0x803808 <uart0_rbuf_rpnt>
 1a4:	90 91 09 38 	lds	r25, 0x3809	; 0x803809 <uart0_rbuf_rpnt+0x1>
 1a8:	80 97       	sbiw	r24, 0x20	; 32
 1aa:	20 f0       	brcs	.+8      	; 0x1b4 <__vector_27+0x9a>
 1ac:	10 92 08 38 	sts	0x3808, r1	; 0x803808 <uart0_rbuf_rpnt>
 1b0:	10 92 09 38 	sts	0x3809, r1	; 0x803809 <uart0_rbuf_rpnt+0x1>
 1b4:	ff 91       	pop	r31
 1b6:	ef 91       	pop	r30
 1b8:	9f 91       	pop	r25
 1ba:	8f 91       	pop	r24
 1bc:	3f 91       	pop	r19
 1be:	2f 91       	pop	r18
 1c0:	0f 90       	pop	r0
 1c2:	0f be       	out	0x3f, r0	; 63
 1c4:	0f 90       	pop	r0
 1c6:	1f 90       	pop	r1
 1c8:	18 95       	reti

000001ca <RTC_init>:
 1ca:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__TEXT_REGION_LENGTH__+0x700141>
 1ce:	81 11       	cpse	r24, r1
 1d0:	fc cf       	rjmp	.-8      	; 0x1ca <RTC_init>
 1d2:	e0 e4       	ldi	r30, 0x40	; 64
 1d4:	f1 e0       	ldi	r31, 0x01	; 1
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	87 83       	std	Z+7, r24	; 0x07
 1da:	85 83       	std	Z+5, r24	; 0x05
 1dc:	82 8b       	std	Z+18, r24	; 0x12
 1de:	89 e4       	ldi	r24, 0x49	; 73
 1e0:	80 8b       	std	Z+16, r24	; 0x10
 1e2:	80 e0       	ldi	r24, 0x00	; 0
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	08 95       	ret

000001e8 <SLPCTRL_init>:
 1e8:	e0 e5       	ldi	r30, 0x50	; 80
 1ea:	f0 e0       	ldi	r31, 0x00	; 0
 1ec:	80 81       	ld	r24, Z
 1ee:	84 60       	ori	r24, 0x04	; 4
 1f0:	80 83       	st	Z, r24
 1f2:	80 81       	ld	r24, Z
 1f4:	81 60       	ori	r24, 0x01	; 1
 1f6:	80 83       	st	Z, r24
 1f8:	80 e0       	ldi	r24, 0x00	; 0
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	08 95       	ret

000001fe <GPIO_init>:
 1fe:	e0 e0       	ldi	r30, 0x00	; 0
 200:	f4 e0       	ldi	r31, 0x04	; 4
 202:	80 81       	ld	r24, Z
 204:	88 60       	ori	r24, 0x08	; 8
 206:	80 83       	st	Z, r24
 208:	e0 e2       	ldi	r30, 0x20	; 32
 20a:	f4 e0       	ldi	r31, 0x04	; 4
 20c:	80 81       	ld	r24, Z
 20e:	82 60       	ori	r24, 0x02	; 2
 210:	80 83       	st	Z, r24
 212:	80 e0       	ldi	r24, 0x00	; 0
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	08 95       	ret

00000218 <USART0_init>:
 218:	0f 93       	push	r16
 21a:	1f 93       	push	r17
 21c:	cf 93       	push	r28
 21e:	c0 91 24 11 	lds	r28, 0x1124	; 0x801124 <__TEXT_REGION_LENGTH__+0x701124>
 222:	e0 e0       	ldi	r30, 0x00	; 0
 224:	f2 e0       	ldi	r31, 0x02	; 2
 226:	21 81       	ldd	r18, Z+1	; 0x01
 228:	2e 7f       	andi	r18, 0xFE	; 254
 22a:	21 83       	std	Z+1, r18	; 0x01
 22c:	e0 e2       	ldi	r30, 0x20	; 32
 22e:	f4 e0       	ldi	r31, 0x04	; 4
 230:	20 81       	ld	r18, Z
 232:	27 7f       	andi	r18, 0xF7	; 247
 234:	20 83       	st	Z, r18
 236:	20 81       	ld	r18, Z
 238:	24 60       	ori	r18, 0x04	; 4
 23a:	20 83       	st	Z, r18
 23c:	0e 94 77 04 	call	0x8ee	; 0x8ee <__floatunsisf>
 240:	20 e0       	ldi	r18, 0x00	; 0
 242:	30 e0       	ldi	r19, 0x00	; 0
 244:	40 e8       	ldi	r20, 0x80	; 128
 246:	51 e4       	ldi	r21, 0x41	; 65
 248:	0e 94 05 05 	call	0xa0a	; 0xa0a <__mulsf3>
 24c:	9b 01       	movw	r18, r22
 24e:	ac 01       	movw	r20, r24
 250:	64 e5       	ldi	r22, 0x54	; 84
 252:	73 e7       	ldi	r23, 0x73	; 115
 254:	8b e4       	ldi	r24, 0x4B	; 75
 256:	9d e4       	ldi	r25, 0x4D	; 77
 258:	0e 94 cf 03 	call	0x79e	; 0x79e <__divsf3>
 25c:	20 e0       	ldi	r18, 0x00	; 0
 25e:	30 e0       	ldi	r19, 0x00	; 0
 260:	40 e0       	ldi	r20, 0x00	; 0
 262:	5f e3       	ldi	r21, 0x3F	; 63
 264:	0e 94 63 03 	call	0x6c6	; 0x6c6 <__addsf3>
 268:	0e 94 41 04 	call	0x882	; 0x882 <__fixsfsi>
 26c:	9b 01       	movw	r18, r22
 26e:	ac 01       	movw	r20, r24
 270:	ac 2f       	mov	r26, r28
 272:	cc 0f       	add	r28, r28
 274:	bb 0b       	sbc	r27, r27
 276:	bc 5f       	subi	r27, 0xFC	; 252
 278:	0e 94 72 05 	call	0xae4	; 0xae4 <__mulshisi3>
 27c:	8b 01       	movw	r16, r22
 27e:	9c 01       	movw	r18, r24
 280:	99 23       	and	r25, r25
 282:	24 f4       	brge	.+8      	; 0x28c <USART0_init+0x74>
 284:	01 50       	subi	r16, 0x01	; 1
 286:	1c 4f       	sbci	r17, 0xFC	; 252
 288:	2f 4f       	sbci	r18, 0xFF	; 255
 28a:	3f 4f       	sbci	r19, 0xFF	; 255
 28c:	d9 01       	movw	r26, r18
 28e:	c8 01       	movw	r24, r16
 290:	07 2e       	mov	r0, r23
 292:	7a e0       	ldi	r23, 0x0A	; 10
 294:	b5 95       	asr	r27
 296:	a7 95       	ror	r26
 298:	97 95       	ror	r25
 29a:	87 95       	ror	r24
 29c:	7a 95       	dec	r23
 29e:	d1 f7       	brne	.-12     	; 0x294 <USART0_init+0x7c>
 2a0:	70 2d       	mov	r23, r0
 2a2:	e0 e0       	ldi	r30, 0x00	; 0
 2a4:	f8 e0       	ldi	r31, 0x08	; 8
 2a6:	80 87       	std	Z+8, r24	; 0x08
 2a8:	91 87       	std	Z+9, r25	; 0x09
 2aa:	80 e8       	ldi	r24, 0x80	; 128
 2ac:	85 83       	std	Z+5, r24	; 0x05
 2ae:	83 e0       	ldi	r24, 0x03	; 3
 2b0:	87 83       	std	Z+7, r24	; 0x07
 2b2:	13 86       	std	Z+11, r1	; 0x0b
 2b4:	80 ec       	ldi	r24, 0xC0	; 192
 2b6:	86 83       	std	Z+6, r24	; 0x06
 2b8:	80 e0       	ldi	r24, 0x00	; 0
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	cf 91       	pop	r28
 2be:	1f 91       	pop	r17
 2c0:	0f 91       	pop	r16
 2c2:	08 95       	ret

000002c4 <USART0_sendChar>:
 2c4:	90 91 04 08 	lds	r25, 0x0804	; 0x800804 <__TEXT_REGION_LENGTH__+0x700804>
 2c8:	95 ff       	sbrs	r25, 5
 2ca:	fc cf       	rjmp	.-8      	; 0x2c4 <USART0_sendChar>
 2cc:	e0 e0       	ldi	r30, 0x00	; 0
 2ce:	f8 e0       	ldi	r31, 0x08	; 8
 2d0:	94 81       	ldd	r25, Z+4	; 0x04
 2d2:	90 64       	ori	r25, 0x40	; 64
 2d4:	94 83       	std	Z+4, r25	; 0x04
 2d6:	82 83       	std	Z+2, r24	; 0x02
 2d8:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <__TEXT_REGION_LENGTH__+0x700804>
 2dc:	86 ff       	sbrs	r24, 6
 2de:	fc cf       	rjmp	.-8      	; 0x2d8 <USART0_sendChar+0x14>
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	08 95       	ret

000002e6 <USART0_sendBuf>:
 2e6:	ef 92       	push	r14
 2e8:	ff 92       	push	r15
 2ea:	1f 93       	push	r17
 2ec:	cf 93       	push	r28
 2ee:	df 93       	push	r29
 2f0:	7c 01       	movw	r14, r24
 2f2:	16 2f       	mov	r17, r22
 2f4:	c0 e0       	ldi	r28, 0x00	; 0
 2f6:	d0 e0       	ldi	r29, 0x00	; 0
 2f8:	09 c0       	rjmp	.+18     	; 0x30c <USART0_sendBuf+0x26>
 2fa:	f7 01       	movw	r30, r14
 2fc:	ec 0f       	add	r30, r28
 2fe:	fd 1f       	adc	r31, r29
 300:	60 e0       	ldi	r22, 0x00	; 0
 302:	70 e0       	ldi	r23, 0x00	; 0
 304:	80 81       	ld	r24, Z
 306:	0e 94 62 01 	call	0x2c4	; 0x2c4 <USART0_sendChar>
 30a:	21 96       	adiw	r28, 0x01	; 1
 30c:	81 2f       	mov	r24, r17
 30e:	90 e0       	ldi	r25, 0x00	; 0
 310:	c8 17       	cp	r28, r24
 312:	d9 07       	cpc	r29, r25
 314:	90 f3       	brcs	.-28     	; 0x2fa <USART0_sendBuf+0x14>
 316:	df 91       	pop	r29
 318:	cf 91       	pop	r28
 31a:	1f 91       	pop	r17
 31c:	ff 90       	pop	r15
 31e:	ef 90       	pop	r14
 320:	08 95       	ret

00000322 <adcOn>:
 322:	80 91 07 38 	lds	r24, 0x3807	; 0x803807 <_gpio_status>
 326:	82 60       	ori	r24, 0x02	; 2
 328:	80 93 07 38 	sts	0x3807, r24	; 0x803807 <_gpio_status>
 32c:	e0 e0       	ldi	r30, 0x00	; 0
 32e:	f4 e0       	ldi	r31, 0x04	; 4
 330:	85 81       	ldd	r24, Z+5	; 0x05
 332:	88 60       	ori	r24, 0x08	; 8
 334:	85 83       	std	Z+5, r24	; 0x05
 336:	08 95       	ret

00000338 <adcOff>:
 338:	80 91 07 38 	lds	r24, 0x3807	; 0x803807 <_gpio_status>
 33c:	8d 7f       	andi	r24, 0xFD	; 253
 33e:	80 93 07 38 	sts	0x3807, r24	; 0x803807 <_gpio_status>
 342:	e0 e0       	ldi	r30, 0x00	; 0
 344:	f4 e0       	ldi	r31, 0x04	; 4
 346:	86 81       	ldd	r24, Z+6	; 0x06
 348:	88 60       	ori	r24, 0x08	; 8
 34a:	86 83       	std	Z+6, r24	; 0x06
 34c:	08 95       	ret

0000034e <ADC_init>:
 34e:	e0 e0       	ldi	r30, 0x00	; 0
 350:	f4 e0       	ldi	r31, 0x04	; 4
 352:	81 89       	ldd	r24, Z+17	; 0x11
 354:	88 7f       	andi	r24, 0xF8	; 248
 356:	81 8b       	std	Z+17, r24	; 0x11
 358:	82 89       	ldd	r24, Z+18	; 0x12
 35a:	88 7f       	andi	r24, 0xF8	; 248
 35c:	82 8b       	std	Z+18, r24	; 0x12
 35e:	81 89       	ldd	r24, Z+17	; 0x11
 360:	84 60       	ori	r24, 0x04	; 4
 362:	81 8b       	std	Z+17, r24	; 0x11
 364:	82 89       	ldd	r24, Z+18	; 0x12
 366:	84 60       	ori	r24, 0x04	; 4
 368:	82 8b       	std	Z+18, r24	; 0x12
 36a:	e0 e0       	ldi	r30, 0x00	; 0
 36c:	f6 e0       	ldi	r31, 0x06	; 6
 36e:	81 e0       	ldi	r24, 0x01	; 1
 370:	80 83       	st	Z, r24
 372:	11 82       	std	Z+1, r1	; 0x01
 374:	97 e1       	ldi	r25, 0x17	; 23
 376:	92 83       	std	Z+2, r25	; 0x02
 378:	90 ea       	ldi	r25, 0xA0	; 160
 37a:	93 83       	std	Z+3, r25	; 0x03
 37c:	14 82       	std	Z+4, r1	; 0x04
 37e:	15 82       	std	Z+5, r1	; 0x05
 380:	11 86       	std	Z+9, r1	; 0x09
 382:	12 86       	std	Z+10, r1	; 0x0a
 384:	83 87       	std	Z+11, r24	; 0x0b
 386:	14 86       	std	Z+12, r1	; 0x0c
 388:	80 e0       	ldi	r24, 0x00	; 0
 38a:	90 e0       	ldi	r25, 0x00	; 0
 38c:	08 95       	ret

0000038e <doAdcThings>:
 38e:	80 91 08 06 	lds	r24, 0x0608	; 0x800608 <__TEXT_REGION_LENGTH__+0x700608>
 392:	80 fd       	sbrc	r24, 0
 394:	3a c0       	rjmp	.+116    	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 396:	80 91 0b 06 	lds	r24, 0x060B	; 0x80060b <__TEXT_REGION_LENGTH__+0x70060b>
 39a:	80 ff       	sbrs	r24, 0
 39c:	27 c0       	rjmp	.+78     	; 0x3ec <doAdcThings+0x5e>
 39e:	80 91 06 06 	lds	r24, 0x0606	; 0x800606 <__TEXT_REGION_LENGTH__+0x700606>
 3a2:	8f 71       	andi	r24, 0x1F	; 31
 3a4:	81 30       	cpi	r24, 0x01	; 1
 3a6:	69 f4       	brne	.+26     	; 0x3c2 <doAdcThings+0x34>
 3a8:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x700610>
 3ac:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x700611>
 3b0:	80 93 05 38 	sts	0x3805, r24	; 0x803805 <vbat_volt>
 3b4:	90 93 06 38 	sts	0x3806, r25	; 0x803806 <vbat_volt+0x1>
 3b8:	80 91 02 38 	lds	r24, 0x3802	; 0x803802 <__data_end>
 3bc:	81 60       	ori	r24, 0x01	; 1
 3be:	80 93 02 38 	sts	0x3802, r24	; 0x803802 <__data_end>
 3c2:	80 91 06 06 	lds	r24, 0x0606	; 0x800606 <__TEXT_REGION_LENGTH__+0x700606>
 3c6:	8f 71       	andi	r24, 0x1F	; 31
 3c8:	82 30       	cpi	r24, 0x02	; 2
 3ca:	69 f4       	brne	.+26     	; 0x3e6 <doAdcThings+0x58>
 3cc:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x700610>
 3d0:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x700611>
 3d4:	80 93 03 38 	sts	0x3803, r24	; 0x803803 <vacc_volt>
 3d8:	90 93 04 38 	sts	0x3804, r25	; 0x803804 <vacc_volt+0x1>
 3dc:	80 91 02 38 	lds	r24, 0x3802	; 0x803802 <__data_end>
 3e0:	82 60       	ori	r24, 0x02	; 2
 3e2:	80 93 02 38 	sts	0x3802, r24	; 0x803802 <__data_end>
 3e6:	81 e0       	ldi	r24, 0x01	; 1
 3e8:	80 93 0b 06 	sts	0x060B, r24	; 0x80060b <__TEXT_REGION_LENGTH__+0x70060b>
 3ec:	80 91 06 06 	lds	r24, 0x0606	; 0x800606 <__TEXT_REGION_LENGTH__+0x700606>
 3f0:	8f 71       	andi	r24, 0x1F	; 31
 3f2:	81 30       	cpi	r24, 0x01	; 1
 3f4:	21 f4       	brne	.+8      	; 0x3fe <doAdcThings+0x70>
 3f6:	82 e0       	ldi	r24, 0x02	; 2
 3f8:	80 93 06 06 	sts	0x0606, r24	; 0x800606 <__TEXT_REGION_LENGTH__+0x700606>
 3fc:	03 c0       	rjmp	.+6      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3fe:	81 e0       	ldi	r24, 0x01	; 1
 400:	80 93 06 06 	sts	0x0606, r24	; 0x800606 <__TEXT_REGION_LENGTH__+0x700606>
 404:	81 e0       	ldi	r24, 0x01	; 1
 406:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x700608>
 40a:	08 95       	ret

0000040c <main>:

int main(void)
{
	//FILE USART_stream = FDEV_SETUP_STREAM(USART0_sendChar, NULL, _FDEV_SETUP_WRITE);
	
	cli();
 40c:	f8 94       	cli
	RTC_init();
 40e:	0e 94 e5 00 	call	0x1ca	; 0x1ca <RTC_init>
	SLPCTRL_init();
 412:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <SLPCTRL_init>
	GPIO_init();
 416:	0e 94 ff 00 	call	0x1fe	; 0x1fe <GPIO_init>
	USART0_init(115200);
 41a:	60 e0       	ldi	r22, 0x00	; 0
 41c:	72 ec       	ldi	r23, 0xC2	; 194
 41e:	81 e0       	ldi	r24, 0x01	; 1
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	0e 94 0c 01 	call	0x218	; 0x218 <USART0_init>
	ADC_init();
 426:	0e 94 a7 01 	call	0x34e	; 0x34e <ADC_init>
	sei();
 42a:	78 94       	sei
	// Protocol8086 parser in working
	//stdout = &USART_stream;
	parserInit();
 42c:	0e 94 e7 02 	call	0x5ce	; 0x5ce <parserInit>
	setParseDoneCallback(NULL);
 430:	80 e0       	ldi	r24, 0x00	; 0
 432:	90 e0       	ldi	r25, 0x00	; 0
 434:	0e 94 ee 02 	call	0x5dc	; 0x5dc <setParseDoneCallback>
	setUartSendFunc(USART0_sendBuf);
 438:	83 e7       	ldi	r24, 0x73	; 115
 43a:	91 e0       	ldi	r25, 0x01	; 1
 43c:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <setUartSendFunc>
	
	sleep_requested = 0;
 440:	10 92 00 38 	sts	0x3800, r1	; 0x803800 <__data_start>
	adcOn();
 444:	0e 94 91 01 	call	0x322	; 0x322 <adcOn>
	
	// Surveying voltages for the first time:
	while((adc_state & 0x3) != 0x3)
 448:	02 c0       	rjmp	.+4      	; 0x44e <main+0x42>
	{
		doAdcThings();
 44a:	0e 94 c7 01 	call	0x38e	; 0x38e <doAdcThings>
	
	sleep_requested = 0;
	adcOn();
	
	// Surveying voltages for the first time:
	while((adc_state & 0x3) != 0x3)
 44e:	80 91 02 38 	lds	r24, 0x3802	; 0x803802 <__data_end>
 452:	83 70       	andi	r24, 0x03	; 3
 454:	83 30       	cpi	r24, 0x03	; 3
 456:	c9 f7       	brne	.-14     	; 0x44a <main+0x3e>
	{
		doAdcThings();
	}
	adc_state = 0;
 458:	10 92 02 38 	sts	0x3802, r1	; 0x803802 <__data_end>
	
	// Static scheduling loop
	// TODO: Scheduling. Consider UART parser
    while (1)
    {
		doAdcThings();
 45c:	0e 94 c7 01 	call	0x38e	; 0x38e <doAdcThings>
		doTx2CmdThings();

		if(uart0_rbuf_rpnt != uart0_rbuf_wpnt)
 460:	20 91 08 38 	lds	r18, 0x3808	; 0x803808 <uart0_rbuf_rpnt>
 464:	30 91 09 38 	lds	r19, 0x3809	; 0x803809 <uart0_rbuf_rpnt+0x1>
 468:	80 91 0a 38 	lds	r24, 0x380A	; 0x80380a <uart0_rbuf_wpnt>
 46c:	90 91 0b 38 	lds	r25, 0x380B	; 0x80380b <uart0_rbuf_wpnt+0x1>
 470:	28 17       	cp	r18, r24
 472:	39 07       	cpc	r19, r25
 474:	d9 f0       	breq	.+54     	; 0x4ac <main+0xa0>
		{
			parseData(uart0_rbuf[uart0_rbuf_rpnt++]);
 476:	80 91 08 38 	lds	r24, 0x3808	; 0x803808 <uart0_rbuf_rpnt>
 47a:	90 91 09 38 	lds	r25, 0x3809	; 0x803809 <uart0_rbuf_rpnt+0x1>
 47e:	9c 01       	movw	r18, r24
 480:	2f 5f       	subi	r18, 0xFF	; 255
 482:	3f 4f       	sbci	r19, 0xFF	; 255
 484:	20 93 08 38 	sts	0x3808, r18	; 0x803808 <uart0_rbuf_rpnt>
 488:	30 93 09 38 	sts	0x3809, r19	; 0x803809 <uart0_rbuf_rpnt+0x1>
 48c:	fc 01       	movw	r30, r24
 48e:	e4 5f       	subi	r30, 0xF4	; 244
 490:	f7 4c       	sbci	r31, 0xC7	; 199
 492:	80 81       	ld	r24, Z
 494:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <parseData>
			if(uart0_rbuf_rpnt >= UART_BUFLEN) uart0_rbuf_rpnt = 0;
 498:	80 91 08 38 	lds	r24, 0x3808	; 0x803808 <uart0_rbuf_rpnt>
 49c:	90 91 09 38 	lds	r25, 0x3809	; 0x803809 <uart0_rbuf_rpnt+0x1>
 4a0:	80 97       	sbiw	r24, 0x20	; 32
 4a2:	20 f0       	brcs	.+8      	; 0x4ac <main+0xa0>
 4a4:	10 92 08 38 	sts	0x3808, r1	; 0x803808 <uart0_rbuf_rpnt>
 4a8:	10 92 09 38 	sts	0x3809, r1	; 0x803809 <uart0_rbuf_rpnt+0x1>
		}
		
		if(sleep_requested)
 4ac:	80 91 00 38 	lds	r24, 0x3800	; 0x803800 <__data_start>
 4b0:	88 23       	and	r24, r24
 4b2:	a1 f2       	breq	.-88     	; 0x45c <main+0x50>
		{
			adcOff();
 4b4:	0e 94 9c 01 	call	0x338	; 0x338 <adcOff>
			sleep_cpu();
 4b8:	88 95       	sleep
			sleep_requested = 0;
 4ba:	10 92 00 38 	sts	0x3800, r1	; 0x803800 <__data_start>
			adcOn();
 4be:	0e 94 91 01 	call	0x322	; 0x322 <adcOn>
 4c2:	cc cf       	rjmp	.-104    	; 0x45c <main+0x50>

000004c4 <_encapsulateData>:
void sendCmd(uint8_t cmd, uint8_t one, uint8_t two, uint8_t three, uint8_t four)
{
	uint8_t sendBuf[8] = {0,};
	_encapsulateData(sendBuf, cmd, one, two, three, four);
	if(uartSend != NULL) uartSend(sendBuf, 8);
}
 4c4:	ef 92       	push	r14
 4c6:	0f 93       	push	r16
 4c8:	fc 01       	movw	r30, r24
 4ca:	80 e8       	ldi	r24, 0x80	; 128
 4cc:	80 83       	st	Z, r24
 4ce:	61 83       	std	Z+1, r22	; 0x01
 4d0:	42 83       	std	Z+2, r20	; 0x02
 4d2:	23 83       	std	Z+3, r18	; 0x03
 4d4:	04 83       	std	Z+4, r16	; 0x04
 4d6:	e5 82       	std	Z+5, r14	; 0x05
 4d8:	46 0f       	add	r20, r22
 4da:	24 0f       	add	r18, r20
 4dc:	02 0f       	add	r16, r18
 4de:	e0 0e       	add	r14, r16
 4e0:	e6 82       	std	Z+6, r14	; 0x06
 4e2:	86 e8       	ldi	r24, 0x86	; 134
 4e4:	87 83       	std	Z+7, r24	; 0x07
 4e6:	0f 91       	pop	r16
 4e8:	ef 90       	pop	r14
 4ea:	08 95       	ret

000004ec <_parseDone>:
 4ec:	ef 92       	push	r14
 4ee:	0f 93       	push	r16
 4f0:	cf 93       	push	r28
 4f2:	df 93       	push	r29
 4f4:	cd b7       	in	r28, 0x3d	; 61
 4f6:	de b7       	in	r29, 0x3e	; 62
 4f8:	28 97       	sbiw	r28, 0x08	; 8
 4fa:	cd bf       	out	0x3d, r28	; 61
 4fc:	de bf       	out	0x3e, r29	; 62
 4fe:	fe 01       	movw	r30, r28
 500:	31 96       	adiw	r30, 0x01	; 1
 502:	98 e0       	ldi	r25, 0x08	; 8
 504:	df 01       	movw	r26, r30
 506:	1d 92       	st	X+, r1
 508:	9a 95       	dec	r25
 50a:	e9 f7       	brne	.-6      	; 0x506 <_parseDone+0x1a>
 50c:	e0 91 3c 38 	lds	r30, 0x383C	; 0x80383c <parseDoneCallBack>
 510:	f0 91 3d 38 	lds	r31, 0x383D	; 0x80383d <parseDoneCallBack+0x1>
 514:	30 97       	sbiw	r30, 0x00	; 0
 516:	11 f0       	breq	.+4      	; 0x51c <_parseDone+0x30>
 518:	09 95       	icall
 51a:	51 c0       	rjmp	.+162    	; 0x5be <_parseDone+0xd2>
 51c:	9a e0       	ldi	r25, 0x0A	; 10
 51e:	90 93 01 38 	sts	0x3801, r25	; 0x803801 <tx2_timeout>
 522:	83 30       	cpi	r24, 0x03	; 3
 524:	e9 f0       	breq	.+58     	; 0x560 <_parseDone+0x74>
 526:	89 30       	cpi	r24, 0x09	; 9
 528:	99 f1       	breq	.+102    	; 0x590 <_parseDone+0xa4>
 52a:	81 30       	cpi	r24, 0x01	; 1
 52c:	09 f0       	breq	.+2      	; 0x530 <_parseDone+0x44>
 52e:	47 c0       	rjmp	.+142    	; 0x5be <_parseDone+0xd2>
 530:	e0 90 03 38 	lds	r14, 0x3803	; 0x803803 <vacc_volt>
 534:	00 91 04 38 	lds	r16, 0x3804	; 0x803804 <vacc_volt+0x1>
 538:	20 91 05 38 	lds	r18, 0x3805	; 0x803805 <vbat_volt>
 53c:	40 91 06 38 	lds	r20, 0x3806	; 0x803806 <vbat_volt+0x1>
 540:	62 e0       	ldi	r22, 0x02	; 2
 542:	ce 01       	movw	r24, r28
 544:	01 96       	adiw	r24, 0x01	; 1
 546:	0e 94 62 02 	call	0x4c4	; 0x4c4 <_encapsulateData>
 54a:	e0 91 3a 38 	lds	r30, 0x383A	; 0x80383a <uartSend>
 54e:	f0 91 3b 38 	lds	r31, 0x383B	; 0x80383b <uartSend+0x1>
 552:	30 97       	sbiw	r30, 0x00	; 0
 554:	a1 f1       	breq	.+104    	; 0x5be <_parseDone+0xd2>
 556:	68 e0       	ldi	r22, 0x08	; 8
 558:	ce 01       	movw	r24, r28
 55a:	01 96       	adiw	r24, 0x01	; 1
 55c:	09 95       	icall
 55e:	2f c0       	rjmp	.+94     	; 0x5be <_parseDone+0xd2>
 560:	e0 90 03 38 	lds	r14, 0x3803	; 0x803803 <vacc_volt>
 564:	00 91 04 38 	lds	r16, 0x3804	; 0x803804 <vacc_volt+0x1>
 568:	20 91 05 38 	lds	r18, 0x3805	; 0x803805 <vbat_volt>
 56c:	40 91 06 38 	lds	r20, 0x3806	; 0x803806 <vbat_volt+0x1>
 570:	64 e0       	ldi	r22, 0x04	; 4
 572:	ce 01       	movw	r24, r28
 574:	01 96       	adiw	r24, 0x01	; 1
 576:	0e 94 62 02 	call	0x4c4	; 0x4c4 <_encapsulateData>
 57a:	e0 91 3a 38 	lds	r30, 0x383A	; 0x80383a <uartSend>
 57e:	f0 91 3b 38 	lds	r31, 0x383B	; 0x80383b <uartSend+0x1>
 582:	30 97       	sbiw	r30, 0x00	; 0
 584:	e1 f0       	breq	.+56     	; 0x5be <_parseDone+0xd2>
 586:	68 e0       	ldi	r22, 0x08	; 8
 588:	ce 01       	movw	r24, r28
 58a:	01 96       	adiw	r24, 0x01	; 1
 58c:	09 95       	icall
 58e:	17 c0       	rjmp	.+46     	; 0x5be <_parseDone+0xd2>
 590:	e0 90 03 38 	lds	r14, 0x3803	; 0x803803 <vacc_volt>
 594:	00 91 04 38 	lds	r16, 0x3804	; 0x803804 <vacc_volt+0x1>
 598:	20 91 05 38 	lds	r18, 0x3805	; 0x803805 <vbat_volt>
 59c:	40 91 06 38 	lds	r20, 0x3806	; 0x803806 <vbat_volt+0x1>
 5a0:	6a e0       	ldi	r22, 0x0A	; 10
 5a2:	ce 01       	movw	r24, r28
 5a4:	01 96       	adiw	r24, 0x01	; 1
 5a6:	0e 94 62 02 	call	0x4c4	; 0x4c4 <_encapsulateData>
 5aa:	e0 91 3a 38 	lds	r30, 0x383A	; 0x80383a <uartSend>
 5ae:	f0 91 3b 38 	lds	r31, 0x383B	; 0x80383b <uartSend+0x1>
 5b2:	30 97       	sbiw	r30, 0x00	; 0
 5b4:	21 f0       	breq	.+8      	; 0x5be <_parseDone+0xd2>
 5b6:	68 e0       	ldi	r22, 0x08	; 8
 5b8:	ce 01       	movw	r24, r28
 5ba:	01 96       	adiw	r24, 0x01	; 1
 5bc:	09 95       	icall
 5be:	28 96       	adiw	r28, 0x08	; 8
 5c0:	cd bf       	out	0x3d, r28	; 61
 5c2:	de bf       	out	0x3e, r29	; 62
 5c4:	df 91       	pop	r29
 5c6:	cf 91       	pop	r28
 5c8:	0f 91       	pop	r16
 5ca:	ef 90       	pop	r14
 5cc:	08 95       	ret

000005ce <parserInit>:
 5ce:	81 e0       	ldi	r24, 0x01	; 1
 5d0:	90 e0       	ldi	r25, 0x00	; 0
 5d2:	80 93 38 38 	sts	0x3838, r24	; 0x803838 <parserState>
 5d6:	90 93 39 38 	sts	0x3839, r25	; 0x803839 <parserState+0x1>
 5da:	08 95       	ret

000005dc <setParseDoneCallback>:
 5dc:	80 93 3c 38 	sts	0x383C, r24	; 0x80383c <parseDoneCallBack>
 5e0:	90 93 3d 38 	sts	0x383D, r25	; 0x80383d <parseDoneCallBack+0x1>
 5e4:	08 95       	ret

000005e6 <setUartSendFunc>:
 5e6:	80 93 3a 38 	sts	0x383A, r24	; 0x80383a <uartSend>
 5ea:	90 93 3b 38 	sts	0x383B, r25	; 0x80383b <uartSend+0x1>
 5ee:	08 95       	ret

000005f0 <parseData>:

void parseData(uint8_t data)
{
 5f0:	0f 93       	push	r16
 5f2:	1f 93       	push	r17
	static uint8_t databuf[8] = {0,};
	static uint32_t recvdcnt = 0;
	uint8_t tmpChksum = 0;

	if(parserState)
 5f4:	20 91 38 38 	lds	r18, 0x3838	; 0x803838 <parserState>
 5f8:	30 91 39 38 	lds	r19, 0x3839	; 0x803839 <parserState+0x1>
 5fc:	23 2b       	or	r18, r19
 5fe:	09 f4       	brne	.+2      	; 0x602 <parseData+0x12>
 600:	58 c0       	rjmp	.+176    	; 0x6b2 <parseData+0xc2>
	{
		switch(uartState)
 602:	90 91 3e 38 	lds	r25, 0x383E	; 0x80383e <uartState>
 606:	99 23       	and	r25, r25
 608:	19 f0       	breq	.+6      	; 0x610 <parseData+0x20>
 60a:	91 30       	cpi	r25, 0x01	; 1
 60c:	b1 f0       	breq	.+44     	; 0x63a <parseData+0x4a>
 60e:	51 c0       	rjmp	.+162    	; 0x6b2 <parseData+0xc2>
		{
		case UART_STATE_IDLE:
			if(data == UART_STX)
 610:	80 38       	cpi	r24, 0x80	; 128
 612:	09 f0       	breq	.+2      	; 0x616 <parseData+0x26>
 614:	4e c0       	rjmp	.+156    	; 0x6b2 <parseData+0xc2>
			{
				recvdcnt = 0;
				uartState = UART_STATE_RECEIVING;
 616:	91 e0       	ldi	r25, 0x01	; 1
 618:	90 93 3e 38 	sts	0x383E, r25	; 0x80383e <uartState>
				databuf[recvdcnt++] = data;
 61c:	41 e0       	ldi	r20, 0x01	; 1
 61e:	50 e0       	ldi	r21, 0x00	; 0
 620:	60 e0       	ldi	r22, 0x00	; 0
 622:	70 e0       	ldi	r23, 0x00	; 0
 624:	40 93 34 38 	sts	0x3834, r20	; 0x803834 <recvdcnt.1692>
 628:	50 93 35 38 	sts	0x3835, r21	; 0x803835 <recvdcnt.1692+0x1>
 62c:	60 93 36 38 	sts	0x3836, r22	; 0x803836 <recvdcnt.1692+0x2>
 630:	70 93 37 38 	sts	0x3837, r23	; 0x803837 <recvdcnt.1692+0x3>
 634:	80 93 2c 38 	sts	0x382C, r24	; 0x80382c <databuf.1691>
 638:	3c c0       	rjmp	.+120    	; 0x6b2 <parseData+0xc2>
			}
			break;
		case UART_STATE_RECEIVING:
			if(recvdcnt < 8)
 63a:	40 91 34 38 	lds	r20, 0x3834	; 0x803834 <recvdcnt.1692>
 63e:	50 91 35 38 	lds	r21, 0x3835	; 0x803835 <recvdcnt.1692+0x1>
 642:	60 91 36 38 	lds	r22, 0x3836	; 0x803836 <recvdcnt.1692+0x2>
 646:	70 91 37 38 	lds	r23, 0x3837	; 0x803837 <recvdcnt.1692+0x3>
 64a:	48 30       	cpi	r20, 0x08	; 8
 64c:	51 05       	cpc	r21, r1
 64e:	61 05       	cpc	r22, r1
 650:	71 05       	cpc	r23, r1
 652:	68 f5       	brcc	.+90     	; 0x6ae <parseData+0xbe>
			{
				databuf[recvdcnt++] = data;
 654:	8a 01       	movw	r16, r20
 656:	9b 01       	movw	r18, r22
 658:	0f 5f       	subi	r16, 0xFF	; 255
 65a:	1f 4f       	sbci	r17, 0xFF	; 255
 65c:	2f 4f       	sbci	r18, 0xFF	; 255
 65e:	3f 4f       	sbci	r19, 0xFF	; 255
 660:	00 93 34 38 	sts	0x3834, r16	; 0x803834 <recvdcnt.1692>
 664:	10 93 35 38 	sts	0x3835, r17	; 0x803835 <recvdcnt.1692+0x1>
 668:	20 93 36 38 	sts	0x3836, r18	; 0x803836 <recvdcnt.1692+0x2>
 66c:	30 93 37 38 	sts	0x3837, r19	; 0x803837 <recvdcnt.1692+0x3>
 670:	fa 01       	movw	r30, r20
 672:	e4 5d       	subi	r30, 0xD4	; 212
 674:	f7 4c       	sbci	r31, 0xC7	; 199
 676:	80 83       	st	Z, r24
				if(recvdcnt == 8)
 678:	08 30       	cpi	r16, 0x08	; 8
 67a:	11 05       	cpc	r17, r1
 67c:	21 05       	cpc	r18, r1
 67e:	31 05       	cpc	r19, r1
 680:	c1 f4       	brne	.+48     	; 0x6b2 <parseData+0xc2>
				{
					if(data == UART_ETX)
 682:	86 38       	cpi	r24, 0x86	; 134
 684:	89 f4       	brne	.+34     	; 0x6a8 <parseData+0xb8>
					{
						tmpChksum = databuf[1] + databuf[2] + databuf[3] + databuf[4] + databuf[5];
 686:	ec e2       	ldi	r30, 0x2C	; 44
 688:	f8 e3       	ldi	r31, 0x38	; 56
 68a:	81 81       	ldd	r24, Z+1	; 0x01
 68c:	62 81       	ldd	r22, Z+2	; 0x02
 68e:	43 81       	ldd	r20, Z+3	; 0x03
 690:	24 81       	ldd	r18, Z+4	; 0x04
 692:	05 81       	ldd	r16, Z+5	; 0x05
 694:	98 2f       	mov	r25, r24
 696:	96 0f       	add	r25, r22
 698:	94 0f       	add	r25, r20
 69a:	92 0f       	add	r25, r18
 69c:	90 0f       	add	r25, r16
						if(tmpChksum == databuf[6])
 69e:	36 81       	ldd	r19, Z+6	; 0x06
 6a0:	93 13       	cpse	r25, r19
 6a2:	02 c0       	rjmp	.+4      	; 0x6a8 <parseData+0xb8>
						{
							_parseDone(databuf[1], databuf[2], databuf[3], databuf[4], databuf[5]);
 6a4:	0e 94 76 02 	call	0x4ec	; 0x4ec <_parseDone>
						}
					}
					//recvdcnt = 0;
					uartState = UART_STATE_IDLE;
 6a8:	10 92 3e 38 	sts	0x383E, r1	; 0x80383e <uartState>
 6ac:	02 c0       	rjmp	.+4      	; 0x6b2 <parseData+0xc2>
			}
			else
			{
				// Highly unlikely case
				//recvdcnt = 0;
				uartState = UART_STATE_IDLE;
 6ae:	10 92 3e 38 	sts	0x383E, r1	; 0x80383e <uartState>
			break;
		default:
			break;
		}
	}
 6b2:	1f 91       	pop	r17
 6b4:	0f 91       	pop	r16
 6b6:	08 95       	ret

000006b8 <incTick>:

static uint8_t nowtick = 0;

inline void incTick(void)
{
	nowtick++;
 6b8:	80 91 3f 38 	lds	r24, 0x383F	; 0x80383f <nowtick>
 6bc:	8f 5f       	subi	r24, 0xFF	; 255
 6be:	80 93 3f 38 	sts	0x383F, r24	; 0x80383f <nowtick>
 6c2:	08 95       	ret

000006c4 <__subsf3>:
 6c4:	50 58       	subi	r21, 0x80	; 128

000006c6 <__addsf3>:
 6c6:	bb 27       	eor	r27, r27
 6c8:	aa 27       	eor	r26, r26
 6ca:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <__addsf3x>
 6ce:	0c 94 cb 04 	jmp	0x996	; 0x996 <__fp_round>
 6d2:	0e 94 bd 04 	call	0x97a	; 0x97a <__fp_pscA>
 6d6:	38 f0       	brcs	.+14     	; 0x6e6 <__addsf3+0x20>
 6d8:	0e 94 c4 04 	call	0x988	; 0x988 <__fp_pscB>
 6dc:	20 f0       	brcs	.+8      	; 0x6e6 <__addsf3+0x20>
 6de:	39 f4       	brne	.+14     	; 0x6ee <__addsf3+0x28>
 6e0:	9f 3f       	cpi	r25, 0xFF	; 255
 6e2:	19 f4       	brne	.+6      	; 0x6ea <__addsf3+0x24>
 6e4:	26 f4       	brtc	.+8      	; 0x6ee <__addsf3+0x28>
 6e6:	0c 94 ba 04 	jmp	0x974	; 0x974 <__fp_nan>
 6ea:	0e f4       	brtc	.+2      	; 0x6ee <__addsf3+0x28>
 6ec:	e0 95       	com	r30
 6ee:	e7 fb       	bst	r30, 7
 6f0:	0c 94 b4 04 	jmp	0x968	; 0x968 <__fp_inf>

000006f4 <__addsf3x>:
 6f4:	e9 2f       	mov	r30, r25
 6f6:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__fp_split3>
 6fa:	58 f3       	brcs	.-42     	; 0x6d2 <__addsf3+0xc>
 6fc:	ba 17       	cp	r27, r26
 6fe:	62 07       	cpc	r22, r18
 700:	73 07       	cpc	r23, r19
 702:	84 07       	cpc	r24, r20
 704:	95 07       	cpc	r25, r21
 706:	20 f0       	brcs	.+8      	; 0x710 <__addsf3x+0x1c>
 708:	79 f4       	brne	.+30     	; 0x728 <__addsf3x+0x34>
 70a:	a6 f5       	brtc	.+104    	; 0x774 <__addsf3x+0x80>
 70c:	0c 94 fe 04 	jmp	0x9fc	; 0x9fc <__fp_zero>
 710:	0e f4       	brtc	.+2      	; 0x714 <__addsf3x+0x20>
 712:	e0 95       	com	r30
 714:	0b 2e       	mov	r0, r27
 716:	ba 2f       	mov	r27, r26
 718:	a0 2d       	mov	r26, r0
 71a:	0b 01       	movw	r0, r22
 71c:	b9 01       	movw	r22, r18
 71e:	90 01       	movw	r18, r0
 720:	0c 01       	movw	r0, r24
 722:	ca 01       	movw	r24, r20
 724:	a0 01       	movw	r20, r0
 726:	11 24       	eor	r1, r1
 728:	ff 27       	eor	r31, r31
 72a:	59 1b       	sub	r21, r25
 72c:	99 f0       	breq	.+38     	; 0x754 <__addsf3x+0x60>
 72e:	59 3f       	cpi	r21, 0xF9	; 249
 730:	50 f4       	brcc	.+20     	; 0x746 <__addsf3x+0x52>
 732:	50 3e       	cpi	r21, 0xE0	; 224
 734:	68 f1       	brcs	.+90     	; 0x790 <__addsf3x+0x9c>
 736:	1a 16       	cp	r1, r26
 738:	f0 40       	sbci	r31, 0x00	; 0
 73a:	a2 2f       	mov	r26, r18
 73c:	23 2f       	mov	r18, r19
 73e:	34 2f       	mov	r19, r20
 740:	44 27       	eor	r20, r20
 742:	58 5f       	subi	r21, 0xF8	; 248
 744:	f3 cf       	rjmp	.-26     	; 0x72c <__addsf3x+0x38>
 746:	46 95       	lsr	r20
 748:	37 95       	ror	r19
 74a:	27 95       	ror	r18
 74c:	a7 95       	ror	r26
 74e:	f0 40       	sbci	r31, 0x00	; 0
 750:	53 95       	inc	r21
 752:	c9 f7       	brne	.-14     	; 0x746 <__addsf3x+0x52>
 754:	7e f4       	brtc	.+30     	; 0x774 <__addsf3x+0x80>
 756:	1f 16       	cp	r1, r31
 758:	ba 0b       	sbc	r27, r26
 75a:	62 0b       	sbc	r22, r18
 75c:	73 0b       	sbc	r23, r19
 75e:	84 0b       	sbc	r24, r20
 760:	ba f0       	brmi	.+46     	; 0x790 <__addsf3x+0x9c>
 762:	91 50       	subi	r25, 0x01	; 1
 764:	a1 f0       	breq	.+40     	; 0x78e <__addsf3x+0x9a>
 766:	ff 0f       	add	r31, r31
 768:	bb 1f       	adc	r27, r27
 76a:	66 1f       	adc	r22, r22
 76c:	77 1f       	adc	r23, r23
 76e:	88 1f       	adc	r24, r24
 770:	c2 f7       	brpl	.-16     	; 0x762 <__addsf3x+0x6e>
 772:	0e c0       	rjmp	.+28     	; 0x790 <__addsf3x+0x9c>
 774:	ba 0f       	add	r27, r26
 776:	62 1f       	adc	r22, r18
 778:	73 1f       	adc	r23, r19
 77a:	84 1f       	adc	r24, r20
 77c:	48 f4       	brcc	.+18     	; 0x790 <__addsf3x+0x9c>
 77e:	87 95       	ror	r24
 780:	77 95       	ror	r23
 782:	67 95       	ror	r22
 784:	b7 95       	ror	r27
 786:	f7 95       	ror	r31
 788:	9e 3f       	cpi	r25, 0xFE	; 254
 78a:	08 f0       	brcs	.+2      	; 0x78e <__addsf3x+0x9a>
 78c:	b0 cf       	rjmp	.-160    	; 0x6ee <__addsf3+0x28>
 78e:	93 95       	inc	r25
 790:	88 0f       	add	r24, r24
 792:	08 f0       	brcs	.+2      	; 0x796 <__addsf3x+0xa2>
 794:	99 27       	eor	r25, r25
 796:	ee 0f       	add	r30, r30
 798:	97 95       	ror	r25
 79a:	87 95       	ror	r24
 79c:	08 95       	ret

0000079e <__divsf3>:
 79e:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <__divsf3x>
 7a2:	0c 94 cb 04 	jmp	0x996	; 0x996 <__fp_round>
 7a6:	0e 94 c4 04 	call	0x988	; 0x988 <__fp_pscB>
 7aa:	58 f0       	brcs	.+22     	; 0x7c2 <__divsf3+0x24>
 7ac:	0e 94 bd 04 	call	0x97a	; 0x97a <__fp_pscA>
 7b0:	40 f0       	brcs	.+16     	; 0x7c2 <__divsf3+0x24>
 7b2:	29 f4       	brne	.+10     	; 0x7be <__divsf3+0x20>
 7b4:	5f 3f       	cpi	r21, 0xFF	; 255
 7b6:	29 f0       	breq	.+10     	; 0x7c2 <__divsf3+0x24>
 7b8:	0c 94 b4 04 	jmp	0x968	; 0x968 <__fp_inf>
 7bc:	51 11       	cpse	r21, r1
 7be:	0c 94 ff 04 	jmp	0x9fe	; 0x9fe <__fp_szero>
 7c2:	0c 94 ba 04 	jmp	0x974	; 0x974 <__fp_nan>

000007c6 <__divsf3x>:
 7c6:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__fp_split3>
 7ca:	68 f3       	brcs	.-38     	; 0x7a6 <__divsf3+0x8>

000007cc <__divsf3_pse>:
 7cc:	99 23       	and	r25, r25
 7ce:	b1 f3       	breq	.-20     	; 0x7bc <__divsf3+0x1e>
 7d0:	55 23       	and	r21, r21
 7d2:	91 f3       	breq	.-28     	; 0x7b8 <__divsf3+0x1a>
 7d4:	95 1b       	sub	r25, r21
 7d6:	55 0b       	sbc	r21, r21
 7d8:	bb 27       	eor	r27, r27
 7da:	aa 27       	eor	r26, r26
 7dc:	62 17       	cp	r22, r18
 7de:	73 07       	cpc	r23, r19
 7e0:	84 07       	cpc	r24, r20
 7e2:	38 f0       	brcs	.+14     	; 0x7f2 <__divsf3_pse+0x26>
 7e4:	9f 5f       	subi	r25, 0xFF	; 255
 7e6:	5f 4f       	sbci	r21, 0xFF	; 255
 7e8:	22 0f       	add	r18, r18
 7ea:	33 1f       	adc	r19, r19
 7ec:	44 1f       	adc	r20, r20
 7ee:	aa 1f       	adc	r26, r26
 7f0:	a9 f3       	breq	.-22     	; 0x7dc <__divsf3_pse+0x10>
 7f2:	35 d0       	rcall	.+106    	; 0x85e <__divsf3_pse+0x92>
 7f4:	0e 2e       	mov	r0, r30
 7f6:	3a f0       	brmi	.+14     	; 0x806 <__divsf3_pse+0x3a>
 7f8:	e0 e8       	ldi	r30, 0x80	; 128
 7fa:	32 d0       	rcall	.+100    	; 0x860 <__divsf3_pse+0x94>
 7fc:	91 50       	subi	r25, 0x01	; 1
 7fe:	50 40       	sbci	r21, 0x00	; 0
 800:	e6 95       	lsr	r30
 802:	00 1c       	adc	r0, r0
 804:	ca f7       	brpl	.-14     	; 0x7f8 <__divsf3_pse+0x2c>
 806:	2b d0       	rcall	.+86     	; 0x85e <__divsf3_pse+0x92>
 808:	fe 2f       	mov	r31, r30
 80a:	29 d0       	rcall	.+82     	; 0x85e <__divsf3_pse+0x92>
 80c:	66 0f       	add	r22, r22
 80e:	77 1f       	adc	r23, r23
 810:	88 1f       	adc	r24, r24
 812:	bb 1f       	adc	r27, r27
 814:	26 17       	cp	r18, r22
 816:	37 07       	cpc	r19, r23
 818:	48 07       	cpc	r20, r24
 81a:	ab 07       	cpc	r26, r27
 81c:	b0 e8       	ldi	r27, 0x80	; 128
 81e:	09 f0       	breq	.+2      	; 0x822 <__divsf3_pse+0x56>
 820:	bb 0b       	sbc	r27, r27
 822:	80 2d       	mov	r24, r0
 824:	bf 01       	movw	r22, r30
 826:	ff 27       	eor	r31, r31
 828:	93 58       	subi	r25, 0x83	; 131
 82a:	5f 4f       	sbci	r21, 0xFF	; 255
 82c:	3a f0       	brmi	.+14     	; 0x83c <__divsf3_pse+0x70>
 82e:	9e 3f       	cpi	r25, 0xFE	; 254
 830:	51 05       	cpc	r21, r1
 832:	78 f0       	brcs	.+30     	; 0x852 <__divsf3_pse+0x86>
 834:	0c 94 b4 04 	jmp	0x968	; 0x968 <__fp_inf>
 838:	0c 94 ff 04 	jmp	0x9fe	; 0x9fe <__fp_szero>
 83c:	5f 3f       	cpi	r21, 0xFF	; 255
 83e:	e4 f3       	brlt	.-8      	; 0x838 <__divsf3_pse+0x6c>
 840:	98 3e       	cpi	r25, 0xE8	; 232
 842:	d4 f3       	brlt	.-12     	; 0x838 <__divsf3_pse+0x6c>
 844:	86 95       	lsr	r24
 846:	77 95       	ror	r23
 848:	67 95       	ror	r22
 84a:	b7 95       	ror	r27
 84c:	f7 95       	ror	r31
 84e:	9f 5f       	subi	r25, 0xFF	; 255
 850:	c9 f7       	brne	.-14     	; 0x844 <__divsf3_pse+0x78>
 852:	88 0f       	add	r24, r24
 854:	91 1d       	adc	r25, r1
 856:	96 95       	lsr	r25
 858:	87 95       	ror	r24
 85a:	97 f9       	bld	r25, 7
 85c:	08 95       	ret
 85e:	e1 e0       	ldi	r30, 0x01	; 1
 860:	66 0f       	add	r22, r22
 862:	77 1f       	adc	r23, r23
 864:	88 1f       	adc	r24, r24
 866:	bb 1f       	adc	r27, r27
 868:	62 17       	cp	r22, r18
 86a:	73 07       	cpc	r23, r19
 86c:	84 07       	cpc	r24, r20
 86e:	ba 07       	cpc	r27, r26
 870:	20 f0       	brcs	.+8      	; 0x87a <__divsf3_pse+0xae>
 872:	62 1b       	sub	r22, r18
 874:	73 0b       	sbc	r23, r19
 876:	84 0b       	sbc	r24, r20
 878:	ba 0b       	sbc	r27, r26
 87a:	ee 1f       	adc	r30, r30
 87c:	88 f7       	brcc	.-30     	; 0x860 <__divsf3_pse+0x94>
 87e:	e0 95       	com	r30
 880:	08 95       	ret

00000882 <__fixsfsi>:
 882:	0e 94 48 04 	call	0x890	; 0x890 <__fixunssfsi>
 886:	68 94       	set
 888:	b1 11       	cpse	r27, r1
 88a:	0c 94 ff 04 	jmp	0x9fe	; 0x9fe <__fp_szero>
 88e:	08 95       	ret

00000890 <__fixunssfsi>:
 890:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <__fp_splitA>
 894:	88 f0       	brcs	.+34     	; 0x8b8 <__fixunssfsi+0x28>
 896:	9f 57       	subi	r25, 0x7F	; 127
 898:	98 f0       	brcs	.+38     	; 0x8c0 <__fixunssfsi+0x30>
 89a:	b9 2f       	mov	r27, r25
 89c:	99 27       	eor	r25, r25
 89e:	b7 51       	subi	r27, 0x17	; 23
 8a0:	b0 f0       	brcs	.+44     	; 0x8ce <__fixunssfsi+0x3e>
 8a2:	e1 f0       	breq	.+56     	; 0x8dc <__fixunssfsi+0x4c>
 8a4:	66 0f       	add	r22, r22
 8a6:	77 1f       	adc	r23, r23
 8a8:	88 1f       	adc	r24, r24
 8aa:	99 1f       	adc	r25, r25
 8ac:	1a f0       	brmi	.+6      	; 0x8b4 <__fixunssfsi+0x24>
 8ae:	ba 95       	dec	r27
 8b0:	c9 f7       	brne	.-14     	; 0x8a4 <__fixunssfsi+0x14>
 8b2:	14 c0       	rjmp	.+40     	; 0x8dc <__fixunssfsi+0x4c>
 8b4:	b1 30       	cpi	r27, 0x01	; 1
 8b6:	91 f0       	breq	.+36     	; 0x8dc <__fixunssfsi+0x4c>
 8b8:	0e 94 fe 04 	call	0x9fc	; 0x9fc <__fp_zero>
 8bc:	b1 e0       	ldi	r27, 0x01	; 1
 8be:	08 95       	ret
 8c0:	0c 94 fe 04 	jmp	0x9fc	; 0x9fc <__fp_zero>
 8c4:	67 2f       	mov	r22, r23
 8c6:	78 2f       	mov	r23, r24
 8c8:	88 27       	eor	r24, r24
 8ca:	b8 5f       	subi	r27, 0xF8	; 248
 8cc:	39 f0       	breq	.+14     	; 0x8dc <__fixunssfsi+0x4c>
 8ce:	b9 3f       	cpi	r27, 0xF9	; 249
 8d0:	cc f3       	brlt	.-14     	; 0x8c4 <__fixunssfsi+0x34>
 8d2:	86 95       	lsr	r24
 8d4:	77 95       	ror	r23
 8d6:	67 95       	ror	r22
 8d8:	b3 95       	inc	r27
 8da:	d9 f7       	brne	.-10     	; 0x8d2 <__fixunssfsi+0x42>
 8dc:	3e f4       	brtc	.+14     	; 0x8ec <__fixunssfsi+0x5c>
 8de:	90 95       	com	r25
 8e0:	80 95       	com	r24
 8e2:	70 95       	com	r23
 8e4:	61 95       	neg	r22
 8e6:	7f 4f       	sbci	r23, 0xFF	; 255
 8e8:	8f 4f       	sbci	r24, 0xFF	; 255
 8ea:	9f 4f       	sbci	r25, 0xFF	; 255
 8ec:	08 95       	ret

000008ee <__floatunsisf>:
 8ee:	e8 94       	clt
 8f0:	09 c0       	rjmp	.+18     	; 0x904 <__floatsisf+0x12>

000008f2 <__floatsisf>:
 8f2:	97 fb       	bst	r25, 7
 8f4:	3e f4       	brtc	.+14     	; 0x904 <__floatsisf+0x12>
 8f6:	90 95       	com	r25
 8f8:	80 95       	com	r24
 8fa:	70 95       	com	r23
 8fc:	61 95       	neg	r22
 8fe:	7f 4f       	sbci	r23, 0xFF	; 255
 900:	8f 4f       	sbci	r24, 0xFF	; 255
 902:	9f 4f       	sbci	r25, 0xFF	; 255
 904:	99 23       	and	r25, r25
 906:	a9 f0       	breq	.+42     	; 0x932 <__floatsisf+0x40>
 908:	f9 2f       	mov	r31, r25
 90a:	96 e9       	ldi	r25, 0x96	; 150
 90c:	bb 27       	eor	r27, r27
 90e:	93 95       	inc	r25
 910:	f6 95       	lsr	r31
 912:	87 95       	ror	r24
 914:	77 95       	ror	r23
 916:	67 95       	ror	r22
 918:	b7 95       	ror	r27
 91a:	f1 11       	cpse	r31, r1
 91c:	f8 cf       	rjmp	.-16     	; 0x90e <__floatsisf+0x1c>
 91e:	fa f4       	brpl	.+62     	; 0x95e <__floatsisf+0x6c>
 920:	bb 0f       	add	r27, r27
 922:	11 f4       	brne	.+4      	; 0x928 <__floatsisf+0x36>
 924:	60 ff       	sbrs	r22, 0
 926:	1b c0       	rjmp	.+54     	; 0x95e <__floatsisf+0x6c>
 928:	6f 5f       	subi	r22, 0xFF	; 255
 92a:	7f 4f       	sbci	r23, 0xFF	; 255
 92c:	8f 4f       	sbci	r24, 0xFF	; 255
 92e:	9f 4f       	sbci	r25, 0xFF	; 255
 930:	16 c0       	rjmp	.+44     	; 0x95e <__floatsisf+0x6c>
 932:	88 23       	and	r24, r24
 934:	11 f0       	breq	.+4      	; 0x93a <__floatsisf+0x48>
 936:	96 e9       	ldi	r25, 0x96	; 150
 938:	11 c0       	rjmp	.+34     	; 0x95c <__floatsisf+0x6a>
 93a:	77 23       	and	r23, r23
 93c:	21 f0       	breq	.+8      	; 0x946 <__floatsisf+0x54>
 93e:	9e e8       	ldi	r25, 0x8E	; 142
 940:	87 2f       	mov	r24, r23
 942:	76 2f       	mov	r23, r22
 944:	05 c0       	rjmp	.+10     	; 0x950 <__floatsisf+0x5e>
 946:	66 23       	and	r22, r22
 948:	71 f0       	breq	.+28     	; 0x966 <__floatsisf+0x74>
 94a:	96 e8       	ldi	r25, 0x86	; 134
 94c:	86 2f       	mov	r24, r22
 94e:	70 e0       	ldi	r23, 0x00	; 0
 950:	60 e0       	ldi	r22, 0x00	; 0
 952:	2a f0       	brmi	.+10     	; 0x95e <__floatsisf+0x6c>
 954:	9a 95       	dec	r25
 956:	66 0f       	add	r22, r22
 958:	77 1f       	adc	r23, r23
 95a:	88 1f       	adc	r24, r24
 95c:	da f7       	brpl	.-10     	; 0x954 <__floatsisf+0x62>
 95e:	88 0f       	add	r24, r24
 960:	96 95       	lsr	r25
 962:	87 95       	ror	r24
 964:	97 f9       	bld	r25, 7
 966:	08 95       	ret

00000968 <__fp_inf>:
 968:	97 f9       	bld	r25, 7
 96a:	9f 67       	ori	r25, 0x7F	; 127
 96c:	80 e8       	ldi	r24, 0x80	; 128
 96e:	70 e0       	ldi	r23, 0x00	; 0
 970:	60 e0       	ldi	r22, 0x00	; 0
 972:	08 95       	ret

00000974 <__fp_nan>:
 974:	9f ef       	ldi	r25, 0xFF	; 255
 976:	80 ec       	ldi	r24, 0xC0	; 192
 978:	08 95       	ret

0000097a <__fp_pscA>:
 97a:	00 24       	eor	r0, r0
 97c:	0a 94       	dec	r0
 97e:	16 16       	cp	r1, r22
 980:	17 06       	cpc	r1, r23
 982:	18 06       	cpc	r1, r24
 984:	09 06       	cpc	r0, r25
 986:	08 95       	ret

00000988 <__fp_pscB>:
 988:	00 24       	eor	r0, r0
 98a:	0a 94       	dec	r0
 98c:	12 16       	cp	r1, r18
 98e:	13 06       	cpc	r1, r19
 990:	14 06       	cpc	r1, r20
 992:	05 06       	cpc	r0, r21
 994:	08 95       	ret

00000996 <__fp_round>:
 996:	09 2e       	mov	r0, r25
 998:	03 94       	inc	r0
 99a:	00 0c       	add	r0, r0
 99c:	11 f4       	brne	.+4      	; 0x9a2 <__fp_round+0xc>
 99e:	88 23       	and	r24, r24
 9a0:	52 f0       	brmi	.+20     	; 0x9b6 <__fp_round+0x20>
 9a2:	bb 0f       	add	r27, r27
 9a4:	40 f4       	brcc	.+16     	; 0x9b6 <__fp_round+0x20>
 9a6:	bf 2b       	or	r27, r31
 9a8:	11 f4       	brne	.+4      	; 0x9ae <__fp_round+0x18>
 9aa:	60 ff       	sbrs	r22, 0
 9ac:	04 c0       	rjmp	.+8      	; 0x9b6 <__fp_round+0x20>
 9ae:	6f 5f       	subi	r22, 0xFF	; 255
 9b0:	7f 4f       	sbci	r23, 0xFF	; 255
 9b2:	8f 4f       	sbci	r24, 0xFF	; 255
 9b4:	9f 4f       	sbci	r25, 0xFF	; 255
 9b6:	08 95       	ret

000009b8 <__fp_split3>:
 9b8:	57 fd       	sbrc	r21, 7
 9ba:	90 58       	subi	r25, 0x80	; 128
 9bc:	44 0f       	add	r20, r20
 9be:	55 1f       	adc	r21, r21
 9c0:	59 f0       	breq	.+22     	; 0x9d8 <__fp_splitA+0x10>
 9c2:	5f 3f       	cpi	r21, 0xFF	; 255
 9c4:	71 f0       	breq	.+28     	; 0x9e2 <__fp_splitA+0x1a>
 9c6:	47 95       	ror	r20

000009c8 <__fp_splitA>:
 9c8:	88 0f       	add	r24, r24
 9ca:	97 fb       	bst	r25, 7
 9cc:	99 1f       	adc	r25, r25
 9ce:	61 f0       	breq	.+24     	; 0x9e8 <__fp_splitA+0x20>
 9d0:	9f 3f       	cpi	r25, 0xFF	; 255
 9d2:	79 f0       	breq	.+30     	; 0x9f2 <__fp_splitA+0x2a>
 9d4:	87 95       	ror	r24
 9d6:	08 95       	ret
 9d8:	12 16       	cp	r1, r18
 9da:	13 06       	cpc	r1, r19
 9dc:	14 06       	cpc	r1, r20
 9de:	55 1f       	adc	r21, r21
 9e0:	f2 cf       	rjmp	.-28     	; 0x9c6 <__fp_split3+0xe>
 9e2:	46 95       	lsr	r20
 9e4:	f1 df       	rcall	.-30     	; 0x9c8 <__fp_splitA>
 9e6:	08 c0       	rjmp	.+16     	; 0x9f8 <__fp_splitA+0x30>
 9e8:	16 16       	cp	r1, r22
 9ea:	17 06       	cpc	r1, r23
 9ec:	18 06       	cpc	r1, r24
 9ee:	99 1f       	adc	r25, r25
 9f0:	f1 cf       	rjmp	.-30     	; 0x9d4 <__fp_splitA+0xc>
 9f2:	86 95       	lsr	r24
 9f4:	71 05       	cpc	r23, r1
 9f6:	61 05       	cpc	r22, r1
 9f8:	08 94       	sec
 9fa:	08 95       	ret

000009fc <__fp_zero>:
 9fc:	e8 94       	clt

000009fe <__fp_szero>:
 9fe:	bb 27       	eor	r27, r27
 a00:	66 27       	eor	r22, r22
 a02:	77 27       	eor	r23, r23
 a04:	cb 01       	movw	r24, r22
 a06:	97 f9       	bld	r25, 7
 a08:	08 95       	ret

00000a0a <__mulsf3>:
 a0a:	0e 94 18 05 	call	0xa30	; 0xa30 <__mulsf3x>
 a0e:	0c 94 cb 04 	jmp	0x996	; 0x996 <__fp_round>
 a12:	0e 94 bd 04 	call	0x97a	; 0x97a <__fp_pscA>
 a16:	38 f0       	brcs	.+14     	; 0xa26 <__mulsf3+0x1c>
 a18:	0e 94 c4 04 	call	0x988	; 0x988 <__fp_pscB>
 a1c:	20 f0       	brcs	.+8      	; 0xa26 <__mulsf3+0x1c>
 a1e:	95 23       	and	r25, r21
 a20:	11 f0       	breq	.+4      	; 0xa26 <__mulsf3+0x1c>
 a22:	0c 94 b4 04 	jmp	0x968	; 0x968 <__fp_inf>
 a26:	0c 94 ba 04 	jmp	0x974	; 0x974 <__fp_nan>
 a2a:	11 24       	eor	r1, r1
 a2c:	0c 94 ff 04 	jmp	0x9fe	; 0x9fe <__fp_szero>

00000a30 <__mulsf3x>:
 a30:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <__fp_split3>
 a34:	70 f3       	brcs	.-36     	; 0xa12 <__mulsf3+0x8>

00000a36 <__mulsf3_pse>:
 a36:	95 9f       	mul	r25, r21
 a38:	c1 f3       	breq	.-16     	; 0xa2a <__mulsf3+0x20>
 a3a:	95 0f       	add	r25, r21
 a3c:	50 e0       	ldi	r21, 0x00	; 0
 a3e:	55 1f       	adc	r21, r21
 a40:	62 9f       	mul	r22, r18
 a42:	f0 01       	movw	r30, r0
 a44:	72 9f       	mul	r23, r18
 a46:	bb 27       	eor	r27, r27
 a48:	f0 0d       	add	r31, r0
 a4a:	b1 1d       	adc	r27, r1
 a4c:	63 9f       	mul	r22, r19
 a4e:	aa 27       	eor	r26, r26
 a50:	f0 0d       	add	r31, r0
 a52:	b1 1d       	adc	r27, r1
 a54:	aa 1f       	adc	r26, r26
 a56:	64 9f       	mul	r22, r20
 a58:	66 27       	eor	r22, r22
 a5a:	b0 0d       	add	r27, r0
 a5c:	a1 1d       	adc	r26, r1
 a5e:	66 1f       	adc	r22, r22
 a60:	82 9f       	mul	r24, r18
 a62:	22 27       	eor	r18, r18
 a64:	b0 0d       	add	r27, r0
 a66:	a1 1d       	adc	r26, r1
 a68:	62 1f       	adc	r22, r18
 a6a:	73 9f       	mul	r23, r19
 a6c:	b0 0d       	add	r27, r0
 a6e:	a1 1d       	adc	r26, r1
 a70:	62 1f       	adc	r22, r18
 a72:	83 9f       	mul	r24, r19
 a74:	a0 0d       	add	r26, r0
 a76:	61 1d       	adc	r22, r1
 a78:	22 1f       	adc	r18, r18
 a7a:	74 9f       	mul	r23, r20
 a7c:	33 27       	eor	r19, r19
 a7e:	a0 0d       	add	r26, r0
 a80:	61 1d       	adc	r22, r1
 a82:	23 1f       	adc	r18, r19
 a84:	84 9f       	mul	r24, r20
 a86:	60 0d       	add	r22, r0
 a88:	21 1d       	adc	r18, r1
 a8a:	82 2f       	mov	r24, r18
 a8c:	76 2f       	mov	r23, r22
 a8e:	6a 2f       	mov	r22, r26
 a90:	11 24       	eor	r1, r1
 a92:	9f 57       	subi	r25, 0x7F	; 127
 a94:	50 40       	sbci	r21, 0x00	; 0
 a96:	9a f0       	brmi	.+38     	; 0xabe <__mulsf3_pse+0x88>
 a98:	f1 f0       	breq	.+60     	; 0xad6 <__mulsf3_pse+0xa0>
 a9a:	88 23       	and	r24, r24
 a9c:	4a f0       	brmi	.+18     	; 0xab0 <__mulsf3_pse+0x7a>
 a9e:	ee 0f       	add	r30, r30
 aa0:	ff 1f       	adc	r31, r31
 aa2:	bb 1f       	adc	r27, r27
 aa4:	66 1f       	adc	r22, r22
 aa6:	77 1f       	adc	r23, r23
 aa8:	88 1f       	adc	r24, r24
 aaa:	91 50       	subi	r25, 0x01	; 1
 aac:	50 40       	sbci	r21, 0x00	; 0
 aae:	a9 f7       	brne	.-22     	; 0xa9a <__mulsf3_pse+0x64>
 ab0:	9e 3f       	cpi	r25, 0xFE	; 254
 ab2:	51 05       	cpc	r21, r1
 ab4:	80 f0       	brcs	.+32     	; 0xad6 <__mulsf3_pse+0xa0>
 ab6:	0c 94 b4 04 	jmp	0x968	; 0x968 <__fp_inf>
 aba:	0c 94 ff 04 	jmp	0x9fe	; 0x9fe <__fp_szero>
 abe:	5f 3f       	cpi	r21, 0xFF	; 255
 ac0:	e4 f3       	brlt	.-8      	; 0xaba <__mulsf3_pse+0x84>
 ac2:	98 3e       	cpi	r25, 0xE8	; 232
 ac4:	d4 f3       	brlt	.-12     	; 0xaba <__mulsf3_pse+0x84>
 ac6:	86 95       	lsr	r24
 ac8:	77 95       	ror	r23
 aca:	67 95       	ror	r22
 acc:	b7 95       	ror	r27
 ace:	f7 95       	ror	r31
 ad0:	e7 95       	ror	r30
 ad2:	9f 5f       	subi	r25, 0xFF	; 255
 ad4:	c1 f7       	brne	.-16     	; 0xac6 <__mulsf3_pse+0x90>
 ad6:	fe 2b       	or	r31, r30
 ad8:	88 0f       	add	r24, r24
 ada:	91 1d       	adc	r25, r1
 adc:	96 95       	lsr	r25
 ade:	87 95       	ror	r24
 ae0:	97 f9       	bld	r25, 7
 ae2:	08 95       	ret

00000ae4 <__mulshisi3>:
 ae4:	b7 ff       	sbrs	r27, 7
 ae6:	0c 94 7a 05 	jmp	0xaf4	; 0xaf4 <__muluhisi3>

00000aea <__mulohisi3>:
 aea:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <__muluhisi3>
 aee:	82 1b       	sub	r24, r18
 af0:	93 0b       	sbc	r25, r19
 af2:	08 95       	ret

00000af4 <__muluhisi3>:
 af4:	0e 94 85 05 	call	0xb0a	; 0xb0a <__umulhisi3>
 af8:	a5 9f       	mul	r26, r21
 afa:	90 0d       	add	r25, r0
 afc:	b4 9f       	mul	r27, r20
 afe:	90 0d       	add	r25, r0
 b00:	a4 9f       	mul	r26, r20
 b02:	80 0d       	add	r24, r0
 b04:	91 1d       	adc	r25, r1
 b06:	11 24       	eor	r1, r1
 b08:	08 95       	ret

00000b0a <__umulhisi3>:
 b0a:	a2 9f       	mul	r26, r18
 b0c:	b0 01       	movw	r22, r0
 b0e:	b3 9f       	mul	r27, r19
 b10:	c0 01       	movw	r24, r0
 b12:	a3 9f       	mul	r26, r19
 b14:	70 0d       	add	r23, r0
 b16:	81 1d       	adc	r24, r1
 b18:	11 24       	eor	r1, r1
 b1a:	91 1d       	adc	r25, r1
 b1c:	b2 9f       	mul	r27, r18
 b1e:	70 0d       	add	r23, r0
 b20:	81 1d       	adc	r24, r1
 b22:	11 24       	eor	r1, r1
 b24:	91 1d       	adc	r25, r1
 b26:	08 95       	ret

00000b28 <_exit>:
 b28:	f8 94       	cli

00000b2a <__stop_program>:
 b2a:	ff cf       	rjmp	.-2      	; 0xb2a <__stop_program>
