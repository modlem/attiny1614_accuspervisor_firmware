
attiny1614_accsupervisor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00803800  000013b4  00001468  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001378  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000003c  00009378  00001378  0000142c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000047  00803804  00803804  0000146c  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  0000146c  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000014c8  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000140  00000000  00000000  00001508  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000036e1  00000000  00000000  00001648  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001cf4  00000000  00000000  00004d29  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000c07  00000000  00000000  00006a1d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000350  00000000  00000000  00007624  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00001c3b  00000000  00000000  00007974  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000cd1  00000000  00000000  000095af  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000110  00000000  00000000  0000a280  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__ctors_end>
       4:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
       8:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
       c:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
      10:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
      14:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
      18:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
      1c:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__vector_7>
      20:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
      24:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
      28:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
      2c:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
      30:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
      34:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
      38:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
      3c:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
      40:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
      44:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
      48:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
      4c:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
      50:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
      54:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
      58:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
      5c:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
      60:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
      64:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
      68:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
      6c:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__vector_27>
      70:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
      74:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
      78:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__bad_interrupt>
      7c:	5f 03       	fmul	r21, r23
      7e:	15 04       	cpc	r1, r5
      80:	78 03       	fmul	r23, r16
      82:	15 04       	cpc	r1, r5
      84:	15 04       	cpc	r1, r5
      86:	15 04       	cpc	r1, r5
      88:	15 04       	cpc	r1, r5
      8a:	15 04       	cpc	r1, r5
      8c:	91 03       	fmuls	r17, r17
      8e:	15 04       	cpc	r1, r5
      90:	aa 03       	fmulsu	r18, r18
      92:	15 04       	cpc	r1, r5
      94:	c3 03       	fmuls	r20, r19
      96:	15 04       	cpc	r1, r5
      98:	15 04       	cpc	r1, r5
      9a:	15 04       	cpc	r1, r5
      9c:	e9 03       	fmulsu	r22, r17
      9e:	15 04       	cpc	r1, r5
      a0:	00 04       	cpc	r0, r0

000000a2 <__ctors_end>:
      a2:	11 24       	eor	r1, r1
      a4:	1f be       	out	0x3f, r1	; 63
      a6:	cf ef       	ldi	r28, 0xFF	; 255
      a8:	cd bf       	out	0x3d, r28	; 61
      aa:	df e3       	ldi	r29, 0x3F	; 63
      ac:	de bf       	out	0x3e, r29	; 62

000000ae <__do_copy_data>:
      ae:	18 e3       	ldi	r17, 0x38	; 56
      b0:	a0 e0       	ldi	r26, 0x00	; 0
      b2:	b8 e3       	ldi	r27, 0x38	; 56
      b4:	e4 eb       	ldi	r30, 0xB4	; 180
      b6:	f3 e1       	ldi	r31, 0x13	; 19
      b8:	02 c0       	rjmp	.+4      	; 0xbe <__do_copy_data+0x10>
      ba:	05 90       	lpm	r0, Z+
      bc:	0d 92       	st	X+, r0
      be:	a4 30       	cpi	r26, 0x04	; 4
      c0:	b1 07       	cpc	r27, r17
      c2:	d9 f7       	brne	.-10     	; 0xba <__do_copy_data+0xc>

000000c4 <__do_clear_bss>:
      c4:	28 e3       	ldi	r18, 0x38	; 56
      c6:	a4 e0       	ldi	r26, 0x04	; 4
      c8:	b8 e3       	ldi	r27, 0x38	; 56
      ca:	01 c0       	rjmp	.+2      	; 0xce <.do_clear_bss_start>

000000cc <.do_clear_bss_loop>:
      cc:	1d 92       	st	X+, r1

000000ce <.do_clear_bss_start>:
      ce:	ab 34       	cpi	r26, 0x4B	; 75
      d0:	b2 07       	cpc	r27, r18
      d2:	e1 f7       	brne	.-8      	; 0xcc <.do_clear_bss_loop>
      d4:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <main>
      d8:	0c 94 ba 09 	jmp	0x1374	; 0x1374 <_exit>

000000dc <__bad_interrupt>:
      dc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000e0 <USART0_sendChar>:
}

int isAdcOn()
{
	return _gpio_status & GPIO_ADC_MASK;
}
      e0:	90 91 04 08 	lds	r25, 0x0804	; 0x800804 <__TEXT_REGION_LENGTH__+0x700804>
      e4:	95 ff       	sbrs	r25, 5
      e6:	fc cf       	rjmp	.-8      	; 0xe0 <USART0_sendChar>
      e8:	e0 e0       	ldi	r30, 0x00	; 0
      ea:	f8 e0       	ldi	r31, 0x08	; 8
      ec:	94 81       	ldd	r25, Z+4	; 0x04
      ee:	90 64       	ori	r25, 0x40	; 64
      f0:	94 83       	std	Z+4, r25	; 0x04
      f2:	82 83       	std	Z+2, r24	; 0x02
      f4:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <__TEXT_REGION_LENGTH__+0x700804>
      f8:	86 ff       	sbrs	r24, 6
      fa:	fc cf       	rjmp	.-8      	; 0xf4 <USART0_sendChar+0x14>
      fc:	80 e0       	ldi	r24, 0x00	; 0
      fe:	90 e0       	ldi	r25, 0x00	; 0
     100:	08 95       	ret

00000102 <USART0_sendBuf>:
     102:	ef 92       	push	r14
     104:	ff 92       	push	r15
     106:	1f 93       	push	r17
     108:	cf 93       	push	r28
     10a:	df 93       	push	r29
     10c:	7c 01       	movw	r14, r24
     10e:	16 2f       	mov	r17, r22
     110:	c0 e0       	ldi	r28, 0x00	; 0
     112:	d0 e0       	ldi	r29, 0x00	; 0
     114:	09 c0       	rjmp	.+18     	; 0x128 <USART0_sendBuf+0x26>
     116:	f7 01       	movw	r30, r14
     118:	ec 0f       	add	r30, r28
     11a:	fd 1f       	adc	r31, r29
     11c:	60 e0       	ldi	r22, 0x00	; 0
     11e:	70 e0       	ldi	r23, 0x00	; 0
     120:	80 81       	ld	r24, Z
     122:	0e 94 70 00 	call	0xe0	; 0xe0 <USART0_sendChar>
     126:	21 96       	adiw	r28, 0x01	; 1
     128:	81 2f       	mov	r24, r17
     12a:	90 e0       	ldi	r25, 0x00	; 0
     12c:	c8 17       	cp	r28, r24
     12e:	d9 07       	cpc	r29, r25
     130:	90 f3       	brcs	.-28     	; 0x116 <USART0_sendBuf+0x14>
     132:	df 91       	pop	r29
     134:	cf 91       	pop	r28
     136:	1f 91       	pop	r17
     138:	ff 90       	pop	r15
     13a:	ef 90       	pop	r14
     13c:	08 95       	ret

0000013e <__vector_7>:
     13e:	1f 92       	push	r1
     140:	0f 92       	push	r0
     142:	0f b6       	in	r0, 0x3f	; 63
     144:	0f 92       	push	r0
     146:	11 24       	eor	r1, r1
     148:	2f 93       	push	r18
     14a:	3f 93       	push	r19
     14c:	4f 93       	push	r20
     14e:	5f 93       	push	r21
     150:	6f 93       	push	r22
     152:	7f 93       	push	r23
     154:	8f 93       	push	r24
     156:	9f 93       	push	r25
     158:	af 93       	push	r26
     15a:	bf 93       	push	r27
     15c:	ef 93       	push	r30
     15e:	ff 93       	push	r31
     160:	81 e0       	ldi	r24, 0x01	; 1
     162:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <__TEXT_REGION_LENGTH__+0x700153>
     166:	0e 94 a1 04 	call	0x942	; 0x942 <incTick>
     16a:	80 91 05 38 	lds	r24, 0x3805	; 0x803805 <tx2_timeout>
     16e:	8f 31       	cpi	r24, 0x1F	; 31
     170:	18 f0       	brcs	.+6      	; 0x178 <__vector_7+0x3a>
     172:	8e e1       	ldi	r24, 0x1E	; 30
     174:	80 93 05 38 	sts	0x3805, r24	; 0x803805 <tx2_timeout>
     178:	80 91 05 38 	lds	r24, 0x3805	; 0x803805 <tx2_timeout>
     17c:	88 23       	and	r24, r24
     17e:	29 f0       	breq	.+10     	; 0x18a <__vector_7+0x4c>
     180:	80 91 05 38 	lds	r24, 0x3805	; 0x803805 <tx2_timeout>
     184:	81 50       	subi	r24, 0x01	; 1
     186:	80 93 05 38 	sts	0x3805, r24	; 0x803805 <tx2_timeout>
     18a:	ff 91       	pop	r31
     18c:	ef 91       	pop	r30
     18e:	bf 91       	pop	r27
     190:	af 91       	pop	r26
     192:	9f 91       	pop	r25
     194:	8f 91       	pop	r24
     196:	7f 91       	pop	r23
     198:	6f 91       	pop	r22
     19a:	5f 91       	pop	r21
     19c:	4f 91       	pop	r20
     19e:	3f 91       	pop	r19
     1a0:	2f 91       	pop	r18
     1a2:	0f 90       	pop	r0
     1a4:	0f be       	out	0x3f, r0	; 63
     1a6:	0f 90       	pop	r0
     1a8:	1f 90       	pop	r1
     1aa:	18 95       	reti

000001ac <__vector_27>:
     1ac:	1f 92       	push	r1
     1ae:	0f 92       	push	r0
     1b0:	0f b6       	in	r0, 0x3f	; 63
     1b2:	0f 92       	push	r0
     1b4:	11 24       	eor	r1, r1
     1b6:	2f 93       	push	r18
     1b8:	3f 93       	push	r19
     1ba:	8f 93       	push	r24
     1bc:	9f 93       	push	r25
     1be:	ef 93       	push	r30
     1c0:	ff 93       	push	r31
     1c2:	1f c0       	rjmp	.+62     	; 0x202 <__vector_27+0x56>
     1c4:	80 91 01 08 	lds	r24, 0x0801	; 0x800801 <__TEXT_REGION_LENGTH__+0x700801>
     1c8:	81 fd       	sbrc	r24, 1
     1ca:	1b c0       	rjmp	.+54     	; 0x202 <__vector_27+0x56>
     1cc:	80 91 0e 38 	lds	r24, 0x380E	; 0x80380e <uart0_rbuf_wpnt>
     1d0:	90 91 0f 38 	lds	r25, 0x380F	; 0x80380f <uart0_rbuf_wpnt+0x1>
     1d4:	9c 01       	movw	r18, r24
     1d6:	2f 5f       	subi	r18, 0xFF	; 255
     1d8:	3f 4f       	sbci	r19, 0xFF	; 255
     1da:	20 93 0e 38 	sts	0x380E, r18	; 0x80380e <uart0_rbuf_wpnt>
     1de:	30 93 0f 38 	sts	0x380F, r19	; 0x80380f <uart0_rbuf_wpnt+0x1>
     1e2:	20 91 00 08 	lds	r18, 0x0800	; 0x800800 <__TEXT_REGION_LENGTH__+0x700800>
     1e6:	fc 01       	movw	r30, r24
     1e8:	e0 5f       	subi	r30, 0xF0	; 240
     1ea:	f7 4c       	sbci	r31, 0xC7	; 199
     1ec:	20 83       	st	Z, r18
     1ee:	80 91 0e 38 	lds	r24, 0x380E	; 0x80380e <uart0_rbuf_wpnt>
     1f2:	90 91 0f 38 	lds	r25, 0x380F	; 0x80380f <uart0_rbuf_wpnt+0x1>
     1f6:	80 97       	sbiw	r24, 0x20	; 32
     1f8:	20 f0       	brcs	.+8      	; 0x202 <__vector_27+0x56>
     1fa:	10 92 0e 38 	sts	0x380E, r1	; 0x80380e <uart0_rbuf_wpnt>
     1fe:	10 92 0f 38 	sts	0x380F, r1	; 0x80380f <uart0_rbuf_wpnt+0x1>
     202:	80 91 01 08 	lds	r24, 0x0801	; 0x800801 <__TEXT_REGION_LENGTH__+0x700801>
     206:	88 23       	and	r24, r24
     208:	ec f2       	brlt	.-70     	; 0x1c4 <__vector_27+0x18>
     20a:	20 91 0c 38 	lds	r18, 0x380C	; 0x80380c <uart0_rbuf_rpnt>
     20e:	30 91 0d 38 	lds	r19, 0x380D	; 0x80380d <uart0_rbuf_rpnt+0x1>
     212:	80 91 0e 38 	lds	r24, 0x380E	; 0x80380e <uart0_rbuf_wpnt>
     216:	90 91 0f 38 	lds	r25, 0x380F	; 0x80380f <uart0_rbuf_wpnt+0x1>
     21a:	28 17       	cp	r18, r24
     21c:	39 07       	cpc	r19, r25
     21e:	99 f4       	brne	.+38     	; 0x246 <__vector_27+0x9a>
     220:	80 91 0e 38 	lds	r24, 0x380E	; 0x80380e <uart0_rbuf_wpnt>
     224:	90 91 0f 38 	lds	r25, 0x380F	; 0x80380f <uart0_rbuf_wpnt+0x1>
     228:	01 96       	adiw	r24, 0x01	; 1
     22a:	80 93 0c 38 	sts	0x380C, r24	; 0x80380c <uart0_rbuf_rpnt>
     22e:	90 93 0d 38 	sts	0x380D, r25	; 0x80380d <uart0_rbuf_rpnt+0x1>
     232:	80 91 0c 38 	lds	r24, 0x380C	; 0x80380c <uart0_rbuf_rpnt>
     236:	90 91 0d 38 	lds	r25, 0x380D	; 0x80380d <uart0_rbuf_rpnt+0x1>
     23a:	80 97       	sbiw	r24, 0x20	; 32
     23c:	20 f0       	brcs	.+8      	; 0x246 <__vector_27+0x9a>
     23e:	10 92 0c 38 	sts	0x380C, r1	; 0x80380c <uart0_rbuf_rpnt>
     242:	10 92 0d 38 	sts	0x380D, r1	; 0x80380d <uart0_rbuf_rpnt+0x1>
     246:	ff 91       	pop	r31
     248:	ef 91       	pop	r30
     24a:	9f 91       	pop	r25
     24c:	8f 91       	pop	r24
     24e:	3f 91       	pop	r19
     250:	2f 91       	pop	r18
     252:	0f 90       	pop	r0
     254:	0f be       	out	0x3f, r0	; 63
     256:	0f 90       	pop	r0
     258:	1f 90       	pop	r1
     25a:	18 95       	reti

0000025c <RTC_init>:
     25c:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__TEXT_REGION_LENGTH__+0x700141>
     260:	81 11       	cpse	r24, r1
     262:	fc cf       	rjmp	.-8      	; 0x25c <RTC_init>
     264:	e0 e4       	ldi	r30, 0x40	; 64
     266:	f1 e0       	ldi	r31, 0x01	; 1
     268:	81 e0       	ldi	r24, 0x01	; 1
     26a:	87 83       	std	Z+7, r24	; 0x07
     26c:	85 83       	std	Z+5, r24	; 0x05
     26e:	82 8b       	std	Z+18, r24	; 0x12
     270:	89 e4       	ldi	r24, 0x49	; 73
     272:	80 8b       	std	Z+16, r24	; 0x10
     274:	80 e0       	ldi	r24, 0x00	; 0
     276:	90 e0       	ldi	r25, 0x00	; 0
     278:	08 95       	ret

0000027a <SLPCTRL_init>:
     27a:	e0 e5       	ldi	r30, 0x50	; 80
     27c:	f0 e0       	ldi	r31, 0x00	; 0
     27e:	80 81       	ld	r24, Z
     280:	84 60       	ori	r24, 0x04	; 4
     282:	80 83       	st	Z, r24
     284:	80 81       	ld	r24, Z
     286:	81 60       	ori	r24, 0x01	; 1
     288:	80 83       	st	Z, r24
     28a:	80 e0       	ldi	r24, 0x00	; 0
     28c:	90 e0       	ldi	r25, 0x00	; 0
     28e:	08 95       	ret

00000290 <GPIO_init>:
     290:	e0 e0       	ldi	r30, 0x00	; 0
     292:	f4 e0       	ldi	r31, 0x04	; 4
     294:	80 81       	ld	r24, Z
     296:	88 60       	ori	r24, 0x08	; 8
     298:	80 83       	st	Z, r24
     29a:	e0 e2       	ldi	r30, 0x20	; 32
     29c:	f4 e0       	ldi	r31, 0x04	; 4
     29e:	80 81       	ld	r24, Z
     2a0:	82 60       	ori	r24, 0x02	; 2
     2a2:	80 83       	st	Z, r24
     2a4:	80 e0       	ldi	r24, 0x00	; 0
     2a6:	90 e0       	ldi	r25, 0x00	; 0
     2a8:	08 95       	ret

000002aa <USART0_init>:
     2aa:	0f 93       	push	r16
     2ac:	1f 93       	push	r17
     2ae:	cf 93       	push	r28
     2b0:	c0 91 24 11 	lds	r28, 0x1124	; 0x801124 <__TEXT_REGION_LENGTH__+0x701124>
     2b4:	e0 e0       	ldi	r30, 0x00	; 0
     2b6:	f2 e0       	ldi	r31, 0x02	; 2
     2b8:	21 81       	ldd	r18, Z+1	; 0x01
     2ba:	2e 7f       	andi	r18, 0xFE	; 254
     2bc:	21 83       	std	Z+1, r18	; 0x01
     2be:	e0 e2       	ldi	r30, 0x20	; 32
     2c0:	f4 e0       	ldi	r31, 0x04	; 4
     2c2:	20 81       	ld	r18, Z
     2c4:	27 7f       	andi	r18, 0xF7	; 247
     2c6:	20 83       	st	Z, r18
     2c8:	20 81       	ld	r18, Z
     2ca:	24 60       	ori	r18, 0x04	; 4
     2cc:	20 83       	st	Z, r18
     2ce:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__floatunsisf>
     2d2:	20 e0       	ldi	r18, 0x00	; 0
     2d4:	30 e0       	ldi	r19, 0x00	; 0
     2d6:	40 e8       	ldi	r20, 0x80	; 128
     2d8:	51 e4       	ldi	r21, 0x41	; 65
     2da:	0e 94 4d 06 	call	0xc9a	; 0xc9a <__mulsf3>
     2de:	9b 01       	movw	r18, r22
     2e0:	ac 01       	movw	r20, r24
     2e2:	64 e5       	ldi	r22, 0x54	; 84
     2e4:	73 e7       	ldi	r23, 0x73	; 115
     2e6:	8b e4       	ldi	r24, 0x4B	; 75
     2e8:	9d e4       	ldi	r25, 0x4D	; 77
     2ea:	0e 94 17 05 	call	0xa2e	; 0xa2e <__divsf3>
     2ee:	20 e0       	ldi	r18, 0x00	; 0
     2f0:	30 e0       	ldi	r19, 0x00	; 0
     2f2:	40 e0       	ldi	r20, 0x00	; 0
     2f4:	5f e3       	ldi	r21, 0x3F	; 63
     2f6:	0e 94 ab 04 	call	0x956	; 0x956 <__addsf3>
     2fa:	0e 94 89 05 	call	0xb12	; 0xb12 <__fixsfsi>
     2fe:	9b 01       	movw	r18, r22
     300:	ac 01       	movw	r20, r24
     302:	ac 2f       	mov	r26, r28
     304:	cc 0f       	add	r28, r28
     306:	bb 0b       	sbc	r27, r27
     308:	bc 5f       	subi	r27, 0xFC	; 252
     30a:	0e 94 c0 06 	call	0xd80	; 0xd80 <__mulshisi3>
     30e:	8b 01       	movw	r16, r22
     310:	9c 01       	movw	r18, r24
     312:	99 23       	and	r25, r25
     314:	24 f4       	brge	.+8      	; 0x31e <USART0_init+0x74>
     316:	01 50       	subi	r16, 0x01	; 1
     318:	1c 4f       	sbci	r17, 0xFC	; 252
     31a:	2f 4f       	sbci	r18, 0xFF	; 255
     31c:	3f 4f       	sbci	r19, 0xFF	; 255
     31e:	d9 01       	movw	r26, r18
     320:	c8 01       	movw	r24, r16
     322:	07 2e       	mov	r0, r23
     324:	7a e0       	ldi	r23, 0x0A	; 10
     326:	b5 95       	asr	r27
     328:	a7 95       	ror	r26
     32a:	97 95       	ror	r25
     32c:	87 95       	ror	r24
     32e:	7a 95       	dec	r23
     330:	d1 f7       	brne	.-12     	; 0x326 <USART0_init+0x7c>
     332:	70 2d       	mov	r23, r0
     334:	e0 e0       	ldi	r30, 0x00	; 0
     336:	f8 e0       	ldi	r31, 0x08	; 8
     338:	80 87       	std	Z+8, r24	; 0x08
     33a:	91 87       	std	Z+9, r25	; 0x09
     33c:	80 e8       	ldi	r24, 0x80	; 128
     33e:	85 83       	std	Z+5, r24	; 0x05
     340:	83 e0       	ldi	r24, 0x03	; 3
     342:	87 83       	std	Z+7, r24	; 0x07
     344:	13 86       	std	Z+11, r1	; 0x0b
     346:	80 ec       	ldi	r24, 0xC0	; 192
     348:	86 83       	std	Z+6, r24	; 0x06
     34a:	80 e0       	ldi	r24, 0x00	; 0
     34c:	90 e0       	ldi	r25, 0x00	; 0
     34e:	cf 91       	pop	r28
     350:	1f 91       	pop	r17
     352:	0f 91       	pop	r16
     354:	08 95       	ret

00000356 <relayOn>:
     356:	80 91 0b 38 	lds	r24, 0x380B	; 0x80380b <_gpio_status>
     35a:	81 60       	ori	r24, 0x01	; 1
     35c:	80 93 0b 38 	sts	0x380B, r24	; 0x80380b <_gpio_status>
     360:	e0 e2       	ldi	r30, 0x20	; 32
     362:	f4 e0       	ldi	r31, 0x04	; 4
     364:	85 81       	ldd	r24, Z+5	; 0x05
     366:	82 60       	ori	r24, 0x02	; 2
     368:	85 83       	std	Z+5, r24	; 0x05
     36a:	08 95       	ret

0000036c <relayOff>:
     36c:	80 91 0b 38 	lds	r24, 0x380B	; 0x80380b <_gpio_status>
     370:	8e 7f       	andi	r24, 0xFE	; 254
     372:	80 93 0b 38 	sts	0x380B, r24	; 0x80380b <_gpio_status>
     376:	e0 e2       	ldi	r30, 0x20	; 32
     378:	f4 e0       	ldi	r31, 0x04	; 4
     37a:	86 81       	ldd	r24, Z+6	; 0x06
     37c:	82 60       	ori	r24, 0x02	; 2
     37e:	86 83       	std	Z+6, r24	; 0x06
     380:	08 95       	ret

00000382 <adcOn>:
     382:	80 91 0b 38 	lds	r24, 0x380B	; 0x80380b <_gpio_status>
     386:	82 60       	ori	r24, 0x02	; 2
     388:	80 93 0b 38 	sts	0x380B, r24	; 0x80380b <_gpio_status>
     38c:	e0 e0       	ldi	r30, 0x00	; 0
     38e:	f4 e0       	ldi	r31, 0x04	; 4
     390:	85 81       	ldd	r24, Z+5	; 0x05
     392:	88 60       	ori	r24, 0x08	; 8
     394:	85 83       	std	Z+5, r24	; 0x05
     396:	08 95       	ret

00000398 <adcOff>:
     398:	80 91 0b 38 	lds	r24, 0x380B	; 0x80380b <_gpio_status>
     39c:	8d 7f       	andi	r24, 0xFD	; 253
     39e:	80 93 0b 38 	sts	0x380B, r24	; 0x80380b <_gpio_status>
     3a2:	e0 e0       	ldi	r30, 0x00	; 0
     3a4:	f4 e0       	ldi	r31, 0x04	; 4
     3a6:	86 81       	ldd	r24, Z+6	; 0x06
     3a8:	88 60       	ori	r24, 0x08	; 8
     3aa:	86 83       	std	Z+6, r24	; 0x06
     3ac:	08 95       	ret

000003ae <isRelayOn>:
     3ae:	80 91 0b 38 	lds	r24, 0x380B	; 0x80380b <_gpio_status>
     3b2:	81 70       	andi	r24, 0x01	; 1
     3b4:	90 e0       	ldi	r25, 0x00	; 0
     3b6:	08 95       	ret

000003b8 <ADC_init>:

int ADC_init(void)
{
	// No inversion, no pull-up, no int., dig. buffer disable on PA1 and PA2.
	PORTA.PIN1CTRL &= ~PORT_ISC_gm;
     3b8:	e0 e0       	ldi	r30, 0x00	; 0
     3ba:	f4 e0       	ldi	r31, 0x04	; 4
     3bc:	81 89       	ldd	r24, Z+17	; 0x11
     3be:	88 7f       	andi	r24, 0xF8	; 248
     3c0:	81 8b       	std	Z+17, r24	; 0x11
	PORTA.PIN2CTRL &= ~PORT_ISC_gm;
     3c2:	82 89       	ldd	r24, Z+18	; 0x12
     3c4:	88 7f       	andi	r24, 0xF8	; 248
     3c6:	82 8b       	std	Z+18, r24	; 0x12
	PORTA.PIN1CTRL |= PORT_ISC_INPUT_DISABLE_gc;
     3c8:	81 89       	ldd	r24, Z+17	; 0x11
     3ca:	84 60       	ori	r24, 0x04	; 4
     3cc:	81 8b       	std	Z+17, r24	; 0x11
	PORTA.PIN2CTRL |= PORT_ISC_INPUT_DISABLE_gc;
     3ce:	82 89       	ldd	r24, Z+18	; 0x12
     3d0:	84 60       	ori	r24, 0x04	; 4
     3d2:	82 8b       	std	Z+18, r24	; 0x12
	
	// No run in standby, full 10-bit resolution, no freerun, enable.
	ADC0.CTRLA = (1 & ADC_ENABLE_bm);
     3d4:	e0 e0       	ldi	r30, 0x00	; 0
     3d6:	f6 e0       	ldi	r31, 0x06	; 6
     3d8:	81 e0       	ldi	r24, 0x01	; 1
     3da:	80 83       	st	Z, r24
	// No accumulation. Max. value will be 0x3FF (max. of 10-bit)
	ADC0.CTRLB = ADC_SAMPNUM_ACC1_gc;
     3dc:	11 82       	std	Z+1, r1	; 0x01
	// Big sample cap., VDD ref., DIV256 prescaler.
	// Ya, I know. It's an overkill. Better than going under.
	ADC0.CTRLC = ADC_REFSEL_VDDREF_gc | ADC_PRESC_DIV256_gc;
     3de:	97 e1       	ldi	r25, 0x17	; 23
     3e0:	92 83       	std	Z+2, r25	; 0x02
	// 256clk startup delay, no auto sample delay, no delay between samples.
	ADC0.CTRLD = ADC_INITDLY_DLY256_gc;
     3e2:	90 ea       	ldi	r25, 0xA0	; 160
     3e4:	93 83       	std	Z+3, r25	; 0x03
	// No window comp.
	ADC0.CTRLE = ADC_WINCM_NONE_gc;
     3e6:	14 82       	std	Z+4, r1	; 0x04
	// 0 sample len.
	ADC0.SAMPCTRL = (0 & ADC_SAMPLEN_gm);
     3e8:	15 82       	std	Z+5, r1	; 0x05
	// Not using evt. control
	ADC0.EVCTRL = (0 & ADC_STARTEI_bm);
     3ea:	11 86       	std	Z+9, r1	; 0x09
	// Not using int. control
	ADC0.INTCTRL = (0 & ADC_WCMP_bm) | (0 & ADC_RESRDY_bm);
     3ec:	12 86       	std	Z+10, r1	; 0x0a
	// Clearing possible previous int. flags
	ADC0.INTFLAGS = (1 & ADC_WCMP_bm) | (1 & ADC_RESRDY_bm);
     3ee:	83 87       	std	Z+11, r24	; 0x0b
	// Halting the peripheral in debug halt
	ADC0.DBGCTRL = (0 & ADC_DBGRUN_bm);
     3f0:	14 86       	std	Z+12, r1	; 0x0c
	
	return 0;
}
     3f2:	80 e0       	ldi	r24, 0x00	; 0
     3f4:	90 e0       	ldi	r25, 0x00	; 0
     3f6:	08 95       	ret

000003f8 <doAdcThings>:

void doAdcThings()
{
	if((ADC0.COMMAND & ADC_STCONV_bm) == 0)
     3f8:	80 91 08 06 	lds	r24, 0x0608	; 0x800608 <__TEXT_REGION_LENGTH__+0x700608>
     3fc:	80 fd       	sbrc	r24, 0
     3fe:	40 c0       	rjmp	.+128    	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
	{
		if(ADC0.INTFLAGS & ADC_RESRDY_bm)
     400:	80 91 0b 06 	lds	r24, 0x060B	; 0x80060b <__TEXT_REGION_LENGTH__+0x70060b>
     404:	80 ff       	sbrs	r24, 0
     406:	28 c0       	rjmp	.+80     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
		{
			// Something has been done from previous conversion.
			if((ADC0.MUXPOS & ADC_MUXPOS_gm) == ADC_MUXPOS_AIN1_gc)
     408:	80 91 06 06 	lds	r24, 0x0606	; 0x800606 <__TEXT_REGION_LENGTH__+0x700606>
     40c:	8f 71       	andi	r24, 0x1F	; 31
     40e:	81 30       	cpi	r24, 0x01	; 1
     410:	71 f4       	brne	.+28     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
			{
				// VBAT
				vbat_volt = ADC0.RES;
     412:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x700610>
     416:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x700611>
     41a:	80 93 09 38 	sts	0x3809, r24	; 0x803809 <vbat_volt>
     41e:	90 93 0a 38 	sts	0x380A, r25	; 0x80380a <vbat_volt+0x1>
				adc_state |= 0x1;
     422:	80 91 06 38 	lds	r24, 0x3806	; 0x803806 <adc_state>
     426:	81 60       	ori	r24, 0x01	; 1
     428:	80 93 06 38 	sts	0x3806, r24	; 0x803806 <adc_state>
     42c:	12 c0       	rjmp	.+36     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
			}
			else if((ADC0.MUXPOS & ADC_MUXPOS_gm) == ADC_MUXPOS_AIN2_gc)
     42e:	80 91 06 06 	lds	r24, 0x0606	; 0x800606 <__TEXT_REGION_LENGTH__+0x700606>
     432:	8f 71       	andi	r24, 0x1F	; 31
     434:	82 30       	cpi	r24, 0x02	; 2
     436:	69 f4       	brne	.+26     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
			{
				// VACC
				vacc_volt = ADC0.RES;
     438:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x700610>
     43c:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x700611>
     440:	80 93 07 38 	sts	0x3807, r24	; 0x803807 <vacc_volt>
     444:	90 93 08 38 	sts	0x3808, r25	; 0x803808 <vacc_volt+0x1>
				adc_state |= 0x2;
     448:	80 91 06 38 	lds	r24, 0x3806	; 0x803806 <adc_state>
     44c:	82 60       	ori	r24, 0x02	; 2
     44e:	80 93 06 38 	sts	0x3806, r24	; 0x803806 <adc_state>
			}
			ADC0.INTFLAGS = (1 & ADC_RESRDY_bm);
     452:	81 e0       	ldi	r24, 0x01	; 1
     454:	80 93 0b 06 	sts	0x060B, r24	; 0x80060b <__TEXT_REGION_LENGTH__+0x70060b>
		}
		
		if((ADC0.MUXPOS & ADC_MUXPOS_gm) == ADC_MUXPOS_AIN1_gc)
     458:	80 91 06 06 	lds	r24, 0x0606	; 0x800606 <__TEXT_REGION_LENGTH__+0x700606>
     45c:	8f 71       	andi	r24, 0x1F	; 31
     45e:	81 30       	cpi	r24, 0x01	; 1
     460:	21 f4       	brne	.+8      	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
		{
			ADC0.MUXPOS = ADC_MUXPOS_AIN2_gc;
     462:	82 e0       	ldi	r24, 0x02	; 2
     464:	80 93 06 06 	sts	0x0606, r24	; 0x800606 <__TEXT_REGION_LENGTH__+0x700606>
     468:	03 c0       	rjmp	.+6      	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
		}
		else
		{
			ADC0.MUXPOS = ADC_MUXPOS_AIN1_gc;
     46a:	81 e0       	ldi	r24, 0x01	; 1
     46c:	80 93 06 06 	sts	0x0606, r24	; 0x800606 <__TEXT_REGION_LENGTH__+0x700606>
		}
		ADC0.COMMAND = (1 & ADC_STCONV_bm);
     470:	81 e0       	ldi	r24, 0x01	; 1
     472:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x700608>
		pending_sleep_flag |= PENDING_SLEEP_ADC;
     476:	80 91 04 38 	lds	r24, 0x3804	; 0x803804 <__data_end>
     47a:	82 60       	ori	r24, 0x02	; 2
     47c:	80 93 04 38 	sts	0x3804, r24	; 0x803804 <__data_end>
     480:	08 95       	ret

00000482 <doSwitchingThings>:
	}
}

void doSwitchingThings(void)
{
     482:	0f 93       	push	r16
     484:	1f 93       	push	r17
     486:	cf 93       	push	r28
     488:	df 93       	push	r29
	if(vacc_volt >= vacc_threshold)
     48a:	00 91 07 38 	lds	r16, 0x3807	; 0x803807 <vacc_volt>
     48e:	10 91 08 38 	lds	r17, 0x3808	; 0x803808 <vacc_volt+0x1>
     492:	c0 91 00 38 	lds	r28, 0x3800	; 0x803800 <__data_start>
     496:	d0 91 01 38 	lds	r29, 0x3801	; 0x803801 <__data_start+0x1>
     49a:	0c 17       	cp	r16, r28
     49c:	1d 07       	cpc	r17, r29
     49e:	18 f0       	brcs	.+6      	; 0x4a6 <doSwitchingThings+0x24>
	{
		tx2_timeout = TX2_TIMEOUT_SEC;
     4a0:	8e e1       	ldi	r24, 0x1E	; 30
     4a2:	80 93 05 38 	sts	0x3805, r24	; 0x803805 <tx2_timeout>
	}
	
	if(isRelayOn())
     4a6:	0e 94 d7 01 	call	0x3ae	; 0x3ae <isRelayOn>
     4aa:	89 2b       	or	r24, r25
     4ac:	d1 f0       	breq	.+52     	; 0x4e2 <doSwitchingThings+0x60>
	{
		if(vacc_volt < vacc_threshold || vbat_volt < vbat_threshold)
     4ae:	0c 17       	cp	r16, r28
     4b0:	1d 07       	cpc	r17, r29
     4b2:	58 f0       	brcs	.+22     	; 0x4ca <doSwitchingThings+0x48>
     4b4:	20 91 09 38 	lds	r18, 0x3809	; 0x803809 <vbat_volt>
     4b8:	30 91 0a 38 	lds	r19, 0x380A	; 0x80380a <vbat_volt+0x1>
     4bc:	80 91 02 38 	lds	r24, 0x3802	; 0x803802 <vbat_threshold>
     4c0:	90 91 03 38 	lds	r25, 0x3803	; 0x803803 <vbat_threshold+0x1>
     4c4:	28 17       	cp	r18, r24
     4c6:	39 07       	cpc	r19, r25
     4c8:	88 f4       	brcc	.+34     	; 0x4ec <doSwitchingThings+0x6a>
		{
			if(tx2_timeout == 0)
     4ca:	80 91 05 38 	lds	r24, 0x3805	; 0x803805 <tx2_timeout>
     4ce:	81 11       	cpse	r24, r1
     4d0:	0d c0       	rjmp	.+26     	; 0x4ec <doSwitchingThings+0x6a>
			{
				relayOff();
     4d2:	0e 94 b6 01 	call	0x36c	; 0x36c <relayOff>
				pending_sleep_flag &= ~PENDING_SLEEP_UART;
     4d6:	80 91 04 38 	lds	r24, 0x3804	; 0x803804 <__data_end>
     4da:	8e 7f       	andi	r24, 0xFE	; 254
     4dc:	80 93 04 38 	sts	0x3804, r24	; 0x803804 <__data_end>
     4e0:	05 c0       	rjmp	.+10     	; 0x4ec <doSwitchingThings+0x6a>
		}
	}
	else
	{
		// Relay is always on if the accessory power presents
		if(vacc_volt >= vacc_threshold) relayOn();
     4e2:	0c 17       	cp	r16, r28
     4e4:	1d 07       	cpc	r17, r29
     4e6:	10 f0       	brcs	.+4      	; 0x4ec <doSwitchingThings+0x6a>
     4e8:	0e 94 ab 01 	call	0x356	; 0x356 <relayOn>
	}
}
     4ec:	df 91       	pop	r29
     4ee:	cf 91       	pop	r28
     4f0:	1f 91       	pop	r17
     4f2:	0f 91       	pop	r16
     4f4:	08 95       	ret

000004f6 <main>:

int main(void)
{
     4f6:	cf 93       	push	r28
     4f8:	df 93       	push	r29
     4fa:	cd b7       	in	r28, 0x3d	; 61
     4fc:	de b7       	in	r29, 0x3e	; 62
     4fe:	2e 97       	sbiw	r28, 0x0e	; 14
     500:	cd bf       	out	0x3d, r28	; 61
     502:	de bf       	out	0x3e, r29	; 62
	FILE USART_stream = FDEV_SETUP_STREAM(USART0_sendChar, NULL, _FDEV_SETUP_WRITE);
     504:	8e 01       	movw	r16, r28
     506:	0f 5f       	subi	r16, 0xFF	; 255
     508:	1f 4f       	sbci	r17, 0xFF	; 255
     50a:	8e e0       	ldi	r24, 0x0E	; 14
     50c:	f8 01       	movw	r30, r16
     50e:	11 92       	st	Z+, r1
     510:	8a 95       	dec	r24
     512:	e9 f7       	brne	.-6      	; 0x50e <main+0x18>
     514:	82 e0       	ldi	r24, 0x02	; 2
     516:	8c 83       	std	Y+4, r24	; 0x04
     518:	80 e7       	ldi	r24, 0x70	; 112
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	89 87       	std	Y+9, r24	; 0x09
     51e:	9a 87       	std	Y+10, r25	; 0x0a
	uint8_t oldTick = 255;
	uint8_t currentTick;
	
	cli();
     520:	f8 94       	cli
	RTC_init();
     522:	0e 94 2e 01 	call	0x25c	; 0x25c <RTC_init>
	SLPCTRL_init();
     526:	0e 94 3d 01 	call	0x27a	; 0x27a <SLPCTRL_init>
	GPIO_init();
     52a:	0e 94 48 01 	call	0x290	; 0x290 <GPIO_init>
	USART0_init(115200);
     52e:	60 e0       	ldi	r22, 0x00	; 0
     530:	72 ec       	ldi	r23, 0xC2	; 194
     532:	81 e0       	ldi	r24, 0x01	; 1
     534:	90 e0       	ldi	r25, 0x00	; 0
     536:	0e 94 55 01 	call	0x2aa	; 0x2aa <USART0_init>
	ADC_init();
     53a:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <ADC_init>
	sei();
     53e:	78 94       	sei
	// Protocol8086 parser in action
	// TODO: comment out. Debugging in progress
	stdout = &USART_stream;
     540:	00 93 47 38 	sts	0x3847, r16	; 0x803847 <__iob+0x2>
     544:	10 93 48 38 	sts	0x3848, r17	; 0x803848 <__iob+0x3>
	parserInit();
     548:	0e 94 2c 04 	call	0x858	; 0x858 <parserInit>
	setParseDoneCallback(NULL);
     54c:	80 e0       	ldi	r24, 0x00	; 0
     54e:	90 e0       	ldi	r25, 0x00	; 0
     550:	0e 94 33 04 	call	0x866	; 0x866 <setParseDoneCallback>
	setUartSendFunc(USART0_sendBuf);
     554:	81 e8       	ldi	r24, 0x81	; 129
     556:	90 e0       	ldi	r25, 0x00	; 0
     558:	0e 94 38 04 	call	0x870	; 0x870 <setUartSendFunc>
	
	pending_sleep_flag = 0 & PENDING_SLEEP_MASK;
     55c:	10 92 04 38 	sts	0x3804, r1	; 0x803804 <__data_end>
	adcOn();
     560:	0e 94 c1 01 	call	0x382	; 0x382 <adcOn>
}

int main(void)
{
	FILE USART_stream = FDEV_SETUP_STREAM(USART0_sendChar, NULL, _FDEV_SETUP_WRITE);
	uint8_t oldTick = 255;
     564:	0f ef       	ldi	r16, 0xFF	; 255
	adcOn();

	// Static scheduling loop
    while (1)
    {
		currentTick = getCurrentTick();
     566:	0e 94 a7 04 	call	0x94e	; 0x94e <getCurrentTick>
     56a:	18 2f       	mov	r17, r24
		if(oldTick != currentTick)
     56c:	08 17       	cp	r16, r24
     56e:	61 f1       	breq	.+88     	; 0x5c8 <main+0xd2>
		{
			oldTick = currentTick;
			printf("bat: %d, acc: %d, tout: %d, adcstat:%02x, sleepflag: %02x\r\n", vbat_volt, vacc_volt, tx2_timeout, adc_state, pending_sleep_flag);
     570:	80 91 05 38 	lds	r24, 0x3805	; 0x803805 <tx2_timeout>
     574:	90 91 04 38 	lds	r25, 0x3804	; 0x803804 <__data_end>
     578:	1f 92       	push	r1
     57a:	9f 93       	push	r25
     57c:	90 91 06 38 	lds	r25, 0x3806	; 0x803806 <adc_state>
     580:	1f 92       	push	r1
     582:	9f 93       	push	r25
     584:	1f 92       	push	r1
     586:	8f 93       	push	r24
     588:	80 91 08 38 	lds	r24, 0x3808	; 0x803808 <vacc_volt+0x1>
     58c:	8f 93       	push	r24
     58e:	80 91 07 38 	lds	r24, 0x3807	; 0x803807 <vacc_volt>
     592:	8f 93       	push	r24
     594:	80 91 0a 38 	lds	r24, 0x380A	; 0x80380a <vbat_volt+0x1>
     598:	8f 93       	push	r24
     59a:	80 91 09 38 	lds	r24, 0x3809	; 0x803809 <vbat_volt>
     59e:	8f 93       	push	r24
     5a0:	88 e7       	ldi	r24, 0x78	; 120
     5a2:	93 e9       	ldi	r25, 0x93	; 147
     5a4:	9f 93       	push	r25
     5a6:	8f 93       	push	r24
     5a8:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <printf>
			if(isRelayOn())
     5ac:	0e 94 d7 01 	call	0x3ae	; 0x3ae <isRelayOn>
     5b0:	cd bf       	out	0x3d, r28	; 61
     5b2:	de bf       	out	0x3e, r29	; 62
     5b4:	89 2b       	or	r24, r25
     5b6:	39 f0       	breq	.+14     	; 0x5c6 <main+0xd0>
			{
				//sendCmd(CMD_HELLO, (uint8_t)((vbat_volt >> 8) & 0xFF), (uint8_t)(vbat_volt & 0xFF), (uint8_t)((vacc_volt >> 8) & 0xFF), (uint8_t)(vacc_volt & 0xFF));
				pending_sleep_flag |= PENDING_SLEEP_UART;
     5b8:	80 91 04 38 	lds	r24, 0x3804	; 0x803804 <__data_end>
     5bc:	81 60       	ori	r24, 0x01	; 1
     5be:	80 93 04 38 	sts	0x3804, r24	; 0x803804 <__data_end>
    while (1)
    {
		currentTick = getCurrentTick();
		if(oldTick != currentTick)
		{
			oldTick = currentTick;
     5c2:	01 2f       	mov	r16, r17
     5c4:	01 c0       	rjmp	.+2      	; 0x5c8 <main+0xd2>
     5c6:	01 2f       	mov	r16, r17
				//sendCmd(CMD_HELLO, (uint8_t)((vbat_volt >> 8) & 0xFF), (uint8_t)(vbat_volt & 0xFF), (uint8_t)((vacc_volt >> 8) & 0xFF), (uint8_t)(vacc_volt & 0xFF));
				pending_sleep_flag |= PENDING_SLEEP_UART;
			}
		}
		
		doAdcThings();
     5c8:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <doAdcThings>
		if((adc_state & 0x3) == 0x3)
     5cc:	80 91 06 38 	lds	r24, 0x3806	; 0x803806 <adc_state>
     5d0:	83 70       	andi	r24, 0x03	; 3
     5d2:	83 30       	cpi	r24, 0x03	; 3
     5d4:	49 f4       	brne	.+18     	; 0x5e8 <main+0xf2>
		{
			adc_state = 0;
     5d6:	10 92 06 38 	sts	0x3806, r1	; 0x803806 <adc_state>
			doSwitchingThings();
     5da:	0e 94 41 02 	call	0x482	; 0x482 <doSwitchingThings>
			pending_sleep_flag &= ~PENDING_SLEEP_ADC;
     5de:	80 91 04 38 	lds	r24, 0x3804	; 0x803804 <__data_end>
     5e2:	8d 7f       	andi	r24, 0xFD	; 253
     5e4:	80 93 04 38 	sts	0x3804, r24	; 0x803804 <__data_end>
		}

		if(uart0_rbuf_rpnt != uart0_rbuf_wpnt)
     5e8:	20 91 0c 38 	lds	r18, 0x380C	; 0x80380c <uart0_rbuf_rpnt>
     5ec:	30 91 0d 38 	lds	r19, 0x380D	; 0x80380d <uart0_rbuf_rpnt+0x1>
     5f0:	80 91 0e 38 	lds	r24, 0x380E	; 0x80380e <uart0_rbuf_wpnt>
     5f4:	90 91 0f 38 	lds	r25, 0x380F	; 0x80380f <uart0_rbuf_wpnt+0x1>
     5f8:	28 17       	cp	r18, r24
     5fa:	39 07       	cpc	r19, r25
     5fc:	d9 f0       	breq	.+54     	; 0x634 <main+0x13e>
		{
			parseData(uart0_rbuf[uart0_rbuf_rpnt++]);
     5fe:	80 91 0c 38 	lds	r24, 0x380C	; 0x80380c <uart0_rbuf_rpnt>
     602:	90 91 0d 38 	lds	r25, 0x380D	; 0x80380d <uart0_rbuf_rpnt+0x1>
     606:	9c 01       	movw	r18, r24
     608:	2f 5f       	subi	r18, 0xFF	; 255
     60a:	3f 4f       	sbci	r19, 0xFF	; 255
     60c:	20 93 0c 38 	sts	0x380C, r18	; 0x80380c <uart0_rbuf_rpnt>
     610:	30 93 0d 38 	sts	0x380D, r19	; 0x80380d <uart0_rbuf_rpnt+0x1>
     614:	fc 01       	movw	r30, r24
     616:	e0 5f       	subi	r30, 0xF0	; 240
     618:	f7 4c       	sbci	r31, 0xC7	; 199
     61a:	80 81       	ld	r24, Z
     61c:	0e 94 3d 04 	call	0x87a	; 0x87a <parseData>
			if(uart0_rbuf_rpnt >= UART_BUFLEN) uart0_rbuf_rpnt = 0;
     620:	80 91 0c 38 	lds	r24, 0x380C	; 0x80380c <uart0_rbuf_rpnt>
     624:	90 91 0d 38 	lds	r25, 0x380D	; 0x80380d <uart0_rbuf_rpnt+0x1>
     628:	80 97       	sbiw	r24, 0x20	; 32
     62a:	20 f0       	brcs	.+8      	; 0x634 <main+0x13e>
     62c:	10 92 0c 38 	sts	0x380C, r1	; 0x80380c <uart0_rbuf_rpnt>
     630:	10 92 0d 38 	sts	0x380D, r1	; 0x80380d <uart0_rbuf_rpnt+0x1>
		}
		
		if((pending_sleep_flag & PENDING_SLEEP_MASK) == 0)
     634:	80 91 04 38 	lds	r24, 0x3804	; 0x803804 <__data_end>
     638:	83 70       	andi	r24, 0x03	; 3
     63a:	09 f0       	breq	.+2      	; 0x63e <main+0x148>
     63c:	94 cf       	rjmp	.-216    	; 0x566 <main+0x70>
		{
			adcOff();
     63e:	0e 94 cc 01 	call	0x398	; 0x398 <adcOff>
			sleep_cpu();
     642:	88 95       	sleep
			adcOn();
     644:	0e 94 c1 01 	call	0x382	; 0x382 <adcOn>
     648:	8e cf       	rjmp	.-228    	; 0x566 <main+0x70>

0000064a <_encapsulateData>:
void sendCmd(uint8_t cmd, uint8_t one, uint8_t two, uint8_t three, uint8_t four)
{
	uint8_t sendBuf[8] = {0,};
	_encapsulateData(sendBuf, cmd, one, two, three, four);
	if(uartSend != NULL) uartSend(sendBuf, 8);
}
     64a:	ef 92       	push	r14
     64c:	0f 93       	push	r16
     64e:	fc 01       	movw	r30, r24
     650:	80 e8       	ldi	r24, 0x80	; 128
     652:	80 83       	st	Z, r24
     654:	61 83       	std	Z+1, r22	; 0x01
     656:	42 83       	std	Z+2, r20	; 0x02
     658:	23 83       	std	Z+3, r18	; 0x03
     65a:	04 83       	std	Z+4, r16	; 0x04
     65c:	e5 82       	std	Z+5, r14	; 0x05
     65e:	46 0f       	add	r20, r22
     660:	24 0f       	add	r18, r20
     662:	02 0f       	add	r16, r18
     664:	e0 0e       	add	r14, r16
     666:	e6 82       	std	Z+6, r14	; 0x06
     668:	86 e8       	ldi	r24, 0x86	; 134
     66a:	87 83       	std	Z+7, r24	; 0x07
     66c:	0f 91       	pop	r16
     66e:	ef 90       	pop	r14
     670:	08 95       	ret

00000672 <_parseDone>:
     672:	ef 92       	push	r14
     674:	0f 93       	push	r16
     676:	cf 93       	push	r28
     678:	df 93       	push	r29
     67a:	cd b7       	in	r28, 0x3d	; 61
     67c:	de b7       	in	r29, 0x3e	; 62
     67e:	28 97       	sbiw	r28, 0x08	; 8
     680:	cd bf       	out	0x3d, r28	; 61
     682:	de bf       	out	0x3e, r29	; 62
     684:	de 01       	movw	r26, r28
     686:	11 96       	adiw	r26, 0x01	; 1
     688:	98 e0       	ldi	r25, 0x08	; 8
     68a:	fd 01       	movw	r30, r26
     68c:	11 92       	st	Z+, r1
     68e:	9a 95       	dec	r25
     690:	e9 f7       	brne	.-6      	; 0x68c <_parseDone+0x1a>
     692:	e0 91 41 38 	lds	r30, 0x3841	; 0x803841 <parseDoneCallBack>
     696:	f0 91 42 38 	lds	r31, 0x3842	; 0x803842 <parseDoneCallBack+0x1>
     69a:	30 97       	sbiw	r30, 0x00	; 0
     69c:	11 f0       	breq	.+4      	; 0x6a2 <_parseDone+0x30>
     69e:	09 95       	icall
     6a0:	d3 c0       	rjmp	.+422    	; 0x848 <_parseDone+0x1d6>
     6a2:	9e e1       	ldi	r25, 0x1E	; 30
     6a4:	90 93 05 38 	sts	0x3805, r25	; 0x803805 <tx2_timeout>
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	fc 01       	movw	r30, r24
     6ac:	31 97       	sbiw	r30, 0x01	; 1
     6ae:	e3 31       	cpi	r30, 0x13	; 19
     6b0:	f1 05       	cpc	r31, r1
     6b2:	08 f0       	brcs	.+2      	; 0x6b6 <_parseDone+0x44>
     6b4:	ba c0       	rjmp	.+372    	; 0x82a <_parseDone+0x1b8>
     6b6:	e2 5c       	subi	r30, 0xC2	; 194
     6b8:	ff 4f       	sbci	r31, 0xFF	; 255
     6ba:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__tablejump2__>
     6be:	e0 90 07 38 	lds	r14, 0x3807	; 0x803807 <vacc_volt>
     6c2:	00 91 08 38 	lds	r16, 0x3808	; 0x803808 <vacc_volt+0x1>
     6c6:	20 91 09 38 	lds	r18, 0x3809	; 0x803809 <vbat_volt>
     6ca:	40 91 0a 38 	lds	r20, 0x380A	; 0x80380a <vbat_volt+0x1>
     6ce:	62 e0       	ldi	r22, 0x02	; 2
     6d0:	ce 01       	movw	r24, r28
     6d2:	01 96       	adiw	r24, 0x01	; 1
     6d4:	0e 94 25 03 	call	0x64a	; 0x64a <_encapsulateData>
     6d8:	e0 91 3f 38 	lds	r30, 0x383F	; 0x80383f <uartSend>
     6dc:	f0 91 40 38 	lds	r31, 0x3840	; 0x803840 <uartSend+0x1>
     6e0:	30 97       	sbiw	r30, 0x00	; 0
     6e2:	09 f4       	brne	.+2      	; 0x6e6 <_parseDone+0x74>
     6e4:	a2 c0       	rjmp	.+324    	; 0x82a <_parseDone+0x1b8>
     6e6:	68 e0       	ldi	r22, 0x08	; 8
     6e8:	ce 01       	movw	r24, r28
     6ea:	01 96       	adiw	r24, 0x01	; 1
     6ec:	09 95       	icall
     6ee:	9d c0       	rjmp	.+314    	; 0x82a <_parseDone+0x1b8>
     6f0:	e0 90 07 38 	lds	r14, 0x3807	; 0x803807 <vacc_volt>
     6f4:	00 91 08 38 	lds	r16, 0x3808	; 0x803808 <vacc_volt+0x1>
     6f8:	20 91 09 38 	lds	r18, 0x3809	; 0x803809 <vbat_volt>
     6fc:	40 91 0a 38 	lds	r20, 0x380A	; 0x80380a <vbat_volt+0x1>
     700:	64 e0       	ldi	r22, 0x04	; 4
     702:	ce 01       	movw	r24, r28
     704:	01 96       	adiw	r24, 0x01	; 1
     706:	0e 94 25 03 	call	0x64a	; 0x64a <_encapsulateData>
     70a:	e0 91 3f 38 	lds	r30, 0x383F	; 0x80383f <uartSend>
     70e:	f0 91 40 38 	lds	r31, 0x3840	; 0x803840 <uartSend+0x1>
     712:	30 97       	sbiw	r30, 0x00	; 0
     714:	09 f4       	brne	.+2      	; 0x718 <_parseDone+0xa6>
     716:	89 c0       	rjmp	.+274    	; 0x82a <_parseDone+0x1b8>
     718:	68 e0       	ldi	r22, 0x08	; 8
     71a:	ce 01       	movw	r24, r28
     71c:	01 96       	adiw	r24, 0x01	; 1
     71e:	09 95       	icall
     720:	84 c0       	rjmp	.+264    	; 0x82a <_parseDone+0x1b8>
     722:	e0 90 07 38 	lds	r14, 0x3807	; 0x803807 <vacc_volt>
     726:	00 91 08 38 	lds	r16, 0x3808	; 0x803808 <vacc_volt+0x1>
     72a:	20 91 09 38 	lds	r18, 0x3809	; 0x803809 <vbat_volt>
     72e:	40 91 0a 38 	lds	r20, 0x380A	; 0x80380a <vbat_volt+0x1>
     732:	6a e0       	ldi	r22, 0x0A	; 10
     734:	ce 01       	movw	r24, r28
     736:	01 96       	adiw	r24, 0x01	; 1
     738:	0e 94 25 03 	call	0x64a	; 0x64a <_encapsulateData>
     73c:	e0 91 3f 38 	lds	r30, 0x383F	; 0x80383f <uartSend>
     740:	f0 91 40 38 	lds	r31, 0x3840	; 0x803840 <uartSend+0x1>
     744:	30 97       	sbiw	r30, 0x00	; 0
     746:	09 f4       	brne	.+2      	; 0x74a <_parseDone+0xd8>
     748:	70 c0       	rjmp	.+224    	; 0x82a <_parseDone+0x1b8>
     74a:	68 e0       	ldi	r22, 0x08	; 8
     74c:	ce 01       	movw	r24, r28
     74e:	01 96       	adiw	r24, 0x01	; 1
     750:	09 95       	icall
     752:	6b c0       	rjmp	.+214    	; 0x82a <_parseDone+0x1b8>
     754:	e0 90 00 38 	lds	r14, 0x3800	; 0x803800 <__data_start>
     758:	00 91 01 38 	lds	r16, 0x3801	; 0x803801 <__data_start+0x1>
     75c:	20 91 02 38 	lds	r18, 0x3802	; 0x803802 <vbat_threshold>
     760:	40 91 03 38 	lds	r20, 0x3803	; 0x803803 <vbat_threshold+0x1>
     764:	6c e0       	ldi	r22, 0x0C	; 12
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	0e 94 25 03 	call	0x64a	; 0x64a <_encapsulateData>
     76e:	e0 91 3f 38 	lds	r30, 0x383F	; 0x80383f <uartSend>
     772:	f0 91 40 38 	lds	r31, 0x3840	; 0x803840 <uartSend+0x1>
     776:	30 97       	sbiw	r30, 0x00	; 0
     778:	09 f4       	brne	.+2      	; 0x77c <_parseDone+0x10a>
     77a:	57 c0       	rjmp	.+174    	; 0x82a <_parseDone+0x1b8>
     77c:	68 e0       	ldi	r22, 0x08	; 8
     77e:	ce 01       	movw	r24, r28
     780:	01 96       	adiw	r24, 0x01	; 1
     782:	09 95       	icall
     784:	52 c0       	rjmp	.+164    	; 0x82a <_parseDone+0x1b8>
     786:	70 e0       	ldi	r23, 0x00	; 0
     788:	76 2f       	mov	r23, r22
     78a:	66 27       	eor	r22, r22
     78c:	64 0f       	add	r22, r20
     78e:	71 1d       	adc	r23, r1
     790:	60 93 02 38 	sts	0x3802, r22	; 0x803802 <vbat_threshold>
     794:	70 93 03 38 	sts	0x3803, r23	; 0x803803 <vbat_threshold+0x1>
     798:	30 e0       	ldi	r19, 0x00	; 0
     79a:	32 2f       	mov	r19, r18
     79c:	22 27       	eor	r18, r18
     79e:	20 0f       	add	r18, r16
     7a0:	31 1d       	adc	r19, r1
     7a2:	20 93 00 38 	sts	0x3800, r18	; 0x803800 <__data_start>
     7a6:	30 93 01 38 	sts	0x3801, r19	; 0x803801 <__data_start+0x1>
     7aa:	e2 2e       	mov	r14, r18
     7ac:	03 2f       	mov	r16, r19
     7ae:	26 2f       	mov	r18, r22
     7b0:	47 2f       	mov	r20, r23
     7b2:	6e e0       	ldi	r22, 0x0E	; 14
     7b4:	ce 01       	movw	r24, r28
     7b6:	01 96       	adiw	r24, 0x01	; 1
     7b8:	0e 94 25 03 	call	0x64a	; 0x64a <_encapsulateData>
     7bc:	e0 91 3f 38 	lds	r30, 0x383F	; 0x80383f <uartSend>
     7c0:	f0 91 40 38 	lds	r31, 0x3840	; 0x803840 <uartSend+0x1>
     7c4:	30 97       	sbiw	r30, 0x00	; 0
     7c6:	89 f1       	breq	.+98     	; 0x82a <_parseDone+0x1b8>
     7c8:	68 e0       	ldi	r22, 0x08	; 8
     7ca:	ce 01       	movw	r24, r28
     7cc:	01 96       	adiw	r24, 0x01	; 1
     7ce:	09 95       	icall
     7d0:	2c c0       	rjmp	.+88     	; 0x82a <_parseDone+0x1b8>
     7d2:	81 e0       	ldi	r24, 0x01	; 1
     7d4:	80 93 3c 38 	sts	0x383C, r24	; 0x80383c <_dont_sleep.1646>
     7d8:	e1 2c       	mov	r14, r1
     7da:	00 e0       	ldi	r16, 0x00	; 0
     7dc:	20 e0       	ldi	r18, 0x00	; 0
     7de:	41 e0       	ldi	r20, 0x01	; 1
     7e0:	62 e1       	ldi	r22, 0x12	; 18
     7e2:	ce 01       	movw	r24, r28
     7e4:	01 96       	adiw	r24, 0x01	; 1
     7e6:	0e 94 25 03 	call	0x64a	; 0x64a <_encapsulateData>
     7ea:	e0 91 3f 38 	lds	r30, 0x383F	; 0x80383f <uartSend>
     7ee:	f0 91 40 38 	lds	r31, 0x3840	; 0x803840 <uartSend+0x1>
     7f2:	30 97       	sbiw	r30, 0x00	; 0
     7f4:	d1 f0       	breq	.+52     	; 0x82a <_parseDone+0x1b8>
     7f6:	68 e0       	ldi	r22, 0x08	; 8
     7f8:	ce 01       	movw	r24, r28
     7fa:	01 96       	adiw	r24, 0x01	; 1
     7fc:	09 95       	icall
     7fe:	15 c0       	rjmp	.+42     	; 0x82a <_parseDone+0x1b8>
     800:	10 92 3c 38 	sts	0x383C, r1	; 0x80383c <_dont_sleep.1646>
     804:	e1 2c       	mov	r14, r1
     806:	00 e0       	ldi	r16, 0x00	; 0
     808:	20 e0       	ldi	r18, 0x00	; 0
     80a:	40 e0       	ldi	r20, 0x00	; 0
     80c:	64 e1       	ldi	r22, 0x14	; 20
     80e:	ce 01       	movw	r24, r28
     810:	01 96       	adiw	r24, 0x01	; 1
     812:	0e 94 25 03 	call	0x64a	; 0x64a <_encapsulateData>
     816:	e0 91 3f 38 	lds	r30, 0x383F	; 0x80383f <uartSend>
     81a:	f0 91 40 38 	lds	r31, 0x3840	; 0x803840 <uartSend+0x1>
     81e:	30 97       	sbiw	r30, 0x00	; 0
     820:	21 f0       	breq	.+8      	; 0x82a <_parseDone+0x1b8>
     822:	68 e0       	ldi	r22, 0x08	; 8
     824:	ce 01       	movw	r24, r28
     826:	01 96       	adiw	r24, 0x01	; 1
     828:	09 95       	icall
     82a:	80 91 3c 38 	lds	r24, 0x383C	; 0x80383c <_dont_sleep.1646>
     82e:	88 23       	and	r24, r24
     830:	31 f0       	breq	.+12     	; 0x83e <_parseDone+0x1cc>
     832:	80 91 04 38 	lds	r24, 0x3804	; 0x803804 <__data_end>
     836:	81 60       	ori	r24, 0x01	; 1
     838:	80 93 04 38 	sts	0x3804, r24	; 0x803804 <__data_end>
     83c:	05 c0       	rjmp	.+10     	; 0x848 <_parseDone+0x1d6>
     83e:	80 91 04 38 	lds	r24, 0x3804	; 0x803804 <__data_end>
     842:	8e 7f       	andi	r24, 0xFE	; 254
     844:	80 93 04 38 	sts	0x3804, r24	; 0x803804 <__data_end>
     848:	28 96       	adiw	r28, 0x08	; 8
     84a:	cd bf       	out	0x3d, r28	; 61
     84c:	de bf       	out	0x3e, r29	; 62
     84e:	df 91       	pop	r29
     850:	cf 91       	pop	r28
     852:	0f 91       	pop	r16
     854:	ef 90       	pop	r14
     856:	08 95       	ret

00000858 <parserInit>:
     858:	81 e0       	ldi	r24, 0x01	; 1
     85a:	90 e0       	ldi	r25, 0x00	; 0
     85c:	80 93 3d 38 	sts	0x383D, r24	; 0x80383d <parserState>
     860:	90 93 3e 38 	sts	0x383E, r25	; 0x80383e <parserState+0x1>
     864:	08 95       	ret

00000866 <setParseDoneCallback>:
     866:	80 93 41 38 	sts	0x3841, r24	; 0x803841 <parseDoneCallBack>
     86a:	90 93 42 38 	sts	0x3842, r25	; 0x803842 <parseDoneCallBack+0x1>
     86e:	08 95       	ret

00000870 <setUartSendFunc>:
     870:	80 93 3f 38 	sts	0x383F, r24	; 0x80383f <uartSend>
     874:	90 93 40 38 	sts	0x3840, r25	; 0x803840 <uartSend+0x1>
     878:	08 95       	ret

0000087a <parseData>:

void parseData(uint8_t data)
{
     87a:	0f 93       	push	r16
     87c:	1f 93       	push	r17
	static uint8_t databuf[8] = {0,};
	static uint32_t recvdcnt = 0;
	uint8_t tmpChksum = 0;

	if(parserState)
     87e:	20 91 3d 38 	lds	r18, 0x383D	; 0x80383d <parserState>
     882:	30 91 3e 38 	lds	r19, 0x383E	; 0x80383e <parserState+0x1>
     886:	23 2b       	or	r18, r19
     888:	09 f4       	brne	.+2      	; 0x88c <parseData+0x12>
     88a:	58 c0       	rjmp	.+176    	; 0x93c <parseData+0xc2>
	{
		switch(uartState)
     88c:	90 91 43 38 	lds	r25, 0x3843	; 0x803843 <uartState>
     890:	99 23       	and	r25, r25
     892:	19 f0       	breq	.+6      	; 0x89a <parseData+0x20>
     894:	91 30       	cpi	r25, 0x01	; 1
     896:	b1 f0       	breq	.+44     	; 0x8c4 <parseData+0x4a>
     898:	51 c0       	rjmp	.+162    	; 0x93c <parseData+0xc2>
		{
		case UART_STATE_IDLE:
			if(data == UART_STX)
     89a:	80 38       	cpi	r24, 0x80	; 128
     89c:	09 f0       	breq	.+2      	; 0x8a0 <parseData+0x26>
     89e:	4e c0       	rjmp	.+156    	; 0x93c <parseData+0xc2>
			{
				recvdcnt = 0;
				uartState = UART_STATE_RECEIVING;
     8a0:	91 e0       	ldi	r25, 0x01	; 1
     8a2:	90 93 43 38 	sts	0x3843, r25	; 0x803843 <uartState>
				databuf[recvdcnt++] = data;
     8a6:	41 e0       	ldi	r20, 0x01	; 1
     8a8:	50 e0       	ldi	r21, 0x00	; 0
     8aa:	60 e0       	ldi	r22, 0x00	; 0
     8ac:	70 e0       	ldi	r23, 0x00	; 0
     8ae:	40 93 38 38 	sts	0x3838, r20	; 0x803838 <recvdcnt.1707>
     8b2:	50 93 39 38 	sts	0x3839, r21	; 0x803839 <recvdcnt.1707+0x1>
     8b6:	60 93 3a 38 	sts	0x383A, r22	; 0x80383a <recvdcnt.1707+0x2>
     8ba:	70 93 3b 38 	sts	0x383B, r23	; 0x80383b <recvdcnt.1707+0x3>
     8be:	80 93 30 38 	sts	0x3830, r24	; 0x803830 <databuf.1706>
     8c2:	3c c0       	rjmp	.+120    	; 0x93c <parseData+0xc2>
			}
			break;
		case UART_STATE_RECEIVING:
			if(recvdcnt < 8)
     8c4:	40 91 38 38 	lds	r20, 0x3838	; 0x803838 <recvdcnt.1707>
     8c8:	50 91 39 38 	lds	r21, 0x3839	; 0x803839 <recvdcnt.1707+0x1>
     8cc:	60 91 3a 38 	lds	r22, 0x383A	; 0x80383a <recvdcnt.1707+0x2>
     8d0:	70 91 3b 38 	lds	r23, 0x383B	; 0x80383b <recvdcnt.1707+0x3>
     8d4:	48 30       	cpi	r20, 0x08	; 8
     8d6:	51 05       	cpc	r21, r1
     8d8:	61 05       	cpc	r22, r1
     8da:	71 05       	cpc	r23, r1
     8dc:	68 f5       	brcc	.+90     	; 0x938 <parseData+0xbe>
			{
				databuf[recvdcnt++] = data;
     8de:	8a 01       	movw	r16, r20
     8e0:	9b 01       	movw	r18, r22
     8e2:	0f 5f       	subi	r16, 0xFF	; 255
     8e4:	1f 4f       	sbci	r17, 0xFF	; 255
     8e6:	2f 4f       	sbci	r18, 0xFF	; 255
     8e8:	3f 4f       	sbci	r19, 0xFF	; 255
     8ea:	00 93 38 38 	sts	0x3838, r16	; 0x803838 <recvdcnt.1707>
     8ee:	10 93 39 38 	sts	0x3839, r17	; 0x803839 <recvdcnt.1707+0x1>
     8f2:	20 93 3a 38 	sts	0x383A, r18	; 0x80383a <recvdcnt.1707+0x2>
     8f6:	30 93 3b 38 	sts	0x383B, r19	; 0x80383b <recvdcnt.1707+0x3>
     8fa:	fa 01       	movw	r30, r20
     8fc:	e0 5d       	subi	r30, 0xD0	; 208
     8fe:	f7 4c       	sbci	r31, 0xC7	; 199
     900:	80 83       	st	Z, r24
				if(recvdcnt == 8)
     902:	08 30       	cpi	r16, 0x08	; 8
     904:	11 05       	cpc	r17, r1
     906:	21 05       	cpc	r18, r1
     908:	31 05       	cpc	r19, r1
     90a:	c1 f4       	brne	.+48     	; 0x93c <parseData+0xc2>
				{
					if(data == UART_ETX)
     90c:	86 38       	cpi	r24, 0x86	; 134
     90e:	89 f4       	brne	.+34     	; 0x932 <parseData+0xb8>
					{
						tmpChksum = databuf[1] + databuf[2] + databuf[3] + databuf[4] + databuf[5];
     910:	e0 e3       	ldi	r30, 0x30	; 48
     912:	f8 e3       	ldi	r31, 0x38	; 56
     914:	81 81       	ldd	r24, Z+1	; 0x01
     916:	62 81       	ldd	r22, Z+2	; 0x02
     918:	43 81       	ldd	r20, Z+3	; 0x03
     91a:	24 81       	ldd	r18, Z+4	; 0x04
     91c:	05 81       	ldd	r16, Z+5	; 0x05
     91e:	98 2f       	mov	r25, r24
     920:	96 0f       	add	r25, r22
     922:	94 0f       	add	r25, r20
     924:	92 0f       	add	r25, r18
     926:	90 0f       	add	r25, r16
						if(tmpChksum == databuf[6])
     928:	36 81       	ldd	r19, Z+6	; 0x06
     92a:	93 13       	cpse	r25, r19
     92c:	02 c0       	rjmp	.+4      	; 0x932 <parseData+0xb8>
						{
							_parseDone(databuf[1], databuf[2], databuf[3], databuf[4], databuf[5]);
     92e:	0e 94 39 03 	call	0x672	; 0x672 <_parseDone>
						}
					}
					//recvdcnt = 0;
					uartState = UART_STATE_IDLE;
     932:	10 92 43 38 	sts	0x3843, r1	; 0x803843 <uartState>
     936:	02 c0       	rjmp	.+4      	; 0x93c <parseData+0xc2>
			}
			else
			{
				// Highly unlikely case
				//recvdcnt = 0;
				uartState = UART_STATE_IDLE;
     938:	10 92 43 38 	sts	0x3843, r1	; 0x803843 <uartState>
			break;
		default:
			break;
		}
	}
     93c:	1f 91       	pop	r17
     93e:	0f 91       	pop	r16
     940:	08 95       	ret

00000942 <incTick>:

static uint8_t nowtick = 0;

inline void incTick(void)
{
	nowtick++;
     942:	80 91 44 38 	lds	r24, 0x3844	; 0x803844 <nowtick>
     946:	8f 5f       	subi	r24, 0xFF	; 255
     948:	80 93 44 38 	sts	0x3844, r24	; 0x803844 <nowtick>
     94c:	08 95       	ret

0000094e <getCurrentTick>:
}

uint8_t getCurrentTick(void)
{
	return nowtick;
}
     94e:	80 91 44 38 	lds	r24, 0x3844	; 0x803844 <nowtick>
     952:	08 95       	ret

00000954 <__subsf3>:
     954:	50 58       	subi	r21, 0x80	; 128

00000956 <__addsf3>:
     956:	bb 27       	eor	r27, r27
     958:	aa 27       	eor	r26, r26
     95a:	0e 94 c2 04 	call	0x984	; 0x984 <__addsf3x>
     95e:	0c 94 13 06 	jmp	0xc26	; 0xc26 <__fp_round>
     962:	0e 94 05 06 	call	0xc0a	; 0xc0a <__fp_pscA>
     966:	38 f0       	brcs	.+14     	; 0x976 <__addsf3+0x20>
     968:	0e 94 0c 06 	call	0xc18	; 0xc18 <__fp_pscB>
     96c:	20 f0       	brcs	.+8      	; 0x976 <__addsf3+0x20>
     96e:	39 f4       	brne	.+14     	; 0x97e <__addsf3+0x28>
     970:	9f 3f       	cpi	r25, 0xFF	; 255
     972:	19 f4       	brne	.+6      	; 0x97a <__addsf3+0x24>
     974:	26 f4       	brtc	.+8      	; 0x97e <__addsf3+0x28>
     976:	0c 94 02 06 	jmp	0xc04	; 0xc04 <__fp_nan>
     97a:	0e f4       	brtc	.+2      	; 0x97e <__addsf3+0x28>
     97c:	e0 95       	com	r30
     97e:	e7 fb       	bst	r30, 7
     980:	0c 94 fc 05 	jmp	0xbf8	; 0xbf8 <__fp_inf>

00000984 <__addsf3x>:
     984:	e9 2f       	mov	r30, r25
     986:	0e 94 24 06 	call	0xc48	; 0xc48 <__fp_split3>
     98a:	58 f3       	brcs	.-42     	; 0x962 <__addsf3+0xc>
     98c:	ba 17       	cp	r27, r26
     98e:	62 07       	cpc	r22, r18
     990:	73 07       	cpc	r23, r19
     992:	84 07       	cpc	r24, r20
     994:	95 07       	cpc	r25, r21
     996:	20 f0       	brcs	.+8      	; 0x9a0 <__addsf3x+0x1c>
     998:	79 f4       	brne	.+30     	; 0x9b8 <__addsf3x+0x34>
     99a:	a6 f5       	brtc	.+104    	; 0xa04 <__addsf3x+0x80>
     99c:	0c 94 46 06 	jmp	0xc8c	; 0xc8c <__fp_zero>
     9a0:	0e f4       	brtc	.+2      	; 0x9a4 <__addsf3x+0x20>
     9a2:	e0 95       	com	r30
     9a4:	0b 2e       	mov	r0, r27
     9a6:	ba 2f       	mov	r27, r26
     9a8:	a0 2d       	mov	r26, r0
     9aa:	0b 01       	movw	r0, r22
     9ac:	b9 01       	movw	r22, r18
     9ae:	90 01       	movw	r18, r0
     9b0:	0c 01       	movw	r0, r24
     9b2:	ca 01       	movw	r24, r20
     9b4:	a0 01       	movw	r20, r0
     9b6:	11 24       	eor	r1, r1
     9b8:	ff 27       	eor	r31, r31
     9ba:	59 1b       	sub	r21, r25
     9bc:	99 f0       	breq	.+38     	; 0x9e4 <__addsf3x+0x60>
     9be:	59 3f       	cpi	r21, 0xF9	; 249
     9c0:	50 f4       	brcc	.+20     	; 0x9d6 <__addsf3x+0x52>
     9c2:	50 3e       	cpi	r21, 0xE0	; 224
     9c4:	68 f1       	brcs	.+90     	; 0xa20 <__addsf3x+0x9c>
     9c6:	1a 16       	cp	r1, r26
     9c8:	f0 40       	sbci	r31, 0x00	; 0
     9ca:	a2 2f       	mov	r26, r18
     9cc:	23 2f       	mov	r18, r19
     9ce:	34 2f       	mov	r19, r20
     9d0:	44 27       	eor	r20, r20
     9d2:	58 5f       	subi	r21, 0xF8	; 248
     9d4:	f3 cf       	rjmp	.-26     	; 0x9bc <__addsf3x+0x38>
     9d6:	46 95       	lsr	r20
     9d8:	37 95       	ror	r19
     9da:	27 95       	ror	r18
     9dc:	a7 95       	ror	r26
     9de:	f0 40       	sbci	r31, 0x00	; 0
     9e0:	53 95       	inc	r21
     9e2:	c9 f7       	brne	.-14     	; 0x9d6 <__addsf3x+0x52>
     9e4:	7e f4       	brtc	.+30     	; 0xa04 <__addsf3x+0x80>
     9e6:	1f 16       	cp	r1, r31
     9e8:	ba 0b       	sbc	r27, r26
     9ea:	62 0b       	sbc	r22, r18
     9ec:	73 0b       	sbc	r23, r19
     9ee:	84 0b       	sbc	r24, r20
     9f0:	ba f0       	brmi	.+46     	; 0xa20 <__addsf3x+0x9c>
     9f2:	91 50       	subi	r25, 0x01	; 1
     9f4:	a1 f0       	breq	.+40     	; 0xa1e <__addsf3x+0x9a>
     9f6:	ff 0f       	add	r31, r31
     9f8:	bb 1f       	adc	r27, r27
     9fa:	66 1f       	adc	r22, r22
     9fc:	77 1f       	adc	r23, r23
     9fe:	88 1f       	adc	r24, r24
     a00:	c2 f7       	brpl	.-16     	; 0x9f2 <__addsf3x+0x6e>
     a02:	0e c0       	rjmp	.+28     	; 0xa20 <__addsf3x+0x9c>
     a04:	ba 0f       	add	r27, r26
     a06:	62 1f       	adc	r22, r18
     a08:	73 1f       	adc	r23, r19
     a0a:	84 1f       	adc	r24, r20
     a0c:	48 f4       	brcc	.+18     	; 0xa20 <__addsf3x+0x9c>
     a0e:	87 95       	ror	r24
     a10:	77 95       	ror	r23
     a12:	67 95       	ror	r22
     a14:	b7 95       	ror	r27
     a16:	f7 95       	ror	r31
     a18:	9e 3f       	cpi	r25, 0xFE	; 254
     a1a:	08 f0       	brcs	.+2      	; 0xa1e <__addsf3x+0x9a>
     a1c:	b0 cf       	rjmp	.-160    	; 0x97e <__addsf3+0x28>
     a1e:	93 95       	inc	r25
     a20:	88 0f       	add	r24, r24
     a22:	08 f0       	brcs	.+2      	; 0xa26 <__addsf3x+0xa2>
     a24:	99 27       	eor	r25, r25
     a26:	ee 0f       	add	r30, r30
     a28:	97 95       	ror	r25
     a2a:	87 95       	ror	r24
     a2c:	08 95       	ret

00000a2e <__divsf3>:
     a2e:	0e 94 2b 05 	call	0xa56	; 0xa56 <__divsf3x>
     a32:	0c 94 13 06 	jmp	0xc26	; 0xc26 <__fp_round>
     a36:	0e 94 0c 06 	call	0xc18	; 0xc18 <__fp_pscB>
     a3a:	58 f0       	brcs	.+22     	; 0xa52 <__divsf3+0x24>
     a3c:	0e 94 05 06 	call	0xc0a	; 0xc0a <__fp_pscA>
     a40:	40 f0       	brcs	.+16     	; 0xa52 <__divsf3+0x24>
     a42:	29 f4       	brne	.+10     	; 0xa4e <__divsf3+0x20>
     a44:	5f 3f       	cpi	r21, 0xFF	; 255
     a46:	29 f0       	breq	.+10     	; 0xa52 <__divsf3+0x24>
     a48:	0c 94 fc 05 	jmp	0xbf8	; 0xbf8 <__fp_inf>
     a4c:	51 11       	cpse	r21, r1
     a4e:	0c 94 47 06 	jmp	0xc8e	; 0xc8e <__fp_szero>
     a52:	0c 94 02 06 	jmp	0xc04	; 0xc04 <__fp_nan>

00000a56 <__divsf3x>:
     a56:	0e 94 24 06 	call	0xc48	; 0xc48 <__fp_split3>
     a5a:	68 f3       	brcs	.-38     	; 0xa36 <__divsf3+0x8>

00000a5c <__divsf3_pse>:
     a5c:	99 23       	and	r25, r25
     a5e:	b1 f3       	breq	.-20     	; 0xa4c <__divsf3+0x1e>
     a60:	55 23       	and	r21, r21
     a62:	91 f3       	breq	.-28     	; 0xa48 <__divsf3+0x1a>
     a64:	95 1b       	sub	r25, r21
     a66:	55 0b       	sbc	r21, r21
     a68:	bb 27       	eor	r27, r27
     a6a:	aa 27       	eor	r26, r26
     a6c:	62 17       	cp	r22, r18
     a6e:	73 07       	cpc	r23, r19
     a70:	84 07       	cpc	r24, r20
     a72:	38 f0       	brcs	.+14     	; 0xa82 <__divsf3_pse+0x26>
     a74:	9f 5f       	subi	r25, 0xFF	; 255
     a76:	5f 4f       	sbci	r21, 0xFF	; 255
     a78:	22 0f       	add	r18, r18
     a7a:	33 1f       	adc	r19, r19
     a7c:	44 1f       	adc	r20, r20
     a7e:	aa 1f       	adc	r26, r26
     a80:	a9 f3       	breq	.-22     	; 0xa6c <__divsf3_pse+0x10>
     a82:	35 d0       	rcall	.+106    	; 0xaee <__divsf3_pse+0x92>
     a84:	0e 2e       	mov	r0, r30
     a86:	3a f0       	brmi	.+14     	; 0xa96 <__divsf3_pse+0x3a>
     a88:	e0 e8       	ldi	r30, 0x80	; 128
     a8a:	32 d0       	rcall	.+100    	; 0xaf0 <__divsf3_pse+0x94>
     a8c:	91 50       	subi	r25, 0x01	; 1
     a8e:	50 40       	sbci	r21, 0x00	; 0
     a90:	e6 95       	lsr	r30
     a92:	00 1c       	adc	r0, r0
     a94:	ca f7       	brpl	.-14     	; 0xa88 <__divsf3_pse+0x2c>
     a96:	2b d0       	rcall	.+86     	; 0xaee <__divsf3_pse+0x92>
     a98:	fe 2f       	mov	r31, r30
     a9a:	29 d0       	rcall	.+82     	; 0xaee <__divsf3_pse+0x92>
     a9c:	66 0f       	add	r22, r22
     a9e:	77 1f       	adc	r23, r23
     aa0:	88 1f       	adc	r24, r24
     aa2:	bb 1f       	adc	r27, r27
     aa4:	26 17       	cp	r18, r22
     aa6:	37 07       	cpc	r19, r23
     aa8:	48 07       	cpc	r20, r24
     aaa:	ab 07       	cpc	r26, r27
     aac:	b0 e8       	ldi	r27, 0x80	; 128
     aae:	09 f0       	breq	.+2      	; 0xab2 <__divsf3_pse+0x56>
     ab0:	bb 0b       	sbc	r27, r27
     ab2:	80 2d       	mov	r24, r0
     ab4:	bf 01       	movw	r22, r30
     ab6:	ff 27       	eor	r31, r31
     ab8:	93 58       	subi	r25, 0x83	; 131
     aba:	5f 4f       	sbci	r21, 0xFF	; 255
     abc:	3a f0       	brmi	.+14     	; 0xacc <__divsf3_pse+0x70>
     abe:	9e 3f       	cpi	r25, 0xFE	; 254
     ac0:	51 05       	cpc	r21, r1
     ac2:	78 f0       	brcs	.+30     	; 0xae2 <__divsf3_pse+0x86>
     ac4:	0c 94 fc 05 	jmp	0xbf8	; 0xbf8 <__fp_inf>
     ac8:	0c 94 47 06 	jmp	0xc8e	; 0xc8e <__fp_szero>
     acc:	5f 3f       	cpi	r21, 0xFF	; 255
     ace:	e4 f3       	brlt	.-8      	; 0xac8 <__divsf3_pse+0x6c>
     ad0:	98 3e       	cpi	r25, 0xE8	; 232
     ad2:	d4 f3       	brlt	.-12     	; 0xac8 <__divsf3_pse+0x6c>
     ad4:	86 95       	lsr	r24
     ad6:	77 95       	ror	r23
     ad8:	67 95       	ror	r22
     ada:	b7 95       	ror	r27
     adc:	f7 95       	ror	r31
     ade:	9f 5f       	subi	r25, 0xFF	; 255
     ae0:	c9 f7       	brne	.-14     	; 0xad4 <__divsf3_pse+0x78>
     ae2:	88 0f       	add	r24, r24
     ae4:	91 1d       	adc	r25, r1
     ae6:	96 95       	lsr	r25
     ae8:	87 95       	ror	r24
     aea:	97 f9       	bld	r25, 7
     aec:	08 95       	ret
     aee:	e1 e0       	ldi	r30, 0x01	; 1
     af0:	66 0f       	add	r22, r22
     af2:	77 1f       	adc	r23, r23
     af4:	88 1f       	adc	r24, r24
     af6:	bb 1f       	adc	r27, r27
     af8:	62 17       	cp	r22, r18
     afa:	73 07       	cpc	r23, r19
     afc:	84 07       	cpc	r24, r20
     afe:	ba 07       	cpc	r27, r26
     b00:	20 f0       	brcs	.+8      	; 0xb0a <__divsf3_pse+0xae>
     b02:	62 1b       	sub	r22, r18
     b04:	73 0b       	sbc	r23, r19
     b06:	84 0b       	sbc	r24, r20
     b08:	ba 0b       	sbc	r27, r26
     b0a:	ee 1f       	adc	r30, r30
     b0c:	88 f7       	brcc	.-30     	; 0xaf0 <__divsf3_pse+0x94>
     b0e:	e0 95       	com	r30
     b10:	08 95       	ret

00000b12 <__fixsfsi>:
     b12:	0e 94 90 05 	call	0xb20	; 0xb20 <__fixunssfsi>
     b16:	68 94       	set
     b18:	b1 11       	cpse	r27, r1
     b1a:	0c 94 47 06 	jmp	0xc8e	; 0xc8e <__fp_szero>
     b1e:	08 95       	ret

00000b20 <__fixunssfsi>:
     b20:	0e 94 2c 06 	call	0xc58	; 0xc58 <__fp_splitA>
     b24:	88 f0       	brcs	.+34     	; 0xb48 <__fixunssfsi+0x28>
     b26:	9f 57       	subi	r25, 0x7F	; 127
     b28:	98 f0       	brcs	.+38     	; 0xb50 <__fixunssfsi+0x30>
     b2a:	b9 2f       	mov	r27, r25
     b2c:	99 27       	eor	r25, r25
     b2e:	b7 51       	subi	r27, 0x17	; 23
     b30:	b0 f0       	brcs	.+44     	; 0xb5e <__fixunssfsi+0x3e>
     b32:	e1 f0       	breq	.+56     	; 0xb6c <__fixunssfsi+0x4c>
     b34:	66 0f       	add	r22, r22
     b36:	77 1f       	adc	r23, r23
     b38:	88 1f       	adc	r24, r24
     b3a:	99 1f       	adc	r25, r25
     b3c:	1a f0       	brmi	.+6      	; 0xb44 <__fixunssfsi+0x24>
     b3e:	ba 95       	dec	r27
     b40:	c9 f7       	brne	.-14     	; 0xb34 <__fixunssfsi+0x14>
     b42:	14 c0       	rjmp	.+40     	; 0xb6c <__fixunssfsi+0x4c>
     b44:	b1 30       	cpi	r27, 0x01	; 1
     b46:	91 f0       	breq	.+36     	; 0xb6c <__fixunssfsi+0x4c>
     b48:	0e 94 46 06 	call	0xc8c	; 0xc8c <__fp_zero>
     b4c:	b1 e0       	ldi	r27, 0x01	; 1
     b4e:	08 95       	ret
     b50:	0c 94 46 06 	jmp	0xc8c	; 0xc8c <__fp_zero>
     b54:	67 2f       	mov	r22, r23
     b56:	78 2f       	mov	r23, r24
     b58:	88 27       	eor	r24, r24
     b5a:	b8 5f       	subi	r27, 0xF8	; 248
     b5c:	39 f0       	breq	.+14     	; 0xb6c <__fixunssfsi+0x4c>
     b5e:	b9 3f       	cpi	r27, 0xF9	; 249
     b60:	cc f3       	brlt	.-14     	; 0xb54 <__fixunssfsi+0x34>
     b62:	86 95       	lsr	r24
     b64:	77 95       	ror	r23
     b66:	67 95       	ror	r22
     b68:	b3 95       	inc	r27
     b6a:	d9 f7       	brne	.-10     	; 0xb62 <__fixunssfsi+0x42>
     b6c:	3e f4       	brtc	.+14     	; 0xb7c <__fixunssfsi+0x5c>
     b6e:	90 95       	com	r25
     b70:	80 95       	com	r24
     b72:	70 95       	com	r23
     b74:	61 95       	neg	r22
     b76:	7f 4f       	sbci	r23, 0xFF	; 255
     b78:	8f 4f       	sbci	r24, 0xFF	; 255
     b7a:	9f 4f       	sbci	r25, 0xFF	; 255
     b7c:	08 95       	ret

00000b7e <__floatunsisf>:
     b7e:	e8 94       	clt
     b80:	09 c0       	rjmp	.+18     	; 0xb94 <__floatsisf+0x12>

00000b82 <__floatsisf>:
     b82:	97 fb       	bst	r25, 7
     b84:	3e f4       	brtc	.+14     	; 0xb94 <__floatsisf+0x12>
     b86:	90 95       	com	r25
     b88:	80 95       	com	r24
     b8a:	70 95       	com	r23
     b8c:	61 95       	neg	r22
     b8e:	7f 4f       	sbci	r23, 0xFF	; 255
     b90:	8f 4f       	sbci	r24, 0xFF	; 255
     b92:	9f 4f       	sbci	r25, 0xFF	; 255
     b94:	99 23       	and	r25, r25
     b96:	a9 f0       	breq	.+42     	; 0xbc2 <__floatsisf+0x40>
     b98:	f9 2f       	mov	r31, r25
     b9a:	96 e9       	ldi	r25, 0x96	; 150
     b9c:	bb 27       	eor	r27, r27
     b9e:	93 95       	inc	r25
     ba0:	f6 95       	lsr	r31
     ba2:	87 95       	ror	r24
     ba4:	77 95       	ror	r23
     ba6:	67 95       	ror	r22
     ba8:	b7 95       	ror	r27
     baa:	f1 11       	cpse	r31, r1
     bac:	f8 cf       	rjmp	.-16     	; 0xb9e <__floatsisf+0x1c>
     bae:	fa f4       	brpl	.+62     	; 0xbee <__floatsisf+0x6c>
     bb0:	bb 0f       	add	r27, r27
     bb2:	11 f4       	brne	.+4      	; 0xbb8 <__floatsisf+0x36>
     bb4:	60 ff       	sbrs	r22, 0
     bb6:	1b c0       	rjmp	.+54     	; 0xbee <__floatsisf+0x6c>
     bb8:	6f 5f       	subi	r22, 0xFF	; 255
     bba:	7f 4f       	sbci	r23, 0xFF	; 255
     bbc:	8f 4f       	sbci	r24, 0xFF	; 255
     bbe:	9f 4f       	sbci	r25, 0xFF	; 255
     bc0:	16 c0       	rjmp	.+44     	; 0xbee <__floatsisf+0x6c>
     bc2:	88 23       	and	r24, r24
     bc4:	11 f0       	breq	.+4      	; 0xbca <__floatsisf+0x48>
     bc6:	96 e9       	ldi	r25, 0x96	; 150
     bc8:	11 c0       	rjmp	.+34     	; 0xbec <__floatsisf+0x6a>
     bca:	77 23       	and	r23, r23
     bcc:	21 f0       	breq	.+8      	; 0xbd6 <__floatsisf+0x54>
     bce:	9e e8       	ldi	r25, 0x8E	; 142
     bd0:	87 2f       	mov	r24, r23
     bd2:	76 2f       	mov	r23, r22
     bd4:	05 c0       	rjmp	.+10     	; 0xbe0 <__floatsisf+0x5e>
     bd6:	66 23       	and	r22, r22
     bd8:	71 f0       	breq	.+28     	; 0xbf6 <__floatsisf+0x74>
     bda:	96 e8       	ldi	r25, 0x86	; 134
     bdc:	86 2f       	mov	r24, r22
     bde:	70 e0       	ldi	r23, 0x00	; 0
     be0:	60 e0       	ldi	r22, 0x00	; 0
     be2:	2a f0       	brmi	.+10     	; 0xbee <__floatsisf+0x6c>
     be4:	9a 95       	dec	r25
     be6:	66 0f       	add	r22, r22
     be8:	77 1f       	adc	r23, r23
     bea:	88 1f       	adc	r24, r24
     bec:	da f7       	brpl	.-10     	; 0xbe4 <__floatsisf+0x62>
     bee:	88 0f       	add	r24, r24
     bf0:	96 95       	lsr	r25
     bf2:	87 95       	ror	r24
     bf4:	97 f9       	bld	r25, 7
     bf6:	08 95       	ret

00000bf8 <__fp_inf>:
     bf8:	97 f9       	bld	r25, 7
     bfa:	9f 67       	ori	r25, 0x7F	; 127
     bfc:	80 e8       	ldi	r24, 0x80	; 128
     bfe:	70 e0       	ldi	r23, 0x00	; 0
     c00:	60 e0       	ldi	r22, 0x00	; 0
     c02:	08 95       	ret

00000c04 <__fp_nan>:
     c04:	9f ef       	ldi	r25, 0xFF	; 255
     c06:	80 ec       	ldi	r24, 0xC0	; 192
     c08:	08 95       	ret

00000c0a <__fp_pscA>:
     c0a:	00 24       	eor	r0, r0
     c0c:	0a 94       	dec	r0
     c0e:	16 16       	cp	r1, r22
     c10:	17 06       	cpc	r1, r23
     c12:	18 06       	cpc	r1, r24
     c14:	09 06       	cpc	r0, r25
     c16:	08 95       	ret

00000c18 <__fp_pscB>:
     c18:	00 24       	eor	r0, r0
     c1a:	0a 94       	dec	r0
     c1c:	12 16       	cp	r1, r18
     c1e:	13 06       	cpc	r1, r19
     c20:	14 06       	cpc	r1, r20
     c22:	05 06       	cpc	r0, r21
     c24:	08 95       	ret

00000c26 <__fp_round>:
     c26:	09 2e       	mov	r0, r25
     c28:	03 94       	inc	r0
     c2a:	00 0c       	add	r0, r0
     c2c:	11 f4       	brne	.+4      	; 0xc32 <__fp_round+0xc>
     c2e:	88 23       	and	r24, r24
     c30:	52 f0       	brmi	.+20     	; 0xc46 <__fp_round+0x20>
     c32:	bb 0f       	add	r27, r27
     c34:	40 f4       	brcc	.+16     	; 0xc46 <__fp_round+0x20>
     c36:	bf 2b       	or	r27, r31
     c38:	11 f4       	brne	.+4      	; 0xc3e <__fp_round+0x18>
     c3a:	60 ff       	sbrs	r22, 0
     c3c:	04 c0       	rjmp	.+8      	; 0xc46 <__fp_round+0x20>
     c3e:	6f 5f       	subi	r22, 0xFF	; 255
     c40:	7f 4f       	sbci	r23, 0xFF	; 255
     c42:	8f 4f       	sbci	r24, 0xFF	; 255
     c44:	9f 4f       	sbci	r25, 0xFF	; 255
     c46:	08 95       	ret

00000c48 <__fp_split3>:
     c48:	57 fd       	sbrc	r21, 7
     c4a:	90 58       	subi	r25, 0x80	; 128
     c4c:	44 0f       	add	r20, r20
     c4e:	55 1f       	adc	r21, r21
     c50:	59 f0       	breq	.+22     	; 0xc68 <__fp_splitA+0x10>
     c52:	5f 3f       	cpi	r21, 0xFF	; 255
     c54:	71 f0       	breq	.+28     	; 0xc72 <__fp_splitA+0x1a>
     c56:	47 95       	ror	r20

00000c58 <__fp_splitA>:
     c58:	88 0f       	add	r24, r24
     c5a:	97 fb       	bst	r25, 7
     c5c:	99 1f       	adc	r25, r25
     c5e:	61 f0       	breq	.+24     	; 0xc78 <__fp_splitA+0x20>
     c60:	9f 3f       	cpi	r25, 0xFF	; 255
     c62:	79 f0       	breq	.+30     	; 0xc82 <__fp_splitA+0x2a>
     c64:	87 95       	ror	r24
     c66:	08 95       	ret
     c68:	12 16       	cp	r1, r18
     c6a:	13 06       	cpc	r1, r19
     c6c:	14 06       	cpc	r1, r20
     c6e:	55 1f       	adc	r21, r21
     c70:	f2 cf       	rjmp	.-28     	; 0xc56 <__fp_split3+0xe>
     c72:	46 95       	lsr	r20
     c74:	f1 df       	rcall	.-30     	; 0xc58 <__fp_splitA>
     c76:	08 c0       	rjmp	.+16     	; 0xc88 <__fp_splitA+0x30>
     c78:	16 16       	cp	r1, r22
     c7a:	17 06       	cpc	r1, r23
     c7c:	18 06       	cpc	r1, r24
     c7e:	99 1f       	adc	r25, r25
     c80:	f1 cf       	rjmp	.-30     	; 0xc64 <__fp_splitA+0xc>
     c82:	86 95       	lsr	r24
     c84:	71 05       	cpc	r23, r1
     c86:	61 05       	cpc	r22, r1
     c88:	08 94       	sec
     c8a:	08 95       	ret

00000c8c <__fp_zero>:
     c8c:	e8 94       	clt

00000c8e <__fp_szero>:
     c8e:	bb 27       	eor	r27, r27
     c90:	66 27       	eor	r22, r22
     c92:	77 27       	eor	r23, r23
     c94:	cb 01       	movw	r24, r22
     c96:	97 f9       	bld	r25, 7
     c98:	08 95       	ret

00000c9a <__mulsf3>:
     c9a:	0e 94 60 06 	call	0xcc0	; 0xcc0 <__mulsf3x>
     c9e:	0c 94 13 06 	jmp	0xc26	; 0xc26 <__fp_round>
     ca2:	0e 94 05 06 	call	0xc0a	; 0xc0a <__fp_pscA>
     ca6:	38 f0       	brcs	.+14     	; 0xcb6 <__mulsf3+0x1c>
     ca8:	0e 94 0c 06 	call	0xc18	; 0xc18 <__fp_pscB>
     cac:	20 f0       	brcs	.+8      	; 0xcb6 <__mulsf3+0x1c>
     cae:	95 23       	and	r25, r21
     cb0:	11 f0       	breq	.+4      	; 0xcb6 <__mulsf3+0x1c>
     cb2:	0c 94 fc 05 	jmp	0xbf8	; 0xbf8 <__fp_inf>
     cb6:	0c 94 02 06 	jmp	0xc04	; 0xc04 <__fp_nan>
     cba:	11 24       	eor	r1, r1
     cbc:	0c 94 47 06 	jmp	0xc8e	; 0xc8e <__fp_szero>

00000cc0 <__mulsf3x>:
     cc0:	0e 94 24 06 	call	0xc48	; 0xc48 <__fp_split3>
     cc4:	70 f3       	brcs	.-36     	; 0xca2 <__mulsf3+0x8>

00000cc6 <__mulsf3_pse>:
     cc6:	95 9f       	mul	r25, r21
     cc8:	c1 f3       	breq	.-16     	; 0xcba <__mulsf3+0x20>
     cca:	95 0f       	add	r25, r21
     ccc:	50 e0       	ldi	r21, 0x00	; 0
     cce:	55 1f       	adc	r21, r21
     cd0:	62 9f       	mul	r22, r18
     cd2:	f0 01       	movw	r30, r0
     cd4:	72 9f       	mul	r23, r18
     cd6:	bb 27       	eor	r27, r27
     cd8:	f0 0d       	add	r31, r0
     cda:	b1 1d       	adc	r27, r1
     cdc:	63 9f       	mul	r22, r19
     cde:	aa 27       	eor	r26, r26
     ce0:	f0 0d       	add	r31, r0
     ce2:	b1 1d       	adc	r27, r1
     ce4:	aa 1f       	adc	r26, r26
     ce6:	64 9f       	mul	r22, r20
     ce8:	66 27       	eor	r22, r22
     cea:	b0 0d       	add	r27, r0
     cec:	a1 1d       	adc	r26, r1
     cee:	66 1f       	adc	r22, r22
     cf0:	82 9f       	mul	r24, r18
     cf2:	22 27       	eor	r18, r18
     cf4:	b0 0d       	add	r27, r0
     cf6:	a1 1d       	adc	r26, r1
     cf8:	62 1f       	adc	r22, r18
     cfa:	73 9f       	mul	r23, r19
     cfc:	b0 0d       	add	r27, r0
     cfe:	a1 1d       	adc	r26, r1
     d00:	62 1f       	adc	r22, r18
     d02:	83 9f       	mul	r24, r19
     d04:	a0 0d       	add	r26, r0
     d06:	61 1d       	adc	r22, r1
     d08:	22 1f       	adc	r18, r18
     d0a:	74 9f       	mul	r23, r20
     d0c:	33 27       	eor	r19, r19
     d0e:	a0 0d       	add	r26, r0
     d10:	61 1d       	adc	r22, r1
     d12:	23 1f       	adc	r18, r19
     d14:	84 9f       	mul	r24, r20
     d16:	60 0d       	add	r22, r0
     d18:	21 1d       	adc	r18, r1
     d1a:	82 2f       	mov	r24, r18
     d1c:	76 2f       	mov	r23, r22
     d1e:	6a 2f       	mov	r22, r26
     d20:	11 24       	eor	r1, r1
     d22:	9f 57       	subi	r25, 0x7F	; 127
     d24:	50 40       	sbci	r21, 0x00	; 0
     d26:	9a f0       	brmi	.+38     	; 0xd4e <__mulsf3_pse+0x88>
     d28:	f1 f0       	breq	.+60     	; 0xd66 <__mulsf3_pse+0xa0>
     d2a:	88 23       	and	r24, r24
     d2c:	4a f0       	brmi	.+18     	; 0xd40 <__mulsf3_pse+0x7a>
     d2e:	ee 0f       	add	r30, r30
     d30:	ff 1f       	adc	r31, r31
     d32:	bb 1f       	adc	r27, r27
     d34:	66 1f       	adc	r22, r22
     d36:	77 1f       	adc	r23, r23
     d38:	88 1f       	adc	r24, r24
     d3a:	91 50       	subi	r25, 0x01	; 1
     d3c:	50 40       	sbci	r21, 0x00	; 0
     d3e:	a9 f7       	brne	.-22     	; 0xd2a <__mulsf3_pse+0x64>
     d40:	9e 3f       	cpi	r25, 0xFE	; 254
     d42:	51 05       	cpc	r21, r1
     d44:	80 f0       	brcs	.+32     	; 0xd66 <__mulsf3_pse+0xa0>
     d46:	0c 94 fc 05 	jmp	0xbf8	; 0xbf8 <__fp_inf>
     d4a:	0c 94 47 06 	jmp	0xc8e	; 0xc8e <__fp_szero>
     d4e:	5f 3f       	cpi	r21, 0xFF	; 255
     d50:	e4 f3       	brlt	.-8      	; 0xd4a <__mulsf3_pse+0x84>
     d52:	98 3e       	cpi	r25, 0xE8	; 232
     d54:	d4 f3       	brlt	.-12     	; 0xd4a <__mulsf3_pse+0x84>
     d56:	86 95       	lsr	r24
     d58:	77 95       	ror	r23
     d5a:	67 95       	ror	r22
     d5c:	b7 95       	ror	r27
     d5e:	f7 95       	ror	r31
     d60:	e7 95       	ror	r30
     d62:	9f 5f       	subi	r25, 0xFF	; 255
     d64:	c1 f7       	brne	.-16     	; 0xd56 <__mulsf3_pse+0x90>
     d66:	fe 2b       	or	r31, r30
     d68:	88 0f       	add	r24, r24
     d6a:	91 1d       	adc	r25, r1
     d6c:	96 95       	lsr	r25
     d6e:	87 95       	ror	r24
     d70:	97 f9       	bld	r25, 7
     d72:	08 95       	ret

00000d74 <__tablejump2__>:
     d74:	ee 0f       	add	r30, r30
     d76:	ff 1f       	adc	r31, r31
     d78:	05 90       	lpm	r0, Z+
     d7a:	f4 91       	lpm	r31, Z
     d7c:	e0 2d       	mov	r30, r0
     d7e:	09 94       	ijmp

00000d80 <__mulshisi3>:
     d80:	b7 ff       	sbrs	r27, 7
     d82:	0c 94 c8 06 	jmp	0xd90	; 0xd90 <__muluhisi3>

00000d86 <__mulohisi3>:
     d86:	0e 94 c8 06 	call	0xd90	; 0xd90 <__muluhisi3>
     d8a:	82 1b       	sub	r24, r18
     d8c:	93 0b       	sbc	r25, r19
     d8e:	08 95       	ret

00000d90 <__muluhisi3>:
     d90:	0e 94 d3 06 	call	0xda6	; 0xda6 <__umulhisi3>
     d94:	a5 9f       	mul	r26, r21
     d96:	90 0d       	add	r25, r0
     d98:	b4 9f       	mul	r27, r20
     d9a:	90 0d       	add	r25, r0
     d9c:	a4 9f       	mul	r26, r20
     d9e:	80 0d       	add	r24, r0
     da0:	91 1d       	adc	r25, r1
     da2:	11 24       	eor	r1, r1
     da4:	08 95       	ret

00000da6 <__umulhisi3>:
     da6:	a2 9f       	mul	r26, r18
     da8:	b0 01       	movw	r22, r0
     daa:	b3 9f       	mul	r27, r19
     dac:	c0 01       	movw	r24, r0
     dae:	a3 9f       	mul	r26, r19
     db0:	70 0d       	add	r23, r0
     db2:	81 1d       	adc	r24, r1
     db4:	11 24       	eor	r1, r1
     db6:	91 1d       	adc	r25, r1
     db8:	b2 9f       	mul	r27, r18
     dba:	70 0d       	add	r23, r0
     dbc:	81 1d       	adc	r24, r1
     dbe:	11 24       	eor	r1, r1
     dc0:	91 1d       	adc	r25, r1
     dc2:	08 95       	ret

00000dc4 <printf>:
     dc4:	a0 e0       	ldi	r26, 0x00	; 0
     dc6:	b0 e0       	ldi	r27, 0x00	; 0
     dc8:	e8 ee       	ldi	r30, 0xE8	; 232
     dca:	f6 e0       	ldi	r31, 0x06	; 6
     dcc:	0c 94 99 09 	jmp	0x1332	; 0x1332 <__prologue_saves__+0x20>
     dd0:	ae 01       	movw	r20, r28
     dd2:	4b 5f       	subi	r20, 0xFB	; 251
     dd4:	5f 4f       	sbci	r21, 0xFF	; 255
     dd6:	fa 01       	movw	r30, r20
     dd8:	61 91       	ld	r22, Z+
     dda:	71 91       	ld	r23, Z+
     ddc:	af 01       	movw	r20, r30
     dde:	80 91 47 38 	lds	r24, 0x3847	; 0x803847 <__iob+0x2>
     de2:	90 91 48 38 	lds	r25, 0x3848	; 0x803848 <__iob+0x3>
     de6:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <vfprintf>
     dea:	e2 e0       	ldi	r30, 0x02	; 2
     dec:	0c 94 b2 09 	jmp	0x1364	; 0x1364 <__epilogue_restores__+0x20>

00000df0 <vfprintf>:
     df0:	ab e0       	ldi	r26, 0x0B	; 11
     df2:	b0 e0       	ldi	r27, 0x00	; 0
     df4:	ee ef       	ldi	r30, 0xFE	; 254
     df6:	f6 e0       	ldi	r31, 0x06	; 6
     df8:	0c 94 89 09 	jmp	0x1312	; 0x1312 <__prologue_saves__>
     dfc:	6c 01       	movw	r12, r24
     dfe:	7b 01       	movw	r14, r22
     e00:	8a 01       	movw	r16, r20
     e02:	fc 01       	movw	r30, r24
     e04:	16 82       	std	Z+6, r1	; 0x06
     e06:	17 82       	std	Z+7, r1	; 0x07
     e08:	83 81       	ldd	r24, Z+3	; 0x03
     e0a:	81 ff       	sbrs	r24, 1
     e0c:	cc c1       	rjmp	.+920    	; 0x11a6 <vfprintf+0x3b6>
     e0e:	ce 01       	movw	r24, r28
     e10:	01 96       	adiw	r24, 0x01	; 1
     e12:	3c 01       	movw	r6, r24
     e14:	f6 01       	movw	r30, r12
     e16:	93 81       	ldd	r25, Z+3	; 0x03
     e18:	f7 01       	movw	r30, r14
     e1a:	93 fd       	sbrc	r25, 3
     e1c:	85 91       	lpm	r24, Z+
     e1e:	93 ff       	sbrs	r25, 3
     e20:	81 91       	ld	r24, Z+
     e22:	7f 01       	movw	r14, r30
     e24:	88 23       	and	r24, r24
     e26:	09 f4       	brne	.+2      	; 0xe2a <vfprintf+0x3a>
     e28:	ba c1       	rjmp	.+884    	; 0x119e <vfprintf+0x3ae>
     e2a:	85 32       	cpi	r24, 0x25	; 37
     e2c:	39 f4       	brne	.+14     	; 0xe3c <vfprintf+0x4c>
     e2e:	93 fd       	sbrc	r25, 3
     e30:	85 91       	lpm	r24, Z+
     e32:	93 ff       	sbrs	r25, 3
     e34:	81 91       	ld	r24, Z+
     e36:	7f 01       	movw	r14, r30
     e38:	85 32       	cpi	r24, 0x25	; 37
     e3a:	29 f4       	brne	.+10     	; 0xe46 <vfprintf+0x56>
     e3c:	b6 01       	movw	r22, r12
     e3e:	90 e0       	ldi	r25, 0x00	; 0
     e40:	0e 94 ef 08 	call	0x11de	; 0x11de <fputc>
     e44:	e7 cf       	rjmp	.-50     	; 0xe14 <vfprintf+0x24>
     e46:	91 2c       	mov	r9, r1
     e48:	21 2c       	mov	r2, r1
     e4a:	31 2c       	mov	r3, r1
     e4c:	ff e1       	ldi	r31, 0x1F	; 31
     e4e:	f3 15       	cp	r31, r3
     e50:	d8 f0       	brcs	.+54     	; 0xe88 <vfprintf+0x98>
     e52:	8b 32       	cpi	r24, 0x2B	; 43
     e54:	79 f0       	breq	.+30     	; 0xe74 <vfprintf+0x84>
     e56:	38 f4       	brcc	.+14     	; 0xe66 <vfprintf+0x76>
     e58:	80 32       	cpi	r24, 0x20	; 32
     e5a:	79 f0       	breq	.+30     	; 0xe7a <vfprintf+0x8a>
     e5c:	83 32       	cpi	r24, 0x23	; 35
     e5e:	a1 f4       	brne	.+40     	; 0xe88 <vfprintf+0x98>
     e60:	23 2d       	mov	r18, r3
     e62:	20 61       	ori	r18, 0x10	; 16
     e64:	1d c0       	rjmp	.+58     	; 0xea0 <vfprintf+0xb0>
     e66:	8d 32       	cpi	r24, 0x2D	; 45
     e68:	61 f0       	breq	.+24     	; 0xe82 <vfprintf+0x92>
     e6a:	80 33       	cpi	r24, 0x30	; 48
     e6c:	69 f4       	brne	.+26     	; 0xe88 <vfprintf+0x98>
     e6e:	23 2d       	mov	r18, r3
     e70:	21 60       	ori	r18, 0x01	; 1
     e72:	16 c0       	rjmp	.+44     	; 0xea0 <vfprintf+0xb0>
     e74:	83 2d       	mov	r24, r3
     e76:	82 60       	ori	r24, 0x02	; 2
     e78:	38 2e       	mov	r3, r24
     e7a:	e3 2d       	mov	r30, r3
     e7c:	e4 60       	ori	r30, 0x04	; 4
     e7e:	3e 2e       	mov	r3, r30
     e80:	2a c0       	rjmp	.+84     	; 0xed6 <vfprintf+0xe6>
     e82:	f3 2d       	mov	r31, r3
     e84:	f8 60       	ori	r31, 0x08	; 8
     e86:	1d c0       	rjmp	.+58     	; 0xec2 <vfprintf+0xd2>
     e88:	37 fc       	sbrc	r3, 7
     e8a:	2d c0       	rjmp	.+90     	; 0xee6 <vfprintf+0xf6>
     e8c:	20 ed       	ldi	r18, 0xD0	; 208
     e8e:	28 0f       	add	r18, r24
     e90:	2a 30       	cpi	r18, 0x0A	; 10
     e92:	40 f0       	brcs	.+16     	; 0xea4 <vfprintf+0xb4>
     e94:	8e 32       	cpi	r24, 0x2E	; 46
     e96:	b9 f4       	brne	.+46     	; 0xec6 <vfprintf+0xd6>
     e98:	36 fc       	sbrc	r3, 6
     e9a:	81 c1       	rjmp	.+770    	; 0x119e <vfprintf+0x3ae>
     e9c:	23 2d       	mov	r18, r3
     e9e:	20 64       	ori	r18, 0x40	; 64
     ea0:	32 2e       	mov	r3, r18
     ea2:	19 c0       	rjmp	.+50     	; 0xed6 <vfprintf+0xe6>
     ea4:	36 fe       	sbrs	r3, 6
     ea6:	06 c0       	rjmp	.+12     	; 0xeb4 <vfprintf+0xc4>
     ea8:	8a e0       	ldi	r24, 0x0A	; 10
     eaa:	98 9e       	mul	r9, r24
     eac:	20 0d       	add	r18, r0
     eae:	11 24       	eor	r1, r1
     eb0:	92 2e       	mov	r9, r18
     eb2:	11 c0       	rjmp	.+34     	; 0xed6 <vfprintf+0xe6>
     eb4:	ea e0       	ldi	r30, 0x0A	; 10
     eb6:	2e 9e       	mul	r2, r30
     eb8:	20 0d       	add	r18, r0
     eba:	11 24       	eor	r1, r1
     ebc:	22 2e       	mov	r2, r18
     ebe:	f3 2d       	mov	r31, r3
     ec0:	f0 62       	ori	r31, 0x20	; 32
     ec2:	3f 2e       	mov	r3, r31
     ec4:	08 c0       	rjmp	.+16     	; 0xed6 <vfprintf+0xe6>
     ec6:	8c 36       	cpi	r24, 0x6C	; 108
     ec8:	21 f4       	brne	.+8      	; 0xed2 <vfprintf+0xe2>
     eca:	83 2d       	mov	r24, r3
     ecc:	80 68       	ori	r24, 0x80	; 128
     ece:	38 2e       	mov	r3, r24
     ed0:	02 c0       	rjmp	.+4      	; 0xed6 <vfprintf+0xe6>
     ed2:	88 36       	cpi	r24, 0x68	; 104
     ed4:	41 f4       	brne	.+16     	; 0xee6 <vfprintf+0xf6>
     ed6:	f7 01       	movw	r30, r14
     ed8:	93 fd       	sbrc	r25, 3
     eda:	85 91       	lpm	r24, Z+
     edc:	93 ff       	sbrs	r25, 3
     ede:	81 91       	ld	r24, Z+
     ee0:	7f 01       	movw	r14, r30
     ee2:	81 11       	cpse	r24, r1
     ee4:	b3 cf       	rjmp	.-154    	; 0xe4c <vfprintf+0x5c>
     ee6:	98 2f       	mov	r25, r24
     ee8:	9f 7d       	andi	r25, 0xDF	; 223
     eea:	95 54       	subi	r25, 0x45	; 69
     eec:	93 30       	cpi	r25, 0x03	; 3
     eee:	28 f4       	brcc	.+10     	; 0xefa <vfprintf+0x10a>
     ef0:	0c 5f       	subi	r16, 0xFC	; 252
     ef2:	1f 4f       	sbci	r17, 0xFF	; 255
     ef4:	9f e3       	ldi	r25, 0x3F	; 63
     ef6:	99 83       	std	Y+1, r25	; 0x01
     ef8:	0d c0       	rjmp	.+26     	; 0xf14 <vfprintf+0x124>
     efa:	83 36       	cpi	r24, 0x63	; 99
     efc:	31 f0       	breq	.+12     	; 0xf0a <vfprintf+0x11a>
     efe:	83 37       	cpi	r24, 0x73	; 115
     f00:	71 f0       	breq	.+28     	; 0xf1e <vfprintf+0x12e>
     f02:	83 35       	cpi	r24, 0x53	; 83
     f04:	09 f0       	breq	.+2      	; 0xf08 <vfprintf+0x118>
     f06:	59 c0       	rjmp	.+178    	; 0xfba <vfprintf+0x1ca>
     f08:	21 c0       	rjmp	.+66     	; 0xf4c <vfprintf+0x15c>
     f0a:	f8 01       	movw	r30, r16
     f0c:	80 81       	ld	r24, Z
     f0e:	89 83       	std	Y+1, r24	; 0x01
     f10:	0e 5f       	subi	r16, 0xFE	; 254
     f12:	1f 4f       	sbci	r17, 0xFF	; 255
     f14:	88 24       	eor	r8, r8
     f16:	83 94       	inc	r8
     f18:	91 2c       	mov	r9, r1
     f1a:	53 01       	movw	r10, r6
     f1c:	13 c0       	rjmp	.+38     	; 0xf44 <vfprintf+0x154>
     f1e:	28 01       	movw	r4, r16
     f20:	f2 e0       	ldi	r31, 0x02	; 2
     f22:	4f 0e       	add	r4, r31
     f24:	51 1c       	adc	r5, r1
     f26:	f8 01       	movw	r30, r16
     f28:	a0 80       	ld	r10, Z
     f2a:	b1 80       	ldd	r11, Z+1	; 0x01
     f2c:	36 fe       	sbrs	r3, 6
     f2e:	03 c0       	rjmp	.+6      	; 0xf36 <vfprintf+0x146>
     f30:	69 2d       	mov	r22, r9
     f32:	70 e0       	ldi	r23, 0x00	; 0
     f34:	02 c0       	rjmp	.+4      	; 0xf3a <vfprintf+0x14a>
     f36:	6f ef       	ldi	r22, 0xFF	; 255
     f38:	7f ef       	ldi	r23, 0xFF	; 255
     f3a:	c5 01       	movw	r24, r10
     f3c:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <strnlen>
     f40:	4c 01       	movw	r8, r24
     f42:	82 01       	movw	r16, r4
     f44:	f3 2d       	mov	r31, r3
     f46:	ff 77       	andi	r31, 0x7F	; 127
     f48:	3f 2e       	mov	r3, r31
     f4a:	16 c0       	rjmp	.+44     	; 0xf78 <vfprintf+0x188>
     f4c:	28 01       	movw	r4, r16
     f4e:	22 e0       	ldi	r18, 0x02	; 2
     f50:	42 0e       	add	r4, r18
     f52:	51 1c       	adc	r5, r1
     f54:	f8 01       	movw	r30, r16
     f56:	a0 80       	ld	r10, Z
     f58:	b1 80       	ldd	r11, Z+1	; 0x01
     f5a:	36 fe       	sbrs	r3, 6
     f5c:	03 c0       	rjmp	.+6      	; 0xf64 <vfprintf+0x174>
     f5e:	69 2d       	mov	r22, r9
     f60:	70 e0       	ldi	r23, 0x00	; 0
     f62:	02 c0       	rjmp	.+4      	; 0xf68 <vfprintf+0x178>
     f64:	6f ef       	ldi	r22, 0xFF	; 255
     f66:	7f ef       	ldi	r23, 0xFF	; 255
     f68:	c5 01       	movw	r24, r10
     f6a:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <strnlen_P>
     f6e:	4c 01       	movw	r8, r24
     f70:	f3 2d       	mov	r31, r3
     f72:	f0 68       	ori	r31, 0x80	; 128
     f74:	3f 2e       	mov	r3, r31
     f76:	82 01       	movw	r16, r4
     f78:	33 fc       	sbrc	r3, 3
     f7a:	1b c0       	rjmp	.+54     	; 0xfb2 <vfprintf+0x1c2>
     f7c:	82 2d       	mov	r24, r2
     f7e:	90 e0       	ldi	r25, 0x00	; 0
     f80:	88 16       	cp	r8, r24
     f82:	99 06       	cpc	r9, r25
     f84:	b0 f4       	brcc	.+44     	; 0xfb2 <vfprintf+0x1c2>
     f86:	b6 01       	movw	r22, r12
     f88:	80 e2       	ldi	r24, 0x20	; 32
     f8a:	90 e0       	ldi	r25, 0x00	; 0
     f8c:	0e 94 ef 08 	call	0x11de	; 0x11de <fputc>
     f90:	2a 94       	dec	r2
     f92:	f4 cf       	rjmp	.-24     	; 0xf7c <vfprintf+0x18c>
     f94:	f5 01       	movw	r30, r10
     f96:	37 fc       	sbrc	r3, 7
     f98:	85 91       	lpm	r24, Z+
     f9a:	37 fe       	sbrs	r3, 7
     f9c:	81 91       	ld	r24, Z+
     f9e:	5f 01       	movw	r10, r30
     fa0:	b6 01       	movw	r22, r12
     fa2:	90 e0       	ldi	r25, 0x00	; 0
     fa4:	0e 94 ef 08 	call	0x11de	; 0x11de <fputc>
     fa8:	21 10       	cpse	r2, r1
     faa:	2a 94       	dec	r2
     fac:	21 e0       	ldi	r18, 0x01	; 1
     fae:	82 1a       	sub	r8, r18
     fb0:	91 08       	sbc	r9, r1
     fb2:	81 14       	cp	r8, r1
     fb4:	91 04       	cpc	r9, r1
     fb6:	71 f7       	brne	.-36     	; 0xf94 <vfprintf+0x1a4>
     fb8:	e8 c0       	rjmp	.+464    	; 0x118a <vfprintf+0x39a>
     fba:	84 36       	cpi	r24, 0x64	; 100
     fbc:	11 f0       	breq	.+4      	; 0xfc2 <vfprintf+0x1d2>
     fbe:	89 36       	cpi	r24, 0x69	; 105
     fc0:	41 f5       	brne	.+80     	; 0x1012 <vfprintf+0x222>
     fc2:	f8 01       	movw	r30, r16
     fc4:	37 fe       	sbrs	r3, 7
     fc6:	07 c0       	rjmp	.+14     	; 0xfd6 <vfprintf+0x1e6>
     fc8:	60 81       	ld	r22, Z
     fca:	71 81       	ldd	r23, Z+1	; 0x01
     fcc:	82 81       	ldd	r24, Z+2	; 0x02
     fce:	93 81       	ldd	r25, Z+3	; 0x03
     fd0:	0c 5f       	subi	r16, 0xFC	; 252
     fd2:	1f 4f       	sbci	r17, 0xFF	; 255
     fd4:	08 c0       	rjmp	.+16     	; 0xfe6 <vfprintf+0x1f6>
     fd6:	60 81       	ld	r22, Z
     fd8:	71 81       	ldd	r23, Z+1	; 0x01
     fda:	07 2e       	mov	r0, r23
     fdc:	00 0c       	add	r0, r0
     fde:	88 0b       	sbc	r24, r24
     fe0:	99 0b       	sbc	r25, r25
     fe2:	0e 5f       	subi	r16, 0xFE	; 254
     fe4:	1f 4f       	sbci	r17, 0xFF	; 255
     fe6:	f3 2d       	mov	r31, r3
     fe8:	ff 76       	andi	r31, 0x6F	; 111
     fea:	3f 2e       	mov	r3, r31
     fec:	97 ff       	sbrs	r25, 7
     fee:	09 c0       	rjmp	.+18     	; 0x1002 <vfprintf+0x212>
     ff0:	90 95       	com	r25
     ff2:	80 95       	com	r24
     ff4:	70 95       	com	r23
     ff6:	61 95       	neg	r22
     ff8:	7f 4f       	sbci	r23, 0xFF	; 255
     ffa:	8f 4f       	sbci	r24, 0xFF	; 255
     ffc:	9f 4f       	sbci	r25, 0xFF	; 255
     ffe:	f0 68       	ori	r31, 0x80	; 128
    1000:	3f 2e       	mov	r3, r31
    1002:	2a e0       	ldi	r18, 0x0A	; 10
    1004:	30 e0       	ldi	r19, 0x00	; 0
    1006:	a3 01       	movw	r20, r6
    1008:	0e 94 2b 09 	call	0x1256	; 0x1256 <__ultoa_invert>
    100c:	88 2e       	mov	r8, r24
    100e:	86 18       	sub	r8, r6
    1010:	45 c0       	rjmp	.+138    	; 0x109c <vfprintf+0x2ac>
    1012:	85 37       	cpi	r24, 0x75	; 117
    1014:	31 f4       	brne	.+12     	; 0x1022 <vfprintf+0x232>
    1016:	23 2d       	mov	r18, r3
    1018:	2f 7e       	andi	r18, 0xEF	; 239
    101a:	b2 2e       	mov	r11, r18
    101c:	2a e0       	ldi	r18, 0x0A	; 10
    101e:	30 e0       	ldi	r19, 0x00	; 0
    1020:	25 c0       	rjmp	.+74     	; 0x106c <vfprintf+0x27c>
    1022:	93 2d       	mov	r25, r3
    1024:	99 7f       	andi	r25, 0xF9	; 249
    1026:	b9 2e       	mov	r11, r25
    1028:	8f 36       	cpi	r24, 0x6F	; 111
    102a:	c1 f0       	breq	.+48     	; 0x105c <vfprintf+0x26c>
    102c:	18 f4       	brcc	.+6      	; 0x1034 <vfprintf+0x244>
    102e:	88 35       	cpi	r24, 0x58	; 88
    1030:	79 f0       	breq	.+30     	; 0x1050 <vfprintf+0x260>
    1032:	b5 c0       	rjmp	.+362    	; 0x119e <vfprintf+0x3ae>
    1034:	80 37       	cpi	r24, 0x70	; 112
    1036:	19 f0       	breq	.+6      	; 0x103e <vfprintf+0x24e>
    1038:	88 37       	cpi	r24, 0x78	; 120
    103a:	21 f0       	breq	.+8      	; 0x1044 <vfprintf+0x254>
    103c:	b0 c0       	rjmp	.+352    	; 0x119e <vfprintf+0x3ae>
    103e:	e9 2f       	mov	r30, r25
    1040:	e0 61       	ori	r30, 0x10	; 16
    1042:	be 2e       	mov	r11, r30
    1044:	b4 fe       	sbrs	r11, 4
    1046:	0d c0       	rjmp	.+26     	; 0x1062 <vfprintf+0x272>
    1048:	fb 2d       	mov	r31, r11
    104a:	f4 60       	ori	r31, 0x04	; 4
    104c:	bf 2e       	mov	r11, r31
    104e:	09 c0       	rjmp	.+18     	; 0x1062 <vfprintf+0x272>
    1050:	34 fe       	sbrs	r3, 4
    1052:	0a c0       	rjmp	.+20     	; 0x1068 <vfprintf+0x278>
    1054:	29 2f       	mov	r18, r25
    1056:	26 60       	ori	r18, 0x06	; 6
    1058:	b2 2e       	mov	r11, r18
    105a:	06 c0       	rjmp	.+12     	; 0x1068 <vfprintf+0x278>
    105c:	28 e0       	ldi	r18, 0x08	; 8
    105e:	30 e0       	ldi	r19, 0x00	; 0
    1060:	05 c0       	rjmp	.+10     	; 0x106c <vfprintf+0x27c>
    1062:	20 e1       	ldi	r18, 0x10	; 16
    1064:	30 e0       	ldi	r19, 0x00	; 0
    1066:	02 c0       	rjmp	.+4      	; 0x106c <vfprintf+0x27c>
    1068:	20 e1       	ldi	r18, 0x10	; 16
    106a:	32 e0       	ldi	r19, 0x02	; 2
    106c:	f8 01       	movw	r30, r16
    106e:	b7 fe       	sbrs	r11, 7
    1070:	07 c0       	rjmp	.+14     	; 0x1080 <vfprintf+0x290>
    1072:	60 81       	ld	r22, Z
    1074:	71 81       	ldd	r23, Z+1	; 0x01
    1076:	82 81       	ldd	r24, Z+2	; 0x02
    1078:	93 81       	ldd	r25, Z+3	; 0x03
    107a:	0c 5f       	subi	r16, 0xFC	; 252
    107c:	1f 4f       	sbci	r17, 0xFF	; 255
    107e:	06 c0       	rjmp	.+12     	; 0x108c <vfprintf+0x29c>
    1080:	60 81       	ld	r22, Z
    1082:	71 81       	ldd	r23, Z+1	; 0x01
    1084:	80 e0       	ldi	r24, 0x00	; 0
    1086:	90 e0       	ldi	r25, 0x00	; 0
    1088:	0e 5f       	subi	r16, 0xFE	; 254
    108a:	1f 4f       	sbci	r17, 0xFF	; 255
    108c:	a3 01       	movw	r20, r6
    108e:	0e 94 2b 09 	call	0x1256	; 0x1256 <__ultoa_invert>
    1092:	88 2e       	mov	r8, r24
    1094:	86 18       	sub	r8, r6
    1096:	fb 2d       	mov	r31, r11
    1098:	ff 77       	andi	r31, 0x7F	; 127
    109a:	3f 2e       	mov	r3, r31
    109c:	36 fe       	sbrs	r3, 6
    109e:	0d c0       	rjmp	.+26     	; 0x10ba <vfprintf+0x2ca>
    10a0:	23 2d       	mov	r18, r3
    10a2:	2e 7f       	andi	r18, 0xFE	; 254
    10a4:	a2 2e       	mov	r10, r18
    10a6:	89 14       	cp	r8, r9
    10a8:	58 f4       	brcc	.+22     	; 0x10c0 <vfprintf+0x2d0>
    10aa:	34 fe       	sbrs	r3, 4
    10ac:	0b c0       	rjmp	.+22     	; 0x10c4 <vfprintf+0x2d4>
    10ae:	32 fc       	sbrc	r3, 2
    10b0:	09 c0       	rjmp	.+18     	; 0x10c4 <vfprintf+0x2d4>
    10b2:	83 2d       	mov	r24, r3
    10b4:	8e 7e       	andi	r24, 0xEE	; 238
    10b6:	a8 2e       	mov	r10, r24
    10b8:	05 c0       	rjmp	.+10     	; 0x10c4 <vfprintf+0x2d4>
    10ba:	b8 2c       	mov	r11, r8
    10bc:	a3 2c       	mov	r10, r3
    10be:	03 c0       	rjmp	.+6      	; 0x10c6 <vfprintf+0x2d6>
    10c0:	b8 2c       	mov	r11, r8
    10c2:	01 c0       	rjmp	.+2      	; 0x10c6 <vfprintf+0x2d6>
    10c4:	b9 2c       	mov	r11, r9
    10c6:	a4 fe       	sbrs	r10, 4
    10c8:	0f c0       	rjmp	.+30     	; 0x10e8 <vfprintf+0x2f8>
    10ca:	fe 01       	movw	r30, r28
    10cc:	e8 0d       	add	r30, r8
    10ce:	f1 1d       	adc	r31, r1
    10d0:	80 81       	ld	r24, Z
    10d2:	80 33       	cpi	r24, 0x30	; 48
    10d4:	21 f4       	brne	.+8      	; 0x10de <vfprintf+0x2ee>
    10d6:	9a 2d       	mov	r25, r10
    10d8:	99 7e       	andi	r25, 0xE9	; 233
    10da:	a9 2e       	mov	r10, r25
    10dc:	09 c0       	rjmp	.+18     	; 0x10f0 <vfprintf+0x300>
    10de:	a2 fe       	sbrs	r10, 2
    10e0:	06 c0       	rjmp	.+12     	; 0x10ee <vfprintf+0x2fe>
    10e2:	b3 94       	inc	r11
    10e4:	b3 94       	inc	r11
    10e6:	04 c0       	rjmp	.+8      	; 0x10f0 <vfprintf+0x300>
    10e8:	8a 2d       	mov	r24, r10
    10ea:	86 78       	andi	r24, 0x86	; 134
    10ec:	09 f0       	breq	.+2      	; 0x10f0 <vfprintf+0x300>
    10ee:	b3 94       	inc	r11
    10f0:	a3 fc       	sbrc	r10, 3
    10f2:	11 c0       	rjmp	.+34     	; 0x1116 <vfprintf+0x326>
    10f4:	a0 fe       	sbrs	r10, 0
    10f6:	06 c0       	rjmp	.+12     	; 0x1104 <vfprintf+0x314>
    10f8:	b2 14       	cp	r11, r2
    10fa:	88 f4       	brcc	.+34     	; 0x111e <vfprintf+0x32e>
    10fc:	28 0c       	add	r2, r8
    10fe:	92 2c       	mov	r9, r2
    1100:	9b 18       	sub	r9, r11
    1102:	0e c0       	rjmp	.+28     	; 0x1120 <vfprintf+0x330>
    1104:	b2 14       	cp	r11, r2
    1106:	60 f4       	brcc	.+24     	; 0x1120 <vfprintf+0x330>
    1108:	b6 01       	movw	r22, r12
    110a:	80 e2       	ldi	r24, 0x20	; 32
    110c:	90 e0       	ldi	r25, 0x00	; 0
    110e:	0e 94 ef 08 	call	0x11de	; 0x11de <fputc>
    1112:	b3 94       	inc	r11
    1114:	f7 cf       	rjmp	.-18     	; 0x1104 <vfprintf+0x314>
    1116:	b2 14       	cp	r11, r2
    1118:	18 f4       	brcc	.+6      	; 0x1120 <vfprintf+0x330>
    111a:	2b 18       	sub	r2, r11
    111c:	02 c0       	rjmp	.+4      	; 0x1122 <vfprintf+0x332>
    111e:	98 2c       	mov	r9, r8
    1120:	21 2c       	mov	r2, r1
    1122:	a4 fe       	sbrs	r10, 4
    1124:	10 c0       	rjmp	.+32     	; 0x1146 <vfprintf+0x356>
    1126:	b6 01       	movw	r22, r12
    1128:	80 e3       	ldi	r24, 0x30	; 48
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	0e 94 ef 08 	call	0x11de	; 0x11de <fputc>
    1130:	a2 fe       	sbrs	r10, 2
    1132:	17 c0       	rjmp	.+46     	; 0x1162 <vfprintf+0x372>
    1134:	a1 fc       	sbrc	r10, 1
    1136:	03 c0       	rjmp	.+6      	; 0x113e <vfprintf+0x34e>
    1138:	88 e7       	ldi	r24, 0x78	; 120
    113a:	90 e0       	ldi	r25, 0x00	; 0
    113c:	02 c0       	rjmp	.+4      	; 0x1142 <vfprintf+0x352>
    113e:	88 e5       	ldi	r24, 0x58	; 88
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	b6 01       	movw	r22, r12
    1144:	0c c0       	rjmp	.+24     	; 0x115e <vfprintf+0x36e>
    1146:	8a 2d       	mov	r24, r10
    1148:	86 78       	andi	r24, 0x86	; 134
    114a:	59 f0       	breq	.+22     	; 0x1162 <vfprintf+0x372>
    114c:	a1 fe       	sbrs	r10, 1
    114e:	02 c0       	rjmp	.+4      	; 0x1154 <vfprintf+0x364>
    1150:	8b e2       	ldi	r24, 0x2B	; 43
    1152:	01 c0       	rjmp	.+2      	; 0x1156 <vfprintf+0x366>
    1154:	80 e2       	ldi	r24, 0x20	; 32
    1156:	a7 fc       	sbrc	r10, 7
    1158:	8d e2       	ldi	r24, 0x2D	; 45
    115a:	b6 01       	movw	r22, r12
    115c:	90 e0       	ldi	r25, 0x00	; 0
    115e:	0e 94 ef 08 	call	0x11de	; 0x11de <fputc>
    1162:	89 14       	cp	r8, r9
    1164:	38 f4       	brcc	.+14     	; 0x1174 <vfprintf+0x384>
    1166:	b6 01       	movw	r22, r12
    1168:	80 e3       	ldi	r24, 0x30	; 48
    116a:	90 e0       	ldi	r25, 0x00	; 0
    116c:	0e 94 ef 08 	call	0x11de	; 0x11de <fputc>
    1170:	9a 94       	dec	r9
    1172:	f7 cf       	rjmp	.-18     	; 0x1162 <vfprintf+0x372>
    1174:	8a 94       	dec	r8
    1176:	f3 01       	movw	r30, r6
    1178:	e8 0d       	add	r30, r8
    117a:	f1 1d       	adc	r31, r1
    117c:	80 81       	ld	r24, Z
    117e:	b6 01       	movw	r22, r12
    1180:	90 e0       	ldi	r25, 0x00	; 0
    1182:	0e 94 ef 08 	call	0x11de	; 0x11de <fputc>
    1186:	81 10       	cpse	r8, r1
    1188:	f5 cf       	rjmp	.-22     	; 0x1174 <vfprintf+0x384>
    118a:	22 20       	and	r2, r2
    118c:	09 f4       	brne	.+2      	; 0x1190 <vfprintf+0x3a0>
    118e:	42 ce       	rjmp	.-892    	; 0xe14 <vfprintf+0x24>
    1190:	b6 01       	movw	r22, r12
    1192:	80 e2       	ldi	r24, 0x20	; 32
    1194:	90 e0       	ldi	r25, 0x00	; 0
    1196:	0e 94 ef 08 	call	0x11de	; 0x11de <fputc>
    119a:	2a 94       	dec	r2
    119c:	f6 cf       	rjmp	.-20     	; 0x118a <vfprintf+0x39a>
    119e:	f6 01       	movw	r30, r12
    11a0:	86 81       	ldd	r24, Z+6	; 0x06
    11a2:	97 81       	ldd	r25, Z+7	; 0x07
    11a4:	02 c0       	rjmp	.+4      	; 0x11aa <vfprintf+0x3ba>
    11a6:	8f ef       	ldi	r24, 0xFF	; 255
    11a8:	9f ef       	ldi	r25, 0xFF	; 255
    11aa:	2b 96       	adiw	r28, 0x0b	; 11
    11ac:	e2 e1       	ldi	r30, 0x12	; 18
    11ae:	0c 94 a2 09 	jmp	0x1344	; 0x1344 <__epilogue_restores__>

000011b2 <strnlen_P>:
    11b2:	fc 01       	movw	r30, r24
    11b4:	05 90       	lpm	r0, Z+
    11b6:	61 50       	subi	r22, 0x01	; 1
    11b8:	70 40       	sbci	r23, 0x00	; 0
    11ba:	01 10       	cpse	r0, r1
    11bc:	d8 f7       	brcc	.-10     	; 0x11b4 <strnlen_P+0x2>
    11be:	80 95       	com	r24
    11c0:	90 95       	com	r25
    11c2:	8e 0f       	add	r24, r30
    11c4:	9f 1f       	adc	r25, r31
    11c6:	08 95       	ret

000011c8 <strnlen>:
    11c8:	fc 01       	movw	r30, r24
    11ca:	61 50       	subi	r22, 0x01	; 1
    11cc:	70 40       	sbci	r23, 0x00	; 0
    11ce:	01 90       	ld	r0, Z+
    11d0:	01 10       	cpse	r0, r1
    11d2:	d8 f7       	brcc	.-10     	; 0x11ca <strnlen+0x2>
    11d4:	80 95       	com	r24
    11d6:	90 95       	com	r25
    11d8:	8e 0f       	add	r24, r30
    11da:	9f 1f       	adc	r25, r31
    11dc:	08 95       	ret

000011de <fputc>:
    11de:	0f 93       	push	r16
    11e0:	1f 93       	push	r17
    11e2:	cf 93       	push	r28
    11e4:	df 93       	push	r29
    11e6:	fb 01       	movw	r30, r22
    11e8:	23 81       	ldd	r18, Z+3	; 0x03
    11ea:	21 fd       	sbrc	r18, 1
    11ec:	03 c0       	rjmp	.+6      	; 0x11f4 <fputc+0x16>
    11ee:	8f ef       	ldi	r24, 0xFF	; 255
    11f0:	9f ef       	ldi	r25, 0xFF	; 255
    11f2:	2c c0       	rjmp	.+88     	; 0x124c <fputc+0x6e>
    11f4:	22 ff       	sbrs	r18, 2
    11f6:	16 c0       	rjmp	.+44     	; 0x1224 <fputc+0x46>
    11f8:	46 81       	ldd	r20, Z+6	; 0x06
    11fa:	57 81       	ldd	r21, Z+7	; 0x07
    11fc:	24 81       	ldd	r18, Z+4	; 0x04
    11fe:	35 81       	ldd	r19, Z+5	; 0x05
    1200:	42 17       	cp	r20, r18
    1202:	53 07       	cpc	r21, r19
    1204:	44 f4       	brge	.+16     	; 0x1216 <fputc+0x38>
    1206:	a0 81       	ld	r26, Z
    1208:	b1 81       	ldd	r27, Z+1	; 0x01
    120a:	9d 01       	movw	r18, r26
    120c:	2f 5f       	subi	r18, 0xFF	; 255
    120e:	3f 4f       	sbci	r19, 0xFF	; 255
    1210:	20 83       	st	Z, r18
    1212:	31 83       	std	Z+1, r19	; 0x01
    1214:	8c 93       	st	X, r24
    1216:	26 81       	ldd	r18, Z+6	; 0x06
    1218:	37 81       	ldd	r19, Z+7	; 0x07
    121a:	2f 5f       	subi	r18, 0xFF	; 255
    121c:	3f 4f       	sbci	r19, 0xFF	; 255
    121e:	26 83       	std	Z+6, r18	; 0x06
    1220:	37 83       	std	Z+7, r19	; 0x07
    1222:	14 c0       	rjmp	.+40     	; 0x124c <fputc+0x6e>
    1224:	8b 01       	movw	r16, r22
    1226:	ec 01       	movw	r28, r24
    1228:	fb 01       	movw	r30, r22
    122a:	00 84       	ldd	r0, Z+8	; 0x08
    122c:	f1 85       	ldd	r31, Z+9	; 0x09
    122e:	e0 2d       	mov	r30, r0
    1230:	09 95       	icall
    1232:	89 2b       	or	r24, r25
    1234:	e1 f6       	brne	.-72     	; 0x11ee <fputc+0x10>
    1236:	d8 01       	movw	r26, r16
    1238:	16 96       	adiw	r26, 0x06	; 6
    123a:	8d 91       	ld	r24, X+
    123c:	9c 91       	ld	r25, X
    123e:	17 97       	sbiw	r26, 0x07	; 7
    1240:	01 96       	adiw	r24, 0x01	; 1
    1242:	16 96       	adiw	r26, 0x06	; 6
    1244:	8d 93       	st	X+, r24
    1246:	9c 93       	st	X, r25
    1248:	17 97       	sbiw	r26, 0x07	; 7
    124a:	ce 01       	movw	r24, r28
    124c:	df 91       	pop	r29
    124e:	cf 91       	pop	r28
    1250:	1f 91       	pop	r17
    1252:	0f 91       	pop	r16
    1254:	08 95       	ret

00001256 <__ultoa_invert>:
    1256:	fa 01       	movw	r30, r20
    1258:	aa 27       	eor	r26, r26
    125a:	28 30       	cpi	r18, 0x08	; 8
    125c:	51 f1       	breq	.+84     	; 0x12b2 <__ultoa_invert+0x5c>
    125e:	20 31       	cpi	r18, 0x10	; 16
    1260:	81 f1       	breq	.+96     	; 0x12c2 <__ultoa_invert+0x6c>
    1262:	e8 94       	clt
    1264:	6f 93       	push	r22
    1266:	6e 7f       	andi	r22, 0xFE	; 254
    1268:	6e 5f       	subi	r22, 0xFE	; 254
    126a:	7f 4f       	sbci	r23, 0xFF	; 255
    126c:	8f 4f       	sbci	r24, 0xFF	; 255
    126e:	9f 4f       	sbci	r25, 0xFF	; 255
    1270:	af 4f       	sbci	r26, 0xFF	; 255
    1272:	b1 e0       	ldi	r27, 0x01	; 1
    1274:	3e d0       	rcall	.+124    	; 0x12f2 <__ultoa_invert+0x9c>
    1276:	b4 e0       	ldi	r27, 0x04	; 4
    1278:	3c d0       	rcall	.+120    	; 0x12f2 <__ultoa_invert+0x9c>
    127a:	67 0f       	add	r22, r23
    127c:	78 1f       	adc	r23, r24
    127e:	89 1f       	adc	r24, r25
    1280:	9a 1f       	adc	r25, r26
    1282:	a1 1d       	adc	r26, r1
    1284:	68 0f       	add	r22, r24
    1286:	79 1f       	adc	r23, r25
    1288:	8a 1f       	adc	r24, r26
    128a:	91 1d       	adc	r25, r1
    128c:	a1 1d       	adc	r26, r1
    128e:	6a 0f       	add	r22, r26
    1290:	71 1d       	adc	r23, r1
    1292:	81 1d       	adc	r24, r1
    1294:	91 1d       	adc	r25, r1
    1296:	a1 1d       	adc	r26, r1
    1298:	20 d0       	rcall	.+64     	; 0x12da <__ultoa_invert+0x84>
    129a:	09 f4       	brne	.+2      	; 0x129e <__ultoa_invert+0x48>
    129c:	68 94       	set
    129e:	3f 91       	pop	r19
    12a0:	2a e0       	ldi	r18, 0x0A	; 10
    12a2:	26 9f       	mul	r18, r22
    12a4:	11 24       	eor	r1, r1
    12a6:	30 19       	sub	r19, r0
    12a8:	30 5d       	subi	r19, 0xD0	; 208
    12aa:	31 93       	st	Z+, r19
    12ac:	de f6       	brtc	.-74     	; 0x1264 <__ultoa_invert+0xe>
    12ae:	cf 01       	movw	r24, r30
    12b0:	08 95       	ret
    12b2:	46 2f       	mov	r20, r22
    12b4:	47 70       	andi	r20, 0x07	; 7
    12b6:	40 5d       	subi	r20, 0xD0	; 208
    12b8:	41 93       	st	Z+, r20
    12ba:	b3 e0       	ldi	r27, 0x03	; 3
    12bc:	0f d0       	rcall	.+30     	; 0x12dc <__ultoa_invert+0x86>
    12be:	c9 f7       	brne	.-14     	; 0x12b2 <__ultoa_invert+0x5c>
    12c0:	f6 cf       	rjmp	.-20     	; 0x12ae <__ultoa_invert+0x58>
    12c2:	46 2f       	mov	r20, r22
    12c4:	4f 70       	andi	r20, 0x0F	; 15
    12c6:	40 5d       	subi	r20, 0xD0	; 208
    12c8:	4a 33       	cpi	r20, 0x3A	; 58
    12ca:	18 f0       	brcs	.+6      	; 0x12d2 <__ultoa_invert+0x7c>
    12cc:	49 5d       	subi	r20, 0xD9	; 217
    12ce:	31 fd       	sbrc	r19, 1
    12d0:	40 52       	subi	r20, 0x20	; 32
    12d2:	41 93       	st	Z+, r20
    12d4:	02 d0       	rcall	.+4      	; 0x12da <__ultoa_invert+0x84>
    12d6:	a9 f7       	brne	.-22     	; 0x12c2 <__ultoa_invert+0x6c>
    12d8:	ea cf       	rjmp	.-44     	; 0x12ae <__ultoa_invert+0x58>
    12da:	b4 e0       	ldi	r27, 0x04	; 4
    12dc:	a6 95       	lsr	r26
    12de:	97 95       	ror	r25
    12e0:	87 95       	ror	r24
    12e2:	77 95       	ror	r23
    12e4:	67 95       	ror	r22
    12e6:	ba 95       	dec	r27
    12e8:	c9 f7       	brne	.-14     	; 0x12dc <__ultoa_invert+0x86>
    12ea:	00 97       	sbiw	r24, 0x00	; 0
    12ec:	61 05       	cpc	r22, r1
    12ee:	71 05       	cpc	r23, r1
    12f0:	08 95       	ret
    12f2:	9b 01       	movw	r18, r22
    12f4:	ac 01       	movw	r20, r24
    12f6:	0a 2e       	mov	r0, r26
    12f8:	06 94       	lsr	r0
    12fa:	57 95       	ror	r21
    12fc:	47 95       	ror	r20
    12fe:	37 95       	ror	r19
    1300:	27 95       	ror	r18
    1302:	ba 95       	dec	r27
    1304:	c9 f7       	brne	.-14     	; 0x12f8 <__ultoa_invert+0xa2>
    1306:	62 0f       	add	r22, r18
    1308:	73 1f       	adc	r23, r19
    130a:	84 1f       	adc	r24, r20
    130c:	95 1f       	adc	r25, r21
    130e:	a0 1d       	adc	r26, r0
    1310:	08 95       	ret

00001312 <__prologue_saves__>:
    1312:	2f 92       	push	r2
    1314:	3f 92       	push	r3
    1316:	4f 92       	push	r4
    1318:	5f 92       	push	r5
    131a:	6f 92       	push	r6
    131c:	7f 92       	push	r7
    131e:	8f 92       	push	r8
    1320:	9f 92       	push	r9
    1322:	af 92       	push	r10
    1324:	bf 92       	push	r11
    1326:	cf 92       	push	r12
    1328:	df 92       	push	r13
    132a:	ef 92       	push	r14
    132c:	ff 92       	push	r15
    132e:	0f 93       	push	r16
    1330:	1f 93       	push	r17
    1332:	cf 93       	push	r28
    1334:	df 93       	push	r29
    1336:	cd b7       	in	r28, 0x3d	; 61
    1338:	de b7       	in	r29, 0x3e	; 62
    133a:	ca 1b       	sub	r28, r26
    133c:	db 0b       	sbc	r29, r27
    133e:	cd bf       	out	0x3d, r28	; 61
    1340:	de bf       	out	0x3e, r29	; 62
    1342:	09 94       	ijmp

00001344 <__epilogue_restores__>:
    1344:	2a 88       	ldd	r2, Y+18	; 0x12
    1346:	39 88       	ldd	r3, Y+17	; 0x11
    1348:	48 88       	ldd	r4, Y+16	; 0x10
    134a:	5f 84       	ldd	r5, Y+15	; 0x0f
    134c:	6e 84       	ldd	r6, Y+14	; 0x0e
    134e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1350:	8c 84       	ldd	r8, Y+12	; 0x0c
    1352:	9b 84       	ldd	r9, Y+11	; 0x0b
    1354:	aa 84       	ldd	r10, Y+10	; 0x0a
    1356:	b9 84       	ldd	r11, Y+9	; 0x09
    1358:	c8 84       	ldd	r12, Y+8	; 0x08
    135a:	df 80       	ldd	r13, Y+7	; 0x07
    135c:	ee 80       	ldd	r14, Y+6	; 0x06
    135e:	fd 80       	ldd	r15, Y+5	; 0x05
    1360:	0c 81       	ldd	r16, Y+4	; 0x04
    1362:	1b 81       	ldd	r17, Y+3	; 0x03
    1364:	aa 81       	ldd	r26, Y+2	; 0x02
    1366:	b9 81       	ldd	r27, Y+1	; 0x01
    1368:	ce 0f       	add	r28, r30
    136a:	d1 1d       	adc	r29, r1
    136c:	cd bf       	out	0x3d, r28	; 61
    136e:	de bf       	out	0x3e, r29	; 62
    1370:	ed 01       	movw	r28, r26
    1372:	08 95       	ret

00001374 <_exit>:
    1374:	f8 94       	cli

00001376 <__stop_program>:
    1376:	ff cf       	rjmp	.-2      	; 0x1376 <__stop_program>
